<translations>
<comment></comment>
<translationBlock>
	<id>art-1715</id>
	<key><![CDATA[Find a bug in this page? %sEdit this page yourself, then submit a pull request.]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Fînd å büg în thîs pågə? %sEdît thîs pågə ʎøürsəlf, thən sübmît å püll rəqüəst.]]></auto>
</translationBlock>
<translationBlock>
	<id>art-3451</id>
	<key><![CDATA[Change the ''directory'' value to wherever you intend on installing this locally. Make sure this directory path ends in ''/docs''.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3452</id>
	<key><![CDATA[Rebuild the project normally, using maven. (Note that it seems that maven doesn't always pick up the changes to resource files, so you may need to do clean and build.) Then, from the cmdline, run]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3453</id>
	<key><![CDATA[ALIAS|code - This syntax highlights mscript code that is defined in an msa file]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3454</id>
	<key><![CDATA[There are several others worth looking at, see the DocGenTemplate.java source code for each.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3455</id>
	<key><![CDATA[The client renders the wiki formatting, as well as the syntax highlighting for non-mscript code blocks. Most simple wiki markup is supported, including tables. See the [%s page here] for a cheat sheet for this markup. Wiki templates (double left curly brace/double right curly brace) do not work, except for  a very limited subset, including function, object, keyword, and TakeNote. Raw HTML is also supported, including script tags, however, html should be a%sed whenever possible.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3456</id>
	<key><![CDATA[Different pages are generated from different sources, and may follow slightly different deployment rules, to see the specific rules that are followed, see the SiteDeploy.java file. Note that several file types are automatically scanned for, and their mere existence in the resources is enough to cause them to be processed. Other types of files are manually listed, and may be handled differently. Consult the SiteDeploy file to see how each page is exactly generated.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3457</id>
	<key><![CDATA[There are three processing stages. First, when the site is deployed, there is some template replacement done then. The java uses %s&lt;&#37;%s and %s&#37;&gt;%s or for simple templates where arguments need not also be parsed, just %s&#37;&#37;%s and %s&#37;&#37;%s. These allow the static pages to replace information in them at deploy time, using the jar itself to do the templating work. This is useful for pages that need information from the codebase, or it would in general be easier to parse the template in java instead of javascript. The template replacement has the template name, and can also accept arguments, for instance  %s&lt;&#37;TEMPLATE_NAME&#37;&gt;%s and for templates with arguments:  %s&lt;&#37;TEMPLATE_NAME|argument&#37;&gt;%s where TEMPLATE_NAME is the name of the template, and arguments are pipe separated. If the arguments have nested templates, they must use &lt;&#37; &#37;&gt;, the double percent variety cannot be nested. Depending on where exactly the page contents were generated from, the templates that are available may vary, and you'll need to trace the code for that specific page to see what templates are available. By and large however, all templates defined in DocGenTemplates.java are available everywhere.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3458</id>
	<key><![CDATA[Several steps of the rendering stage are (currently) handled in javascript, including the wiki parsing, and syntax highlighting for non-mscript code blocks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3459</id>
	<key><![CDATA[Following these directions will help you view the site locally:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3460</id>
	<key><![CDATA[Client side rendering]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3461</id>
	<key><![CDATA[There are a few notable templates worth discussing.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3462</id>
	<key><![CDATA[There are multiple approaches here, this just provides one approach. The key is that you need a local web server running, it's not sufficient to simply open the raw html files in your browser. These directions are the minimal instructions, but you may use an existing server for viewing, or modify this approach to suit your needs.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3463</id>
	<key><![CDATA[NOWIKI|text - Escapes the text, ensuring that no wiki markup will be processed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3464</id>
	<key><![CDATA[Create a configuration file somewhere on your file system, call it site-deploy-local.ini]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3465</id>
	<key><![CDATA[This page explains the templating system, and how it works. There are a number of systems that interact together to produce these web pages, and if you wish to contribute, it is helpful to understand how they work together. There are 3 main systems to be aware of. Initial template replacement, wiki replacement, and page rendering.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3466</id>
	<key><![CDATA[After making a change]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3467</id>
	<key><![CDATA[One time setup]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3468</id>
	<key><![CDATA[Next, we need to do the initial generation:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3469</id>
	<key><![CDATA[[%s Install node and npm.]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3470</id>
	<key><![CDATA[From the command prompt, ''cd'' to one folder above where you specified in the ''directory'' value in the config (that is, the root of the website) and run]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3471</id>
	<key><![CDATA[Testing Locally]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3472</id>
	<key><![CDATA[When making changes to the documentation, it may be worth running locally to see your changes before they go to the live site.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3473</id>
	<key><![CDATA[PRE|text - Creates a &lt;pre&gt; code block, escaping all html special characters in the text]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3474</id>
	<key><![CDATA[If a page needs to run javascript, it can, by way of normal script tags. Do be aware that the typical jquery onload mechanism does not work, because there is page rendering that needs to happen first. In order to properly hook into the code after the page really is finished loading, a special promise object is defined. All your code should go in  a block that looks like this:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3475</id>
	<key><![CDATA[Adding the ''--use-local-cache'' flag will potentially speed up the deployment. Refresh the webpage that was launched by the http-server command.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3476</id>
	<key><![CDATA[CODE|code - This syntax highlights pure mscript code.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3477</id>
	<key><![CDATA[After the templates are replaced, for pages, the file is inserted into the frame.html wrapper, which provides the basic structure of the html document.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3479</id>
	<key><![CDATA[Each dev session]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3480</id>
	<key><![CDATA[On the first run, this may take a while, so just sit back and relax.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3481</id>
	<key><![CDATA[Leave this command window open while you develop. You may also wish to disable the cache in your web browser, so that old versions of the pages won't be cached.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3482</id>
	<key><![CDATA[Initial template replacement and deployment]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3483</id>
	<key><![CDATA[SYNTAX|type|code - Given the language or code type, will apply the proper html to make sure the text is syntax highlighted (for languages other than mscript)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-3484</id>
	<key><![CDATA[Once the page is deployed, for html pages, they are also validated, so make sure that the page content will validate.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-5152</id>
	<key><![CDATA[About]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Abøüt]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5153</id>
	<key><![CDATA[Home]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Hømə]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5154</id>
	<key><![CDATA[Privacy Policy]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Prîvåcʎ Pølîcʎ]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5155</id>
	<key><![CDATA[Sponsors]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>art-5156</id>
	<key><![CDATA[Help]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Həlp]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5157</id>
	<key><![CDATA[Team. All rights reserved.]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Təåm. All rîghts rəsərvəd.]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5158</id>
	<key><![CDATA[Docs]]></key>
	<comment></comment>
	<translation></translation>
	<auto><![CDATA[Døcs]]></auto>
</translationBlock>
<translationBlock>
	<id>art-5196</id>
	<key><![CDATA[Alternatively, you can install the http-server package, and leave off the ''npx'' command.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
</translations>
