<translations>
<comment></comment>
<translationBlock>
	<id>nl-1715</id>
	<key><![CDATA[Find a bug in this page? %sEdit this page yourself, then submit a pull request.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5152</id>
	<key><![CDATA[About]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5153</id>
	<key><![CDATA[Home]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5154</id>
	<key><![CDATA[Privacy Policy]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5155</id>
	<key><![CDATA[Sponsors]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5156</id>
	<key><![CDATA[Help]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5157</id>
	<key><![CDATA[Team. All rights reserved.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5158</id>
	<key><![CDATA[Docs]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5200</id>
	<key><![CDATA[Alternatively, and probably preferably, if you have mixed file types in a given folder, add this to your site config file:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5201</id>
	<key><![CDATA[MethodScript has support for running as a cgi-bin in a webserver. The setup for this is slightly different, and the sections below outline how to setup each server type. For other server types, it may still be possible to run, but you'll need to modify the instructions to cater to your server type.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5202</id>
	<key><![CDATA[Now, we need to install MethodScript itself. The jar may be installed anywhere, but keep in mind the configuration files are created beside the jar, and need to be writable by the server process, www-data. To do that, place the MethodScript jar in /opt/mscript, create a folder /opt/mscript/MethodScript, and run]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5203</id>
	<key><![CDATA[For ScriptAlias, add the following line to either apache2.conf, httpd.conf, or the given config file in your  sites-available directory. This should point to the directory that you want your scripts to be loaded from, along with the url that should be intercepted. For instance:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5204</id>
	<key><![CDATA[Doing it this way allows for .ms files to be run as scripts, but not other files, such as html and css files.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5206</id>
	<key><![CDATA[Next, add either a ScriptAlias directive or AddHandler directive.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5208</id>
	<key><![CDATA[First step is to enable the CGID mod]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5209</id>
	<key><![CDATA[This will set up the necessary files and folder so that MethodScript can properly run under the www-data user.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5210</id>
	<key><![CDATA[This is a very rudimentary example, but it demonstrates how to properly interact with the system at a very low level.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5211</id>
	<key><![CDATA[Headers and other data are provided through the environment variables, which you can access with %s. See this script for an example of how to provide basic functionality:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5212</id>
	<key><![CDATA[Apache2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5213</id>
	<key><![CDATA[Be sure to restart apache after all the configuration changes to make them apply.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5218</id>
	<key><![CDATA[This would cause calls to /var/www/html/index.ms via "%s" to be run as scripts, rather than simply serving the resource as plain text. You may modify this to reflect where you wish to actually put the scripts, and what the url should be. This works with no further configuration on Ubuntu, however.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5219</id>
	<key><![CDATA[{{TakeNote|text=Note that CGI is very inefficient, and has extremely limited flexibility, and so this setup is not necessarily recommended, but is shown to demonstrate the capabilities of MethodScript. Better solutions will be provided in the future.}}]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5269</id>
	<key><![CDATA[Regardless, you'll need Java and your server of choice installed, as well as the MethodScript jar. Installation of these things is outside the scope of this tutorial, and it is assumed that you have basic web pages being displayed through your server. The guide also assumes that you're running on Ubuntu Linux, except for IIS, which is assumed to be running on Windows Server Datacenter 2019. If this is not the case, the basic setup should nonetheless be the same, but you may  need to modify file paths.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5270</id>
	<key><![CDATA[Example Script]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5284</id>
	<key><![CDATA[Edit the /etc/nginx/sites-available/default file. Within the server {} section, add a link to the config file.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5285</id>
	<key><![CDATA[Copy the example config file into the nginx config directory.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5286</id>
	<key><![CDATA[Create a file at /etc/nginx/fcgiwrap.conf, with the following content:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5287</id>
	<key><![CDATA[NGINX]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5288</id>
	<key><![CDATA[First, ensure that nginx is properly installed and running. We will be using the fastcgi wrapper, though we will not be taking advantage of its daemon features, so this is not a true FastCGI application.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5289</id>
	<key><![CDATA[Create the cgi-bin folder, and assign the correct permissions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>nl-5290</id>
	<key><![CDATA[Restart nginx.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
</translations>
