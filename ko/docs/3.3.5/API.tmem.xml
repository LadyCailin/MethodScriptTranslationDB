<translations>
<comment></comment>
<translationBlock>
	<id>ko-1</id>
	<key><![CDATA[Returns true if the given entity has AI.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-2</id>
	<key><![CDATA[Implodes an associative array. The innerGlue is used to glue the key to the value, and then the outerGlue is used to glue those elements together. This only works with associative arrays, and will throw CastException if the array passed in isa  normal array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3</id>
	<key><![CDATA[Returns an arbitrary number based on the most accurate clock available on this system. Only useful when compared to other calls to nano_time(). The return is in nano seconds. See the Java API on System.nanoTime() for more information on the usage of this function.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-4</id>
	<key><![CDATA[Sends a resourcepack URL to the player&apos;s client. If the client has not been requested to change resources in the past, they will receive a confirmation dialog before downloading and switching to the new pack. Clients that ignore server resources will not receive the request, so this function will not affect them.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5</id>
	<key><![CDATA[Reduces an array to a single value. This is useful for, for instance, summing the values of an array. The previously calculated value, then the next value of the array are sent to the closure, which is expected to return a value, based on the two values, which will be sent again to the closure as the new calculated value. If the array is empty, %s is returned, and if the array has exactly one value in it, only that value is returned. Associative arrays are supported, but the order is based on the key order, which may not be as expected. The keys of the array are ignored.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6</id>
	<key><![CDATA[Returns an array of potion effect arrays showing the effects on this mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-7</id>
	<key><![CDATA[Sets the total experience of a player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-8</id>
	<key><![CDATA[An array of players whitelisted on the server.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-9</id>
	<key><![CDATA[Returns the block location, entity UUID, or virtual id of the inventory the player is currently viewing. If the player is viewing their own inventory or no inventory, the player&apos;s UUID is returned. When the inventory is virtual but has no id, it will return %s. The returned value can be used in other inventory functions unless it is %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-10</id>
	<key><![CDATA[Gets the entity UUID that a spectator is viewing. If the player isn&apos;t spectating from an entity, %s is returned. If the player isn&apos;t in spectator mode, an IllegalArgumentException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-12</id>
	<key><![CDATA[Deletes a virtual inventory. The inventory will be closed for all viewers. Returns whether or not an inventory with that id existed and was removed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-13</id>
	<key><![CDATA[byte_array, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-14</id>
	<key><![CDATA[Returns the levenshtein distance of two character sequences. For instance, &quot;123&quot; and &quot;133&quot; would have a string distance of 1, while &quot;123&quot; and &quot;123&quot; would be 0, since they are the same string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-15</id>
	<key><![CDATA[Returns the mode across all the numbers in the set. The input may be an array of numbers, or individual numbers as arguments. The mode of a set of numbers is the values that occur most in the set. This function supports bimodal (and generally n-modal sets), as well as fully unique sets, by returning an array. If the set is fully unique, i.e. [1, 2, 3], then the original set will be returned all values occur once). If there are more than one modes, i.e. [1, 1, 2, 3, 3], then an array of both 1 and 3 will be returned. The values will not necessarily be returned in any particular order.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-17</id>
	<key><![CDATA[array, item, index]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-18</id>
	<key><![CDATA[This class is used to manage various tasks throughout MethodScript. It is a task manager of sorts.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-20</id>
	<key><![CDATA[Sets a player&apos;s display name. If the first name isn&apos;t provided, it sets the display name of the player running the command. See reset_display_name() also. All player functions expect the player&apos;s real name, not their display name.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-21</id>
	<key><![CDATA[Stops tracking the given scoreboard, unless it is &apos;main&apos;, because that never goes away. If %sify is true (defaults to true), all scores, teams, and objectives will be cleared, and all tracked players currently online will be switched to the main scoreboard, essentially removing all references to the board so it can be garbage-collected.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-22</id>
	<key><![CDATA[Returns true if entity exists, otherwise false.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-24</id>
	<key><![CDATA[Gets the compass target location for the specified player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-25</id>
	<key><![CDATA[[%splayer%s]%s, slot]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-26</id>
	<key><![CDATA[[%splayer, [index%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-27</id>
	<key><![CDATA[Clears a player&apos;s entire inventory (including armor).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-28</id>
	<key><![CDATA[Sets a max speed for given entity. Make sure that the entity is a minecart.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-29</id>
	<key><![CDATA[@b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-31</id>
	<key><![CDATA[Sets the value of a particular runtime setting. Various system components can define these differently, so see the documentation for a particular component to see if it has a runtime setting that can be changed, and what the name and setting should be. Note that there is intentionally no mechanism provided to get the value of a setting, as this is not meant to be used for user settings, just system level settings. To set your own user based settings, use %s/%s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-32</id>
	<key><![CDATA[start, finish, %s[%sincrement%s]%s %s finish]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-33</id>
	<key><![CDATA[Gets the player&apos;s health.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-34</id>
	<key><![CDATA[Runs a command as the current player. Useful for running commands in a loop. Note that this accepts commands like from the chat; with a forward slash in front.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-35</id>
	<key><![CDATA[Returns the hyperbolic tangent of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-36</id>
	<key><![CDATA[value, %s[%sequals, code%s]%s..., %s[%sdefaultCode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-37</id>
	<key><![CDATA[Shows an enchanting to the current player,  or a specified player. Note that power is defined by how many bookcases are near.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-38</id>
	<key><![CDATA[Works in reverse of add_to_inventory(), but returns the number of items actually taken, which will be from 0 to qty. Target must be a location array or entity UUID. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-39</id>
	<key><![CDATA[Parses a date string, and returns an integer timestamp representing that time. This essentially works in reverse of %s. The dateFormat string is the same as simple_date, see the documentation for that function to see full details on that. The dateString is the actual date to be parsed. The dateFormat should be the equivalent format that was used to generate the dateString. In general, this function is fairly lenient, and will still try to parse a dateString that doesn&apos;t necessarily conform to the given format, but it shouldn&apos;t be relied on to work with malformed data. Various portions of the date may be left off, in which case the missing portions will be assumed, for instance, if the time is left off completely, it is assumed to be midnight, and if the minutes are left off,  it is assumed to be on the hour, if the date is left off, it is assumed to be today, etc.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-40</id>
	<key><![CDATA[xml, xpath]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-42</id>
	<key><![CDATA[Executes arbitrary MethodScript. Note that this function is very experimental, and is subject to changing or removal. To globally disable use of eval, set the runtime setting &quot;function.eval.disable&quot; to true, which will cause use of the function to throw an exception.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-43</id>
	<key><![CDATA[Returns the command string in the Command Block at the given location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-44</id>
	<key><![CDATA[Returns whether or not the given item is %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-45</id>
	<key><![CDATA[Clears all recipes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-47</id>
	<key><![CDATA[Divides the arguments from left to right, and returns either a double or an integer. If you divide by zero, a RangeException is thrown. Operator syntax is also supported: 2 / 2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-48</id>
	<key><![CDATA[val1, val2%s[%s, valX...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-49</id>
	<key><![CDATA[timeInMS, %s[%sinitialDelayInMS,%s]%s closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-50</id>
	<key><![CDATA[This class contains all the methods needed to manipulate a byte array primitive. Since byte arrays would be very inefficient to implement using a normal array, this data type allows for more efficient operations, while still allowing for low level data access. Most data transferred within scripts is higher level, and does not require access to a byte array, however, code that interacts with external processes may require use of these functions to properly manipulate the data. Note that all the methods deal with low level types, so the following definitions apply: a byte is 8 bits, a short is 16 bits, an int is 32 bits, a long is 64 bits. UTF-8 strings are supported directly. The byte array is automatically resized as needed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-51</id>
	<key><![CDATA[associativeArray, innerGlue, outerGlue]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-52</id>
	<key><![CDATA[horse, rider]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-53</id>
	<key><![CDATA[These class provides functions that allow strings to be manipulated]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-54</id>
	<key><![CDATA[Returns the path to the current working directory. This is available outside cmdline mode, but is probably only useful for debugging, meta, or informational purposes when not in cmdline interpreter mode, as the current working directory is known simply by knowing what file this is running from. When run from a context where there is no working directory, a ShellException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-55</id>
	<key><![CDATA[Returns whether or not the given item is an integer. Note that numeric strings can usually be used as integers, however this function checks the actual datatype of the item. If you just want to see if an item can be used as a number, use is_integral() or is_numeric() instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-56</id>
	<key><![CDATA[world_name]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-57</id>
	<key><![CDATA[Gets the block data as an array at the location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-58</id>
	<key><![CDATA[EntityManagement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-59</id>
	<key><![CDATA[T]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-60</id>
	<key><![CDATA[Returns an all caps version of str]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-61</id>
	<key><![CDATA[If banned is true, address is added to banned-ips.txt, if false, the address is removed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-63</id>
	<key><![CDATA[val1, %s[%sval2...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-64</id>
	<key><![CDATA[Works like %s, but only if debug-mode is enabled in the preferences. See %s for details of the output.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-65</id>
	<key><![CDATA[Asyncronously reads in a file. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-66</id>
	<key><![CDATA[If propertyName is set, that single property is returned, or %s if that property doesn&apos;t exist. If propertyName is not set, an associative array with all the system properties is returned. This mechanism hooks into Java&apos;s system property mechanism, and is just a wrapper for that. System properties are more reliable than environmental variables, and so are preferred in cases where they exist. For more information about system properties, see %s. In addition, known preferences listed in preferences.ini are also included, starting with the prefix &quot;methodscript.preference.&quot;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-67</id>
	<key><![CDATA[Given two sides of a right triangle, returns the length of the hypotenuse, using the equation a² + b² = c², where a and b are the arguments provided.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-68</id>
	<key><![CDATA[Sets the cmdline prompt. This is only usable or useful in cmdline interpreter mode. The closure should return a string, that string will be used as the prompt. The closure is called each time a prompt needs generating, thereby allowing for dynamic prompts. A boolean is sent to the closure, if true, the shell is in shellMode, meaning the command is interpreted as a shell command. If false, it is in normal mscript mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-69</id>
	<key><![CDATA[Sets the time of a given player. Relative defaults to false, but if true, the time will be an offset and the player&apos;s time will still progress. Otherwise it will be locked and should be a number from 0 to 24000, else it is modulo scaled. Alternatively, common time notation (9:30pm, 4:00 am) is acceptable, and convenient english mappings also exist:&lt;ul&gt;&lt;li&gt;afternoon = 8000&lt;/li&gt;&lt;li&gt;dawn = 22500&lt;/li&gt;&lt;li&gt;day = 2000&lt;/li&gt;&lt;li&gt;dusk = 13500&lt;/li&gt;&lt;li&gt;earlymorning = 20000&lt;/li&gt;&lt;li&gt;evening = 12000&lt;/li&gt;&lt;li&gt;midday = 6000&lt;/li&gt;&lt;li&gt;midnight = 18000&lt;/li&gt;&lt;li&gt;morning = 0&lt;/li&gt;&lt;li&gt;night = 14000&lt;/li&gt;&lt;li&gt;noon = 6000&lt;/li&gt;&lt;li&gt;sunrise = 23000&lt;/li&gt;&lt;li&gt;sunset = 13000&lt;/li&gt;&lt;/ul&gt;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-70</id>
	<key><![CDATA[Returns an array of info about the material. If a trait is specified, it returns only that trait. Available traits: hasGravity, isBlock, isBurnable, isEdible, isFlammable, isOccluding, isRecord, isSolid, isTransparent, isInteractable, maxDurability, hardness (for block materials only), blastResistance (for block materials only), and maxStacksize. The accuracy of these values depend on the server implementation.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-71</id>
	<key><![CDATA[path, content, %s[%smode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-72</id>
	<key><![CDATA[Sets whether or not the weather can have thunder. The third argument can specify how long the thunder should last in server ticks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-73</id>
	<key><![CDATA[Prompts the user for a password. This only works in cmdline mode. If mask is true (default), then the password displays * characters for each password character they type. If mask is false, the field stays blank as they type. What they type is returned once they hit enter. The value returned is a secure_string, so to get the actual password, you must use decrypt_secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-75</id>
	<key><![CDATA[Returns the sin of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-76</id>
	<key><![CDATA[location_from, location_to]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-77</id>
	<key><![CDATA[Gets the total experience of a player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-78</id>
	<key><![CDATA[Calculate yaw from one location to another on the X-Z plane. The rotation is measured in degrees (0-359.99...) relative to the (x=0,z=1) vector, which points south. Throws a FormatException if locations have differing worlds.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-79</id>
	<key><![CDATA[cookieJar]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-80</id>
	<key><![CDATA[Returns true or false if the specified entity is tameable]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-81</id>
	<key><![CDATA[component]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-82</id>
	<key><![CDATA[s]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-83</id>
	<key><![CDATA[Works like a foreach, except if the array is empty, the else code runs instead. That is, if the code would not run at all, the else condition would. In general, brace syntax and use of foreach(){ } else { } syntax is preferred, instead of using foreachelse directly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-84</id>
	<key><![CDATA[byteData]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-85</id>
	<key><![CDATA[[%splayer%s]%s, speed]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-86</id>
	<key><![CDATA[StringHandling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-87</id>
	<key><![CDATA[array, value, %s[%svalue2...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-88</id>
	<key><![CDATA[Adds a tag to the entity. Returns whether or not it was successful.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-89</id>
	<key><![CDATA[These functions provide a hook into game functionality.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-90</id>
	<key><![CDATA[[%snamespace, ...,%s]%s key]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-91</id>
	<key><![CDATA[locationArray %s %s[%sworld%s]%s, x, y, z]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-92</id>
	<key><![CDATA[Returns a new rand value. If the seed used to create the resource is the same, each resulting series of numbers will be the same.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-93</id>
	<key><![CDATA[[%splayer%s]%s, saturation]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-95</id>
	<key><![CDATA[Returns true if the runtime setting is set. This will also return true if the value of the setting is %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-96</id>
	<key><![CDATA[Returns the xor of the two values.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-97</id>
	<key><![CDATA[Manually logs a timestamped message to the debug log and the console, if debug-mode is set to true in the preferences]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-98</id>
	<key><![CDATA[Returns an array of arrays about the objectives on the given scoreboard, which defaults to &apos;main&apos; if not given. If criteria is given, only objectives with that criteria will be returned. The arrays contain the keys name, displayname, slot, modifiable, and criteria.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-99</id>
	<key><![CDATA[split, string, %s[%slimit%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-100</id>
	<key><![CDATA[value, min, max]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-101</id>
	<key><![CDATA[player, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-103</id>
	<key><![CDATA[[%sprofile%s]%s, options]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-104</id>
	<key><![CDATA[[%splayerName%s]%s, %s[%smessage%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-105</id>
	<key><![CDATA[Returns the result of a greater than operation. Operator syntax is also supported: @a &amp;gt; @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-106</id>
	<key><![CDATA[Registers a plugin channel for CommandHelper to listen on. Channel name should be a string that is all lower-case, no longer than 32 characters, and contain a colon, or it will throw an IllegalArgumentException. Incoming messages can be inspected by binding to &apos;plugin_message_received&apos;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-107</id>
	<key><![CDATA[This class contains functions related to Exception handling in MethodScript]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-108</id>
	<key><![CDATA[Removes the last task at the end of the queue from the queue.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-109</id>
	<key><![CDATA[Performs a shallow clone on an array (as opposed to a deep clone). See the examples for more info.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-110</id>
	<key><![CDATA[marqueeName]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-111</id>
	<key><![CDATA[[%slocationArray%s]%s, distance]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-112</id>
	<key><![CDATA[Allows you to manipulate the environment around the player]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-113</id>
	<key><![CDATA[Returns the sum across all the numbers in the set. The input may be an array of numbers, or individual numbers as arguments. The sum is the result of adding all the numbers in the set together.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-114</id>
	<key><![CDATA[Returns the rot13 version of val. Note that rot13(rot13(val)) returns val]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-115</id>
	<key><![CDATA[Returns the sha512 hash of the specified string. Note that sha512 is considered more secure than sha1 and md5 (and sha256, because it takes longer to calculate), and is typically used when storing sensitive data. It is a one way hashing algorithm. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-116</id>
	<key><![CDATA[string, %s[%suseAdvanced%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-117</id>
	<key><![CDATA[entityUUID, player]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-118</id>
	<key><![CDATA[Compiler]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-119</id>
	<key><![CDATA[Subtracts the arguments from left to right, and returns either a double or an integer. Operator syntax is also supported: @a - @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-120</id>
	<key><![CDATA[Stores a value in the global storage register. An arbitrary value is stored with the given key, and can be retreived using import. If the value is already stored, it is overwritten. See %s. The reference to the value is stored, not a copy of the value, so in the case of arrays, manipulating the contents of the array will manipulate the stored value. An array may be used as a key. It is converted into a string with the array values separated by dots. export() is threadsafe.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-121</id>
	<key><![CDATA[Sets the difficulty of the world with the given name, or all worlds if the name is not given. The difficulty can be PEACEFUL, EASY, NORMAL, or HARD.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-122</id>
	<key><![CDATA[Right shifts value bitsToShift times, pushing a 0, making this an unsigned right shift.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-123</id>
	<key><![CDATA[Attempts to kill the specified task. The taskType and id will be listed with the task in the task manager. If the task is already finished, doesn&apos;t exist, or already in the process of finishing, nothing happens.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-125</id>
	<key><![CDATA[value, type]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-126</id>
	<key><![CDATA[Returns a string formatted to the given formatString specification, using the parameters passed in. The formatString should be formatted according to [%s this standard], with the caveat that the parameter types are automatically cast to the appropriate type, if possible. Calendar/time specifiers, (t and T) expect an integer which represents unix time, but are otherwise valid. All format specifiers in the documentation are valid. This works the same as lsprintf with the locale set to &quot;DEFAULT&quot;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-127</id>
	<key><![CDATA[Returns the first true value. The arguments to this function are lazily evaluated, so if the first value evaluates to true, the rest of the arguments will not be evaluated. If none of the values are true, the last value is returned (which will be falsy). Usage of the operator is preferred:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-128</id>
	<key><![CDATA[Returns whether or not the item is an array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-129</id>
	<key><![CDATA[Saves current players to disk.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-130</id>
	<key><![CDATA[player, sound, %s[%scategory%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-131</id>
	<key><![CDATA[[%sscoreboard%s]%s, %s[%scriteria%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-132</id>
	<key><![CDATA[Unloads a chunk for a world using the x and z coordinates. The current player&apos;s world is used if one is not provided.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-133</id>
	<key><![CDATA[Returns a location array of the space that the player is currently looking at. This is the space where if they placed a block (and were close enough), it would end up going.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-134</id>
	<key><![CDATA[Returns the name of the given mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-135</id>
	<key><![CDATA[prompt, %s[%smask%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-136</id>
	<key><![CDATA[script_string]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-137</id>
	<key><![CDATA[This function works similar to a try-catch block in most languages. If the code in tryCode throws an exception, instead of killing the whole script, it stops running, and begins running the catchCode. var should be an ivariable, and it is set to an array containing information about the exception. Consider using try/catch blocks instead of the try function. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-138</id>
	<key><![CDATA[key, val]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-139</id>
	<key><![CDATA[Sets the display name and/or slot of the given objective. If arg 2 is not an array, it is assumed to be the displayname, otherwise arg 2 should be an array with keys &apos;displayname&apos; and/or &apos;slot&apos;, affecting their respective properties. A %s name resets it to the actual name, and %s slot removes it from all displays. Slot can be one of: BELOW_NAME, PLAYER_LIST, or SIDEBAR If the displayname is too long, a LengthException will be thrown. The max length may differ based on server implementation, but will probably be 128.. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-140</id>
	<key><![CDATA[Returns the string s with trailing whitespace cut off]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-141</id>
	<key><![CDATA[Returns a UTF-8 encoded string, from the given position, or wherever the marker is currently at by default. The string is assumed to have encoded the length of the string with a 32 bit integer, then the string bytes. (This will be the case is the byte_array was encoded with ba_set_string.) The encoding of the string may be set, but defaults to UTF-8.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-142</id>
	<key><![CDATA[Provides functions for creating and using objects. None of these methods should normally be used, all of them provide easier to use compiler support.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-143</id>
	<key><![CDATA[string, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-144</id>
	<key><![CDATA[Returns true if any value in the array meets some test, which the closure should return true or false about. Not all values will necessarily be checked, once a value is determined to pass the check, execution is stopped, and true is returned. The closure will be passed each value in the array, one at a time, and must return a boolean.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-145</id>
	<key><![CDATA[Returns a location array of the bed block the player last slept in. The player will normally respawn next to this bed if they die. However, this respawn location can be forcibly be set by plugins or commands to any location, like when using set_pbed_location().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-147</id>
	<key><![CDATA[This class provides various functions to manage control flow.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-148</id>
	<key><![CDATA[If possible, makes the entity glide.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-149</id>
	<key><![CDATA[BukkitMetadata]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-150</id>
	<key><![CDATA[[%splayer%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-151</id>
	<key><![CDATA[[%splayer%s]%s, slotNumber]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-152</id>
	<key><![CDATA[[%splayer%s]%s, invArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-153</id>
	<key><![CDATA[eventName, eventObject, %s[%sserverWide%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-154</id>
	<key><![CDATA[Makes an HTTP request to the given url. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-155</id>
	<key><![CDATA[Dynamically calls a user defined procedure. call_proc(_myProc, &apos;var1&apos;) is the equivalent of _myProc(&apos;var1&apos;), except you could dynamically build the procedure name if need be. This is useful for dynamic coding, however, closures work best for callbacks. Throws an InvalidProcedureException if the procedure isn&apos;t defined. If you are hardcoding the first parameter, a warning will be issued, because it is much more efficient and safe to directly use a procedure if you know what its name is beforehand.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-156</id>
	<key><![CDATA[Works like array_sort, but does the sort on another thread, then calls the closure and sends it the sorted array. This is useful if the array is large enough to actually &quot;stall&quot; the server when doing the sort. Sort type should be one of REGULAR, NUMERIC, STRING or STRING_IC]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-158</id>
	<key><![CDATA[locationArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-159</id>
	<key><![CDATA[There may be other exception types as well, refer to the documentation of any extensions you have installed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-160</id>
	<key><![CDATA[var1, var2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-161</id>
	<key><![CDATA[locationArray, %s[%smagnitude%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-162</id>
	<key><![CDATA[name, item]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-163</id>
	<key><![CDATA[Returns the first false value. The arguments to this function are lazily evaluated, so if the first value evaluates to false, the rest of the arguments will not be evaluated. If none of the values are false, true is returned. Usage of the operator is preferred: &amp;&amp;&amp;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-164</id>
	<key><![CDATA[recipeArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-165</id>
	<key><![CDATA[message]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-166</id>
	<key><![CDATA[locationArray, blockName, %s[%svectorArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-167</id>
	<key><![CDATA[sets the age of the mob to the specified int, and locks it at that age if lockAge is true, but by default it will not. Throws a UnageableMobException if the mob does not age naturally.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-168</id>
	<key><![CDATA[Splits a string into parts, using the split as the index. Though it can be used in every single case you would use reg_split, this does not use regex, and therefore can take a literal split expression instead of needing an escaped regex, and *may* perform better than the regex versions, as it uses an optimized tokenizer split, instead of Java regex. Limit defaults to infinity, but if set, only that number of splits will occur.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-169</id>
	<key><![CDATA[Gets the player&apos;s level.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-170</id>
	<key><![CDATA[Creates a new user defined procedure (also known as &quot;function&quot;), with the given name and parameters, that can be called later in code. The name of the procedure must be a constant and its parameters must be variables. Please see the more detailed documentation on procedures for more information. In general, brace syntax and keyword usage is preferred: proc _myProc(@a, @b){ procCode(@a, @b); }]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-172</id>
	<key><![CDATA[[%sclientId%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-173</id>
	<key><![CDATA[Stops the specified sound for the given player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-174</id>
	<key><![CDATA[Encodes the given byte_array data into a base 64 byte_array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-175</id>
	<key><![CDATA[Add to inventory the specified item. The specifier must be a location array, entity UUID, or virtual inventory id. The items are distributed in the inventory, first filling up slots that have the same item type, up to the max stack size, then fills up empty slots, until either the entire inventory is filled, or the entire amount has been given. If the inventory is full, number of items that were not added is returned, which will be less than or equal to the quantity provided. Otherwise, returns 0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-176</id>
	<key><![CDATA[[%splayer%s]%s, %s[%slistName%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-177</id>
	<key><![CDATA[subject, search, replacement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-179</id>
	<key><![CDATA[val, %s[%sbase%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-180</id>
	<key><![CDATA[[%splayer [, player%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-181</id>
	<key><![CDATA[channel]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-182</id>
	<key><![CDATA[proc_name, %s[%svar1...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-183</id>
	<key><![CDATA[Sets the visibility of the current player (or the one specified) to visible or invisible (based on the value of isVanished) from the view of the otherPlayer. This is the raw access function, you probably shouldn&apos;t use this, as the CommandHelper vanish api functions will probably be easier to use.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-184</id>
	<key><![CDATA[player, msg]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-185</id>
	<key><![CDATA[locationArray, %s[%scheckMode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-186</id>
	<key><![CDATA[Clears out all tasks that are on the queue. If no tasks were on the queue, nothing happens.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-187</id>
	<key><![CDATA[ByteArrays]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-188</id>
	<key><![CDATA[byte_array, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-189</id>
	<key><![CDATA[number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-190</id>
	<key><![CDATA[Constructs a secure_string from a given char array or string. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-191</id>
	<key><![CDATA[array, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-192</id>
	<key><![CDATA[byte_array, setLittleEndian]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-193</id>
	<key><![CDATA[Multiplies the arguments together, and returns either a double or an integer. Operator syntax is also supported: 2 * 2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-194</id>
	<key><![CDATA[value, %s[%sflavor%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-196</id>
	<key><![CDATA[locationArray, soundArray%s[%s, players%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-197</id>
	<key><![CDATA[Returns the combined light level at a block, taking into account all sources.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-199</id>
	<key><![CDATA[Reads in a file, and returns a byte_array for it. The file is returned exactly as is on disk, no conversions are done. base-dir restrictions are enforced for the path, the same as read(). If file is relative, it is assumed to be relative to this file. This is useful for managing binary files.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-200</id>
	<key><![CDATA[Sets a task to occur at a regular interval, given a cron style interval. This allows for an easier way to specify that a task should happen, for instance, every hour on the hour. Unlike set_interval, this uses absolute wall clock time, not relative times. The task id is returned, so it can be cleared later with clear_cron if needed. If clear_cron is run from within the task itself, the id is optional. See more information for a detailed description of cron format. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-201</id>
	<key><![CDATA[nothing]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-202</id>
	<key><![CDATA[Negates a number, essentially multiplying the number by -1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-203</id>
	<key><![CDATA[Gets all recipes on the server.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-204</id>
	<key><![CDATA[ControlFlow]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-205</id>
	<key><![CDATA[BasicLogic]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-206</id>
	<key><![CDATA[Sends an email. See the extended description for more information. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-207</id>
	<key><![CDATA[This class of functions provide methods to hook deep into the server's event architecture]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-208</id>
	<key><![CDATA[Escapes arg so that it may be used directly in a regular expression, without fear that it will have special meaning; that is, it escapes all special characters. Use this if you need to use user input or similar as a literal search index.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-209</id>
	<key><![CDATA[cmd]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-210</id>
	<key><![CDATA[Returns the biome type of this block column. The location array&apos;s y value is ignored. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-211</id>
	<key><![CDATA[num1, %s[%snum2...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-212</id>
	<key><![CDATA[Decodes the base 64 encoded byte_array data back into the original byte_array data.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-213</id>
	<key><![CDATA[a, b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-214</id>
	<key><![CDATA[Skips the rest of the code in this loop, and starts the loop over, with it continuing at the next index. If this function is called outside of a loop, the command will fail. If int is set, it will skip &apos;int&apos; repetitions. If no argument is specified, 1 is used.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-215</id>
	<key><![CDATA[entityUUID, %s[%stransparents, [maxDistance%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-216</id>
	<key><![CDATA[Sets the tameable mob to the specified player. Offline players are supported, but this means that partial matches are NOT supported. You must type the player&apos;s name exactly. Setting the player to %s will untame the mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-217</id>
	<key><![CDATA[Return the equivalent of not(and())]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-218</id>
	<key><![CDATA[These functions manage specifically living entities. If the entity specified is not living, a BadEntityTypeException will be thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-219</id>
	<key><![CDATA[This class provides methods for interfacing with OAuth providers.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-220</id>
	<key><![CDATA[condition, %s[%scode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-221</id>
	<key><![CDATA[Runs the closure on the main thread now, blocking the current thread until it is finished. If the function call is itself being run from the main thread, then the function still will block as expected; it is not an error to call this from the main thread. Unlike running on the main thread later, if the underlying code throws an exception, it is thrown as a normal part of the execution. If the closure returns a value, it is returned by x_run_on_main_thread_now.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-222</id>
	<key><![CDATA[entityUUID, array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-223</id>
	<key><![CDATA[Sets the flying state for the player.Requires player to have the ability to fly, which is set with set_pflight().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-225</id>
	<key><![CDATA[These functions manipulate an item's meta data. The items are modified in a player's inventory.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-226</id>
	<key><![CDATA[Sets the visibility of a mob&apos;s custom name. True means it will be visible from a distance, like a playername. False means it will only be visible when near the mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-227</id>
	<key><![CDATA[dateFormat, dateString, %s[%slocale%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-228</id>
	<key><![CDATA[Includes external code at the specified path.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-229</id>
	<key><![CDATA[Commands]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-230</id>
	<key><![CDATA[boolean, %s[%sworld%s]%s, %s[%sint%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-231</id>
	<key><![CDATA[Clamps a value between a certain range, inclusive. If the value is less than the min, the min is returned, if it is greater than the max, the max is returned, and if it is between the two values, the original value is returned. Alternatively, if min &gt; max, clamp works in reverse mode. In that case, the value must be less than max (actually the minimum) and greater than min (actually the maximum). If the value is between the two, it is determined which of the two values it is closer to, and then that value is returned. If the value is exactly between both min and max, the minimum (actually the max) is returned. If min]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-232</id>
	<key><![CDATA[Sets the weather for the given player only. If downFall is true, the player will experience a storm. If downFall is %s, it will reset the player&apos;s visible weather to that which the player&apos;s world is experiencing.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-233</id>
	<key><![CDATA[randomResource]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-234</id>
	<key><![CDATA[Plays a sound at the given location. SoundArray is in an associative array with keys &apos;sound&apos;, &apos;category&apos;, &apos;volume&apos;, &apos;pitch&apos;, where all are optional except sound. Volume, if greater than 1.0 (default), is the distance in chunks players can hear the sound. Pitch has a range of 0.5 - 2.0, where where 1.0 is the middle pitch and default. Players can be a single player or an array of players to play the sound to, if not given, all players can potentially hear it. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-235</id>
	<key><![CDATA[array, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-236</id>
	<key><![CDATA[Gets the player list header for a player. This is the text that appears above the player list that appears when hitting the tab key.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-237</id>
	<key><![CDATA[locationArray, %s[%ssafe%s]%s %s x, y, z, %s[%ssafe%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-238</id>
	<key><![CDATA[Returns an array of players that can see this boss bar.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-239</id>
	<key><![CDATA[Given an enchantment name and an item array, returns whether or not that item can be enchanted with that enchantment. Throws an EnchantmentException if the name is not a valid enchantment type.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-240</id>
	<key><![CDATA[player, msg, %s[%s...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-241</id>
	<key><![CDATA[Minecraft]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-242</id>
	<key><![CDATA[entityUUID, locationArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-243</id>
	<key><![CDATA[Returns the sha1 HMAC of the specified string using the provided key. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-244</id>
	<key><![CDATA[Returns the canonical, absolute path of the given path. This provides a context independent and unique path which always points to the specified path, and removes any duplicate . or .. parts.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-245</id>
	<key><![CDATA[x, z, %s[%sworld%s]%s %s locationArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-246</id>
	<key><![CDATA[Returns an array that is the intersection of the two provided arrays. If either array is associative, it puts the function in associative mode. For normal arrays, the values are compared, and for associative arrays, the keys are compared, but the values are taken from the left array. comparisonMode is only applicable for normal arrays, and defaults to HASH, but determines the mode in which the system decides if two values are equal or not. A closure may be sent instead, which should return true if the two values are considered equals or not. Using the HASH mode is fastest, as this puts the function in an optimizing mode, and it can run at O(n log n). Otherwise, the runtime is O(n**2). The results between HASH and STRICT_EQUALS should almost never be different, and so in that case using STRICT_EQUALS has a lower performance for no gain, but there may be some cases where using the hash code is not desirable. EQUALS is necessary if you wish to disregard typing, so that array(1, 2, 3) and array(&apos;1&apos;, &apos;2&apos;, &apos;3&apos;) are considered equal. Duplicate values in the left array are duplicated, but duplicates in the right are not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-247</id>
	<key><![CDATA[Decodes a previously url encoded string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-248</id>
	<key><![CDATA[[%splayer%s]%s, exp]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-249</id>
	<key><![CDATA[[%sworld%s]%s, difficulty]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-250</id>
	<key><![CDATA[Given an item array, returns the slot numbers that the matching item has at least one item in. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-251</id>
	<key><![CDATA[byte_array, length, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-252</id>
	<key><![CDATA[Writes the length of the string to the byte array, as a short, (interpreted as UTF-8), then writes the UTF-8 string itself. If an external application requires the string to be serialized in a different manner, then use the string-byte_array conversion methods in StringHandling, however strings written in this manner are compatible with ba_get_string. The encoding may be set, but defaults to UTF-8.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-253</id>
	<key><![CDATA[location, particle%s[%s, players%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-254</id>
	<key><![CDATA[[%splayer%s]%s, slot, colorArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-255</id>
	<key><![CDATA[id, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-256</id>
	<key><![CDATA[entityUUID]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-257</id>
	<key><![CDATA[Returns the environment variable specified, if variableName is set. Otherwise, returns an associative array of all the environment variables.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-258</id>
	<key><![CDATA[Returns an associative array with various information about a block. If an index is specified, it will return a boolean. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-259</id>
	<key><![CDATA[Given an enchantment name, returns the max level it can be. If name is not a valid enchantment, an EnchantException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-260</id>
	<key><![CDATA[Returns an array of all the events currently registered on the server. Mostly meant for debugging, however it would be possible to parse this response to cherry pick events to unregister.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-261</id>
	<key><![CDATA[An operation that does nothing. Any arguments passed in are ignored entirely, though they will be evaluated first.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-262</id>
	<key><![CDATA[Returns whether or not the item is actually a string datatype. If you just care if some data can be used as a string, use is_stringable().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-263</id>
	<key><![CDATA[Returns whether the world (defaults to player&apos;s world) has thunder.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-264</id>
	<key><![CDATA[[%sworld%s]%s, boolean]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-265</id>
	<key><![CDATA[locationArray, %s[%ssize%s]%s, %s[%ssafe%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-266</id>
	<key><![CDATA[array, %s[%scompareTypes%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-267</id>
	<key><![CDATA[[%splayer%s]%s, %s[%svalue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-268</id>
	<key><![CDATA[Returns true if the entity is glowing]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-269</id>
	<key><![CDATA[Shows a title and/or subtitle to a player. The title and subtitle parameters can be %s. The integers fadein, stay, and fadeout define the time in ticks that the title will be displayed. The defaults are 10, 70, and 20 respectively.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-270</id>
	<key><![CDATA[Provides mathematical functions to scripts]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-271</id>
	<key><![CDATA[Returns a list of time zones registered on this system.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-272</id>
	<key><![CDATA[Broadcasts a message to all or some players and/or console. If permission is given, only players with that permission and console will see the broadcast. If an array of recipients is given, only online players in the list will see the broadcast. Console will receive the broadcast only when the array contains case-insensitive &apos;~console&apos;. Offline players and duplicate recipients in the list will be ignored. If permission/recipients is %s, all players and console will see the broadcast. Throws FormatException when the given recipients array is associative.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-273</id>
	<key><![CDATA[Completely removes a value from storage. Calling has_value(key) after this call will return false.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-274</id>
	<key><![CDATA[Returns true if the two values are NOT equal to each other, while ignoring case.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-275</id>
	<key><![CDATA[Returns a location array that is the specified distance from the origin location along a vector. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-276</id>
	<key><![CDATA[Given an item array, returns the enchantments that can be validly added to this item. This may return an empty array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-277</id>
	<key><![CDATA[Returns an array containing all blocks along the living entity&apos;s line of sight. transparents is an array of block IDs, only air by default. maxDistance represents the maximum distance to scan. The server may cap the scan distance, but probably by not any less than 100 meters.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-278</id>
	<key><![CDATA[Returns whether or not the player is op.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-279</id>
	<key><![CDATA[origin, target, %s[%sdistance%s]%s %s origin, direction, %s[%sdistance%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-280</id>
	<key><![CDATA[var1, %s[%svar2...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-281</id>
	<key><![CDATA[SQL]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-282</id>
	<key><![CDATA[entityUUID, name]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-283</id>
	<key><![CDATA[[%s]%s %s min/max, %s[%smax%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-284</id>
	<key><![CDATA[Set&apos;s the player&apos;s food saturation level. If this is above 0.0 and the player&apos;s health is below max, the player will experience fast health regeneration.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-285</id>
	<key><![CDATA[Sets whether or not other entities will collide with this mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-286</id>
	<key><![CDATA[Returns the distance the entity has fallen.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-287</id>
	<key><![CDATA[The first argument is the entity to be held on a leash, and must be living. The second is the holder of the leash. This does not have to be living, but the only non-living entity that will persist as a holder across restarts is the leash hitch. Players, bats, enderdragons, withers and certain other entities can not be held by leashes due to minecraft limitations.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-288</id>
	<key><![CDATA[Given an item array, returns the maximum allowed stack size. This method will accept an item array like is returned from pinv().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-289</id>
	<key><![CDATA[Returns true if and only if the two values are actually the same reference. Primitives that are equal will always be the same reference, this method is only useful for object/array comparisons.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-290</id>
	<key><![CDATA[Returns the sha256 hash of the specified string. Note that sha256 is considered more secure than sha1 and md5, and is typically used when storing sensitive data. It is a one way hashing algorithm. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-291</id>
	<key><![CDATA[Sets the time of a given world. Should be a number from 0 to 24000, if not, it is modulo scaled. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-292</id>
	<key><![CDATA[These functions provide a way to run other commands, and otherwise interact with the system in a meta way.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-293</id>
	<key><![CDATA[Splits a string on the given regex, and returns an array of the parts. If nothing matched, an array with one element, namely the original subject, is returned. Limit defaults to infinity, but if set, only that number of splits will occur.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-295</id>
	<key><![CDATA[Gets an array of the specified inventory. If the block or entity can&apos;t have an inventory, a FormatException is thrown. If the index is specified, only the slot given will be returned. The max index of the array in the array is different for different types of inventories. If there is no item at the slot specified, %s is returned. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-296</id>
	<key><![CDATA[Pushes the specified value(s) onto the end of the array. Unlike calling array_set(@array, array_size(@array), @value) on a normal array, the size of the array is increased first. The special operator syntax @array[] = &apos;value&apos; is also supported, as shorthand for array_push().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-297</id>
	<key><![CDATA[Drops the specified item stack at the specified player&apos;s feet (or at an arbitrary Location, if an array is given), and returns its entity UUID. spawnNaturally takes a boolean, which forces the way the item will be spawned. If true, the item will be dropped with a random velocity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-298</id>
	<key><![CDATA[array, values]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-299</id>
	<key><![CDATA[Removes a tag from the entity. Returns whether or not it was successful.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-300</id>
	<key><![CDATA[Returns true if the block at this location is a sign.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-301</id>
	<key><![CDATA[Turns verbose debug output on or off. This should generally never be on in a production server, but can be useful to quickly trace what a script is doing when it runs in a test environment. When on, every single function call will be printed out, along with the parameters passed in to it. To reduce impact on scripts when this is disabled, this has been implemented as a system wide setting, and applies to all scripts running in the same system.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-302</id>
	<key><![CDATA[[%sid%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-304</id>
	<key><![CDATA[[%splayer%s]%s, status]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-305</id>
	<key><![CDATA[[%splayer%s]%s, itemArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-306</id>
	<key><![CDATA[teamName, array, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-307</id>
	<key><![CDATA[Provides a more convenient method for running if/else chains. If none of the conditions are true, and there is no &apos;else&apos; condition, %s is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-308</id>
	<key><![CDATA[Gets the experience of a player within this level, as a percentage, from 0 to 99. (100 would be next level, therefore, 0.)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-309</id>
	<key><![CDATA[Returns whether the world (defaults to player&apos;s world) has a storm.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-310</id>
	<key><![CDATA[Sets whether or not gravity applies to the entity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-311</id>
	<key><![CDATA[No]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-312</id>
	<key><![CDATA[Returns false if the item would fail if it were used as a numeric value. If it can be parsed or otherwise converted into a numeric value, true is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-313</id>
	<key><![CDATA[Prompts the user for a line. The line typed is returned once the user presses enter. This only works in cmdline mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-314</id>
	<key><![CDATA[Scoreboards]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-315</id>
	<key><![CDATA[Returns the arc tan of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-316</id>
	<key><![CDATA[Sets the code that will be run when a user attempts to tabcomplete a command. The closure is expected to return an array of completions, otherwise the tab_complete_command event will be fired and used to send completions. The closure is passed the following information in this order: alias used, name of the sender, array of arguments used, array of command info.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-317</id>
	<key><![CDATA[entityUUID, otherEntityUUID]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-318</id>
	<key><![CDATA[[%splayer%s]%s, mode]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-319</id>
	<key><![CDATA[Sets a block or entity inventory to the specified inventory object. The specifier can be an entity UUID, location array, or virtual inventory ID. If the block or entity can&apos;t have an inventory, a FormatException is thrown. An inventory object invArray is one that matches what is returned by get_inventory(), so set_inventory(123, get_inventory(123)) while pointless, would be a correct call. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-320</id>
	<key><![CDATA[entityUUID, shooter]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-321</id>
	<key><![CDATA[Sets if the given projectile should bounce when it hits something.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-322</id>
	<key><![CDATA[Runs the specified script in the context of a given player or ~console. A script that runs player(), for instance, would return the specified player&apos;s name, not the player running the command. Setting the label allows you to dynamically set the label this script is run under as well (in regards to permission checking)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-323</id>
	<key><![CDATA[Provides methods for managing inventory related tasks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-324</id>
	<key><![CDATA[Adds x to var, and stores the new value. Equivalent to ++var in other languages. Expects ivar to be a variable, then returns the ivar, or, if var is a constant number, simply adds x to it, and returns the new number. Operator syntax is also supported: ++@var]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-325</id>
	<key><![CDATA[Left shifts the value bitsToShift times]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-326</id>
	<key><![CDATA[Regenerate the chunk for a world. The current player&apos;s world is used if one is not provided. Beware that this is destructive| %sYes]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-327</id>
	<key><![CDATA[Spawns particles at the specified location. The players parameter can be one player or an array of players. If none is given, all players within 32 meters will see the particle. The particle parameter can be a particle name or an associative array defining the characteristics of the particle to be spawned. The array requires the particle name under the key &quot;particle&quot;. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-328</id>
	<key><![CDATA[Meta]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-329</id>
	<key><![CDATA[Damage an entity. If given, the source entity will be attributed as the damager.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-330</id>
	<key><![CDATA[Saves the specified world.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-331</id>
	<key><![CDATA[[%splayer%s]%s, flying]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-332</id>
	<key><![CDATA[Adds x to var, and stores the new value. Equivalent to var++ in other languages. Expects ivar to be a variable, then returns a copy of the old ivar, or, if var is a constant number, simply adds x to it, and returns the new number. Operator notation is also supported: @var++]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-333</id>
	<key><![CDATA[BossBar]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-335</id>
	<key><![CDATA[Removes all instances of value from the specified array. For instance, array_remove_values(array(1, 2, 2, 3), 2) would produce the array(1, 3). Note that it returns %s however, so it will simply in place modify the array passed in, much like array_remove.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-336</id>
	<key><![CDATA[player, isBanned, %s[%sreason%s]%s, %s[%ssource%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-337</id>
	<key><![CDATA[Creates a new scoreboard identified by the given name, and stores it internally for later use. Throws a ScoreboardException if the name is already in use.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-338</id>
	<key><![CDATA[cronFormat, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-339</id>
	<key><![CDATA[world, boolean]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-340</id>
	<key><![CDATA[[%sint%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-342</id>
	<key><![CDATA[Returns an associative array showing the equipment this mob is wearing. This does not work on most &quot;dumb&quot; entities, only mobs (entities with AI).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-343</id>
	<key><![CDATA[message, %s[%sprefix%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-344</id>
	<key><![CDATA[Sets the max health of a living entity, players included. This value is persistent, and will not reset even after server restarts.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-345</id>
	<key><![CDATA[[%splayer%s]%s, material]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-346</id>
	<key><![CDATA[This class contains methods that help manage files on the file system. Most are restricted with the base-dir setting in your preferences.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-347</id>
	<key><![CDATA[Returns a location array for the specified world, or the current player&apos;s world if one is not specified.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-348</id>
	<key><![CDATA[Returns the maximum amount of air the specified living entity can have.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-349</id>
	<key><![CDATA[Returns whether or not the specified player is online. Note that the name must match exactly, but it will not throw a PlayerOfflineException if the player is not online, or if the player doesn&apos;t even exist.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-350</id>
	<key><![CDATA[Creates a new boss bar with a reference id. An optional array can be given with the keys: title, color, style, visible, percent. Title displays above the boss bar. Color can be one of PINK, BLUE, RED, GREEN, YELLOW, PURPLE, or WHITE. Style can be one of SOLID, SEGMENTED_6, SEGMENTED_10, SEGMENTED_12, or SEGMENTED_20. Visible is a boolean for whether the bar is visible or not. Percent is a double from 0.0 to 1.0 representing the how much the bar is filled from left to right. Defaults to an empty title with a WHITE, SOLID, visible, full bar.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-351</id>
	<key><![CDATA[ Returns the name of the current OS. Will be one of WINDOWS, MAC, LINUX, SOLARIS, or UNKNOWN.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-352</id>
	<key><![CDATA[charArray%sstring]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-353</id>
	<key><![CDATA[char_from_unicode(parse_int(&apos;1234&apos;, 16))]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-354</id>
	<key><![CDATA[specifier, array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-355</id>
	<key><![CDATA[Returns an array of all thread names that are currently running in the JVM. This is a debugging tool for your server, and less of a CommandHelper specific thing.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-356</id>
	<key><![CDATA[Back to top]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-357</id>
	<key><![CDATA[ivar]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-358</id>
	<key><![CDATA[material, %s[%strait%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-359</id>
	<key><![CDATA[string, times]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-360</id>
	<key><![CDATA[Returns true if the environment is in cmdline mode. False otherwise.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-361</id>
	<key><![CDATA[Returns true if the event is known to MethodScript. Like function_exists(), this function is resolved at compile time, and allows for conditional uses of events that may or may not exist.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-363</id>
	<key><![CDATA[Kicks the specified player with an optional message. If no message is specified, &quot;You have been kicked&quot; is used. If no player is specified, the current player is used with the default message.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-364</id>
	<key><![CDATA[locationA, locationB]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-365</id>
	<key><![CDATA[Converts the number to radians (which is assumed to have been in degrees)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-366</id>
	<key><![CDATA[Returns a max speed for given entity. Make sure that the entity is a minecart.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-367</id>
	<key><![CDATA[event_name, options, prefilter, event_obj, %s[%scustom_params%s]%s, &lt;code&gt;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-368</id>
	<key><![CDATA[byte_array, string, %s[%spos%s]%s, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-369</id>
	<key><![CDATA[[%splayer/LocationArray%s]%s, itemArray, %s[%sspawnNaturally%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-370</id>
	<key><![CDATA[Returns whether or not the given item is an integer or a double. Note that numeric strings can usually be used as integers and doubles, however this function checks the actual datatype of the item. If you just want to see if an item can be used as a number, use is_integral() or is_numeric() instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-371</id>
	<key><![CDATA[Returns a date of the current time (or the time specified) in the format you give. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-372</id>
	<key><![CDATA[player, command]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-373</id>
	<key><![CDATA[This experimental and private API is subject to removal, or incompatible changes, and should not be yet heavily relied on in normal development.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-374</id>
	<key><![CDATA[[%splayer%s]%s, instrument, note, %s[%slocationArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-375</id>
	<key><![CDATA[Spawns a falling block entity of the specified block type at the specified location, applying the vector array as a velocity if given. Values for the vector array are doubles, and 1.0 seems to imply about 3 times walking speed. Gravity applies for y.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-376</id>
	<key><![CDATA[Adds a player to the specified boss bar.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-377</id>
	<key><![CDATA[Sets if PVP is allowed in the world with the given name, or all worlds if the name is not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-378</id>
	<key><![CDATA[This class of functions allows scripts to hook deep into the interpreter itself, and get meta information about the operations of a script. This is useful for debugging, testing, and ultra dynamic scripting. See the [[%s|guide to reflection]] on the wiki for more details. In order to make the most of these functions, you should familiarize yourself with the general workings of the language. These functions explore extremely advanced concepts, and should normally not be used; especially if you are not familiar with the language.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-379</id>
	<key><![CDATA[[%splayer%s]%s, locationArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-380</id>
	<key><![CDATA[Back to top%s %sShow hidden]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-381</id>
	<key><![CDATA[[%splayer%s]%s, title, subtitle, %s[%sfadein, stay, fadeout%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-382</id>
	<key><![CDATA[Returns an array of arrays about the teams on the given scoreboard, which defaults to &apos;main&apos; if not given. The array keys are the team names, and each value is a team array containing the keys: name, displayname, prefix, suffix, size, color, options, and players.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-383</id>
	<key><![CDATA[[%sboolean1, code%s]%s..., %s[%selseCode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-384</id>
	<key><![CDATA[arg]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-385</id>
	<key><![CDATA[array1, array2, %s[%scomparisonMode%s]%sarray1, array2, comparisonClosure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-386</id>
	<key><![CDATA[Works like call_proc, but allows for variable or unknown number of arguments to be passed to a proc. The array parameter is &quot;flattened&quot;, and call_proc is essentially called. If the array is associative, an exception is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-388</id>
	<key><![CDATA[Stops a named marquee.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-389</id>
	<key><![CDATA[y, x]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-390</id>
	<key><![CDATA[Returns a list of all known classes. This may not be completely exhaustive, but will at least contain all system defined classes. The returned value is an array of ClassType objects.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-391</id>
	<key><![CDATA[Returns the result of a less than or equal to operation. Operator syntax is also supported: @a &amp;lt;= @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-392</id>
	<key><![CDATA[This class provides methods for making a text "marquee", like a stock ticker. Because this is a threading operation, and could be potentially resource intensive, the heavy lifting has been implemented natively.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-393</id>
	<key><![CDATA[Returns the entity&apos;s health as a percentage of its maximum health. If the specified entity doesn&apos;t exist, or is not a LivingEntity, a format exception is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-394</id>
	<key><![CDATA[Like while, but always runs the code at least once. The condition is checked after each run of the code, and if it is true, the code is run again. break and continue work inside a dowhile, but continuing more than once is pointless, since the loop isn&apos;t inherently keeping track of any counters anyways. Breaking multiple times still works however. In general, using brace syntax is preferred: do { code(); } while(@condition); instead of using dowhile() directly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-395</id>
	<key><![CDATA[Plays a sound at the given location. SoundArray is in an associative array with keys &apos;sound&apos;, &apos;category&apos;, &apos;volume&apos;, &apos;pitch&apos;, where all are optional except sound. Volume, if greater than 1.0 (default), is the distance in chunks players can hear the sound. Pitch has a range of 0.5 - 2.0, where where 1.0 is the middle pitch and default. Players can be a single player or an array of players to play the sound to, if not given, all players can potentially hear it. Sound is a sound path, separated by periods. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-396</id>
	<key><![CDATA[Trades]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-397</id>
	<key><![CDATA[Sets whether or not the spawn chunks in the given world should stay loaded.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-398</id>
	<key><![CDATA[Returns the location array for this entity, if it exists. This array will be compatible with any function that expects a location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-399</id>
	<key><![CDATA[Rounds value to the 15th place. This is useful when doing math using approximations. For instance, sin(math_const(&apos;PI&apos;)) returns 1.2246467991473532E-16, but sin of pi is actually 0. This happens because pi cannot be accurately represented on a computer, it is an approximation. Using round15, you can round to the next nearest value, which often time should give a more useful answer to display. For instance, round15(sin(math_const(&apos;PI&apos;))) is 0. This functionality is not provided by default in methods like sin(), because it technically makes the result less accurate, given the inputs. In general, you should only use this function just before displaying the value to the user. Internally, you should keep the value returned by the input functions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-400</id>
	<key><![CDATA[Sets the scoreboard to be used by a player. The scoreboard argument is the id of a registered scoreboard. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-401</id>
	<key><![CDATA[Returns the value of various math constants. The constant argument must be one of the following: NaN, NEGATIVE_INFINITY, INFINITY, DOUBLE_MAX, DOUBLE_MIN, LONG_MAX, LONG_MIN, SHORT_MAX, SHORT_MIN, INTEGER_MAX, INTEGER_MIN, FLOAT_MAX, FLOAT_MIN, BYTE_MAX, BYTE_MIN, E, PI, PHI, C, or EULER [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-403</id>
	<key><![CDATA[Returns true if the entity produces sounds]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-404</id>
	<key><![CDATA[Returns the current temperature at the location given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-405</id>
	<key><![CDATA[Given an int and a radix, returns a string representation of the integer value in the given base. A common use would be to output a hex or binary representation of a number, for instance. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-406</id>
	<key><![CDATA[Returns a color array for the color of the leather armor at the given slot. A CastException is thrown if this is not leather armor at that slot. The color array returned will look like: array(r: 0, g: 0, b: 0)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-407</id>
	<key><![CDATA[Returns the boolean value of a logical NOT for this argument. Operator syntax is also supported:]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-408</id>
	<key><![CDATA[teamName, player, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-409</id>
	<key><![CDATA[Sets the amount of air the specified living entity has remaining.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-410</id>
	<key><![CDATA[teamname, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-411</id>
	<key><![CDATA[text, %s[%ssymbol%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-412</id>
	<key><![CDATA[Gets the mob&apos;s target if it has one, and returns the target&apos;s entityUUID. If there is no target, %s is returned instead. Not all mobs will have a returnable target.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-413</id>
	<key><![CDATA[Returns the arc cos of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-414</id>
	<key><![CDATA[[%sworld%s]%s, x, z %s %s[%sworld%s]%s, locationArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-415</id>
	<key><![CDATA[Returns an array of strings containing the channels CommandHelper is listening on.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-416</id>
	<key><![CDATA[Enchantments]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-417</id>
	<key><![CDATA[Returns an array of the defined alias signatures (The part left of the = sign).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-418</id>
	<key><![CDATA[Sets the respawn location of a player. If player is omitted, the current player is used. The specified location should be the block below the respawn location. If forced is false, it will respawn the player next to that location only if a bed found is found there. (forced defaults to true)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-419</id>
	<key><![CDATA[Functions related to the management of trades and merchants. A trade is a special kind of recipe accessed through the merchant interface. A merchant is a provider of trades, which may or may not be attached to a Villager or Wandering Trader.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-420</id>
	<key><![CDATA[Returns the player&apos;s score for the given objective. A LengthException is thrown if the name is longer than 40 characters.Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-421</id>
	<key><![CDATA[entityID]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-423</id>
	<key><![CDATA[Adds a new objective to the scoreboard, throwing a CREScoreboardException if the name is already in use. The vanilla criteria names are DEATHCOUNT, HEALTH, PLAYERKILLCOUNT, TOTALKILLCOUNT, and DUMMY. You can put anything, but if none of the other values match, &apos;dummy&apos; will be used. Those values which are not &apos;dummy&apos; are server-managed. Throws a LengthException if the name is more than 16 characters. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-424</id>
	<key><![CDATA[Gives a player the specified item. Unlike set_pinv(), this does not specify a slot. The qty is distributed in the player&apos;s inventory, first filling up slots that have the same item type, up to the max stack size, then fills up empty slots, until either the entire inventory is filled, or the entire amount has been given. If the player&apos;s inv is full, the number of items that were not added is returned, which will be less than or equal to the quantity provided. Otherwise, returns 0. This function will not touch the player&apos;s armor slots however.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-425</id>
	<key><![CDATA[Permissions]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-426</id>
	<key><![CDATA[Returns the time of the specified player, as an integer from 0 to 24000-1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-427</id>
	<key><![CDATA[[%splayer%s]%s, permissionName]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-428</id>
	<key><![CDATA[regex, %s[%sstartFrom%s]%s, %s[%stype%s]%s %s regex, %s[%sstartFrom%s]%s, types]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-429</id>
	<key><![CDATA[Stops the current loop. If int is specified, and is greater than 1, the break travels that many loops up. So, if you had a loop embedded in a loop, and you wanted to break in both loops, you would call break(2). If this function is called outside a loop (or the number specified would cause the break to travel up further than any loops are defined), the function will fail. If no argument is specified, it is the same as calling break(1). This function has special compilation rules. The break number must not be dynamic, or a compile error will occur. An integer must be hard coded into the function.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-430</id>
	<key><![CDATA[Sets up a location to be monitored for redstone changes. If a location is monitored, it will cause redstone_changed events to be triggered. By default, isMonitored is true, however, setting it to false will remove the previously monitored location from the list of monitors.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-431</id>
	<key><![CDATA[Appends any number of values to the underlying string builder. This is much more efficient than doing normal concatenation with a string when building a string in a loop. The underlying resource may be converted to a string via a cast, string(@res).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-432</id>
	<key><![CDATA[[%sworld%s]%s, gameRule, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-433</id>
	<key><![CDATA[var, %s[%svalue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-435</id>
	<key><![CDATA[Opens a player&apos;s inventory, shown to the player specified&apos;s screen.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-436</id>
	<key><![CDATA[Sets a player&apos;s velocity. vector must be an associative array with x, y, and z keys defined (if magnitude is set, it is ignored). If the vector&apos;s magnitude is greater than 10, the command is cancelled, because the server won&apos;t allow the player to move faster than that. A warning is issued, and false is returned if this happens, otherwise, true is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-437</id>
	<key><![CDATA[[%sdirectory%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-439</id>
	<key><![CDATA[Returns the display name of the player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-440</id>
	<key><![CDATA[name]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-441</id>
	<key><![CDATA[Functions to create and manage boss bars in Minecraft.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-442</id>
	<key><![CDATA[Removes the previously set runtime setting. If the setting wasn&apos;t already set, then a warning is issued, unless &apos;function.remove_runtime_setting.no_warn_on_removing_blank&apos; is set to true.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-443</id>
	<key><![CDATA[key, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-444</id>
	<key><![CDATA[Works exactly like array(), except the array created will be an associative array, even if the array has been created with no elements. This is the only use case where this is neccessary, vs using the normal array() function, or in the case where you assign sequential keys anyways, and the same array could have been created using array().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-445</id>
	<key><![CDATA[Yes]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-446</id>
	<key><![CDATA[Returns an associative array of all loaded functions. The keys of this array are the names of the classes containing the functions (which you know as the sections of the API page), and the values are arrays of the names of the functions within those classes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-447</id>
	<key><![CDATA[Returns a list of trades used by the specified merchant. Specifier can be the UUID of an entity or a virtual merchant ID.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-448</id>
	<key><![CDATA[Returns the player&apos;s current food level.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-449</id>
	<key><![CDATA[Returns the max size of the inventory specified. If the block or entity can&apos;t have an inventory, a FormatException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-450</id>
	<key><![CDATA[Returns the number of seconds until this entity stops being on fire, 0 if it already isn&apos;t.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-451</id>
	<key><![CDATA[Sets the name of the given mob. This automatically truncates if it is more than 64 characters.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-452</id>
	<key><![CDATA[[%sworld%s]%s, time]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-453</id>
	<key><![CDATA[Returns the entity age as an integer, represented by server ticks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-454</id>
	<key><![CDATA[If a number is provided, it is assumed to be an entity, and if the entity supports inventories, it will be valid. Otherwise, if a location array is provided, it is assumed to be a block (chest, brewer, etc) and interpreted thusly. Depending on the inventory type, the max index will vary. If the index is too large, a RangeException is thrown, otherwise, the item at that location is returned as an item array, or %s, if no item is there. You can determine the inventory type (and thus the max index count) with get_inventory_type(). An itemArray, like the one used by pinv/set_pinv is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-455</id>
	<key><![CDATA[Runs the closure on the main thread later. If the function call is itself being run from the main thread, then the function still will not block, but it is not an error to call this from the main thread. If an exception is thrown from the closure, it is handled using the uncaught exception handler.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-456</id>
	<key><![CDATA[Sets the experience of a player within the current level, as a percentage, from 0 to 99. 100 resets the experience to zero and adds a level to the player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-457</id>
	<key><![CDATA[persistenceKey]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-458</id>
	<key><![CDATA[id, player]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-459</id>
	<key><![CDATA[Returns the hyperbolic cosine of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-460</id>
	<key><![CDATA[[%splayer%s]%s, %s[%sarray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-461</id>
	<key><![CDATA[Returns an array of virtual inventory ids.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-462</id>
	<key><![CDATA[Returns whether the given item is of the boolean datatype. Note that all datatypes can be used as booleans, however this function checks the specific datatype of the given item.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-463</id>
	<key><![CDATA[syncObject, code]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-464</id>
	<key><![CDATA[Returns a copy of the underlying engine&apos;s environment object. This is only useful to embedded scripting engines that are attempting to call back into MethodScript. The object returned is a CResource.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-465</id>
	<key><![CDATA[[%spropertyName%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-466</id>
	<key><![CDATA[[%splayer%s]%s, other]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-467</id>
	<key><![CDATA[Creates a (rain) storm if isStorming is true, stops a storm if isStorming is false. The second argument can be a world name or the duration in ticks of the given weather setting. The third argument allows specifying both a world and a duration. The second param is required to be the world if the function is run from console.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-468</id>
	<key><![CDATA[Returns the floor of any given number. For example, floor(3.8) returns 3, and floor(-1.1) returns 2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-469</id>
	<key><![CDATA[Returns the xnor of the two values]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-471</id>
	<key><![CDATA[Using the built in permissions system, checks to see if the player has a particular permission. This is simply passed through to the permissions system. This function is only restricted if the player attempts to check another player&apos;s permissions. If run from the console or a CommandBlock, will always return true unless a value has been explicitly set for them.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-472</id>
	<key><![CDATA[val, %s[%sworkload%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-473</id>
	<key><![CDATA[Returns a UUID (also known as a GUID). Different types of UUIDs can be generated, by default, if no parameters are provided, a random uuid is returned (version 4). For full details on what exactly a uuid is, and what the different versions are, see %s. The arg varies depending on the type, some types do not require an argument, in which case, this parameter will be ignored. &lt;code&gt;type&lt;/code&gt; may be one of: - RANDOM - Returns a random UUID. This type takes 0 arguments. - NIL - Returns the nil UUID, that is 00000000-0000-0000-0000-000000000000. This type takes 0 arguments.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-474</id>
	<key><![CDATA[Shows a workbench to the current player, or a specified player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-476</id>
	<key><![CDATA[array, index, %s[%sdefault%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-478</id>
	<key><![CDATA[Returns the UUID of the user trading with the merchant, or %s if no one is.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-479</id>
	<key><![CDATA[procName]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-480</id>
	<key><![CDATA[name, setting]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-481</id>
	<key><![CDATA[Math]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-482</id>
	<key><![CDATA[Attempts to remove a player from a team, and returns true if successful, for false if the player was not part of the team.Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-483</id>
	<key><![CDATA[Returns the nth-percentile across all the numbers in the set. The input may be an array of numbers, or individual numbers as arguments. A percentile is a measure indicating the value below which a given percentage of observations in a group of observations falls. For example, the 20th percentile is the value (or score) below which 20% of the observations may be found.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-484</id>
	<key><![CDATA[Updates the state for the specified boss bar. See create_bar() for available option keys and values for the optionsArray. If the second argument is a string, it&apos;ll use it to update the title. If it&apos;s a double, it&apos;ll use it to update the percentage filled (0.0 - 1.0).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-485</id>
	<key><![CDATA[Adds a recipe to the server and returns whether it was added or not. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-486</id>
	<key><![CDATA[Returns the md5 HMAC of the specified string using the provided key. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-487</id>
	<key><![CDATA[slice]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-488</id>
	<key><![CDATA[Kills the command immediately, without completing it. A message is optional, but if provided, displayed to the user.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-490</id>
	<key><![CDATA[This class of functions provides methods for accessing various SQL servers.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-491</id>
	<key><![CDATA[location, %s[%sisMonitored%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-492</id>
	<key><![CDATA[id, %s[%stype/size%s]%s, %s[%stitle%s]%s, %s[%sinventory%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-493</id>
	<key><![CDATA[Returns x to the power of n. Operator syntax is also supported: @x ** @n]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-494</id>
	<key><![CDATA[Returns a double, read in as a 64 bit double, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-495</id>
	<key><![CDATA[Strips all the color codes from a given string]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-496</id>
	<key><![CDATA[[%splayer%s]%s, locationArray, %s[%sforced%s]%s %s %s[%splayer%s]%s, x, y, z, %s[%sforced%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-497</id>
	<key><![CDATA[item]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-498</id>
	<key><![CDATA[Allows you to store a value, which can then be retrieved later. key must be a string containing only letters, numbers, underscores. Periods may also be used, but they form a namespace, and have special meaning. (See get_values())]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-499</id>
	<key><![CDATA[Executes an SQL query, and returns various data depending on the query type.  See the extended information for more details. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-500</id>
	<key><![CDATA[Provides methods for dealing with enchanted items]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-501</id>
	<key><![CDATA[ExecutionQueue]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-503</id>
	<key><![CDATA[Kills the specified player, or the current player if a name is omitted.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-504</id>
	<key><![CDATA[var1, var2%s[%s, varX...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-505</id>
	<key><![CDATA[Removes all potion effects from a player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-506</id>
	<key><![CDATA[teamName, array, %s[%sscoreboard%s]%s %s teamName, displayname, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-507</id>
	<key><![CDATA[Returns an array where the keys are currently registered merchant IDs and the values are the corresponding window titles of those merchants.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-508</id>
	<key><![CDATA[Reverses an array in place. However, if the array is associative, throws a CastException, since associative arrays are more like a map.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-509</id>
	<key><![CDATA[Checks to see if this plaintext password does in fact hash to the hash specified. Unlike md5 or sha1, simply comparing hashes won&apos;t work. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-510</id>
	<key><![CDATA[TaskHandling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-511</id>
	<key><![CDATA[value, bitsToShift]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-512</id>
	<key><![CDATA[Returns if an entity is set to be breedable.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-513</id>
	<key><![CDATA[locationArray, effect, %s[%sradius%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-514</id>
	<key><![CDATA[Web]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-515</id>
	<key><![CDATA[Unlike floor and ceil, rounds the number to the nearest double that is equal to an integer. Precision defaults to 0, but if set to 1 or more, rounds decimal places. For instance, round(2.29, 1) would return 2.3. If precision is &amp;lt; 0, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-516</id>
	<key><![CDATA[Gets the block data at the location in a string format. Forward compatibility is not ensured.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-518</id>
	<key><![CDATA[Returns the compile date, in a millisecond unit time stamp, of when MethodScript was compiled, or %s, if that can&apos;t be computed for various reasons.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-519</id>
	<key><![CDATA[This function causes an exception to be thrown. The exceptionType may be any valid exception type.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-520</id>
	<key><![CDATA[Performance]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-521</id>
	<key><![CDATA[While the condition is true, the code is executed. break and continue work inside a dowhile, but continuing more than once is pointless, since the loop isn&apos;t inherently keeping track of any counters anyways. Breaking multiple times still works however.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-522</id>
	<key><![CDATA[Returns the sha256 HMAC of the specified string using the provided key. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-523</id>
	<key><![CDATA[Converts an array into a YML encoded string. Only associative arrays are supported. prettyPrint defaults to false. Within the array, only primitives and arrays can be encoded.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-524</id>
	<key><![CDATA[Returns the player&apos;s food saturation level.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-525</id>
	<key><![CDATA[Returns the name for this player the last time they were on the server. Return %s if the player has never been on the server. This is not guaranteed to be their current player name. This is read directly from the player data file for offline players.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-526</id>
	<key><![CDATA[Modifies the underlying event object, if applicable. The documentation for each event will explain what parameters can be modified, and what their expected values are. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-527</id>
	<key><![CDATA[Sets the player&apos;s health. Health should be a double between 0 and their max health, which is 20.0 by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-528</id>
	<key><![CDATA[Writes the text to the system&apos;s std out. Unlike console(), this does not use anything else to format the output, though in many cases they will behave the same. However, colors and other formatting characters will not &quot;bleed&quot; through, so sys_out(color(RED) . &apos;This is red&apos;) will not cause the next line to also be red, so if you need to print multiple lines out, you should manually add \n to create your linebreaks, and only make one call to sys_out.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-529</id>
	<key><![CDATA[Returns whether or not the given procName is currently defined, i.e. if calling this proc wouldn&apos;t throw an exception.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-530</id>
	<key><![CDATA[locationArray, data, %s[%sphysics%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-531</id>
	<key><![CDATA[name, %s[%scriteria, [scoreboard%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-532</id>
	<key><![CDATA[Removes the boss bar for all players.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-533</id>
	<key><![CDATA[Returns true if the extention is known to MethodScript and loaded. Like function_exists(), this function is resolved at compile time.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-534</id>
	<key><![CDATA[Dynamically creates an array slice, which can be used with array_get (or the [bracket notation]) to get a range of elements. cslice(0, 5) is equivalent to 0..5 directly in code, however with this function you can also do cslice(@var, @var), or other more complex expressions, which are not possible in static code.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-535</id>
	<key><![CDATA[Returns an array of IDs for all entities in the given scope. With no args, this will return all entities loaded on the entire server. If the first argument is given and is a location, only entities in the chunk containing that location will be returned, or if it is a world only entities in that world will be returned. If all three arguments are given, only entities in the chunk with those coords will be returned. This can take chunk coords (ints) or location coords (doubles).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-536</id>
	<key><![CDATA[int1, int2, %s[%sint3...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-537</id>
	<key><![CDATA[Returns the time of the specified world, as an integer from 0 to 24000-1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-539</id>
	<key><![CDATA[Runs a command regardless of whether or not it is an alias or a builtin command. Essentially, this works like checking if(is_alias(@cmd)){ call_alias(@cmd) } else { run(@cmd) }. Be careful with this command, as like call_alias(), you could accidentally create infinite loops. The command must start with a / or this will throw a FormatException.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-540</id>
	<key><![CDATA[Adds a player to a team, given the team exists. This allows you to add fake players with up to 40 characters. The player will be removed from any other team on the same scoreboard. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-541</id>
	<key><![CDATA[array, %s[%sglue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-543</id>
	<key><![CDATA[Returns an array of stack trace elements. This is the same stack trace that would be generated if one were to throw an exception, then catch it.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-544</id>
	<key><![CDATA[Sets whether or not this player is allowed to fly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-545</id>
	<key><![CDATA[Emits a system beep, on the system itself, not in game. This is only useful from cmdline.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-546</id>
	<key><![CDATA[[%sworld, [x, z%s]%s] %s %s[%slocationArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-547</id>
	<key><![CDATA[char]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-548</id>
	<key><![CDATA[array, %s[%snumber, [getKeys%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-549</id>
	<key><![CDATA[player, url]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-550</id>
	<key><![CDATA[Contains various methods to make HTTP requests.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-551</id>
	<key><![CDATA[AccessModifier accessModifier, array%s objectModifiers, ObjectType objectType, string objectName, array%s superclasses, array%s interfaces, ? enumList, map%s elementList, array%s annotations, ClassType containingClass, string classComment, array%s genericParameters]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-552</id>
	<key><![CDATA[Sets the byte order that the specified byte array will use for all future gets/sets. By default, a byte array is Big Endian. If setLittleEndian is true, the byte array will be set to little endian, otherwise it will be set to big endian.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-553</id>
	<key><![CDATA[Returns true if the given entity is gliding.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-554</id>
	<key><![CDATA[Returns an associative array of the drop rate for each equipment slot. If the rate is 0, the equipment will not drop. If it is 1, it is guaranteed to drop.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-555</id>
	<key><![CDATA[Returns the results of a less than operation. Operator syntax is also supported: @a &amp;lt; @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-556</id>
	<key><![CDATA[colorArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-557</id>
	<key><![CDATA[Sets the player&apos;s compass target, and returns the old location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-558</id>
	<key><![CDATA[An array of players banned on the server.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-559</id>
	<key><![CDATA[pattern, replacement, subject]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-560</id>
	<key><![CDATA[Works in reverse of pgive_item(), but returns the number of items actually taken, which will be from 0 to qty. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-561</id>
	<key><![CDATA[Writes the text to the system&apos;s std err, but does not automatically add a newline at the end. Unlike console(), this does not use anything else to format the output, though in many cases they will behave the same. Unlike other print methdods, colors and other formatting characters WILL &quot;bleed&quot; through, so print_err(color(RED) . &apos;This is red&apos;) will also cause the next line to also be red, so if you need to print multiple lines out, you should manually reset the color with print_out(color(RESET)), or use sys_err.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-562</id>
	<key><![CDATA[Returns a boolean stating if the other player can see this player or not. This is the raw access function, you probably shouldn&apos;t use this, as the CommandHelper vanish api functions will probably be easier to use.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-563</id>
	<key><![CDATA[[%snamespace, ...,%s]%s key, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-564</id>
	<key><![CDATA[scoreboard, %s[%sify%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-565</id>
	<key><![CDATA[Returns true if the given player is experiencing a storm, as set by set_pstorm(). (ignores world weather)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-566</id>
	<key><![CDATA[Replaces all the colorizable text in the string. For instance, colorize(&apos;&amp;aText&apos;) would be equivalent to (color(&apos;a&apos;).&apos;Text&apos;). By default, the symbol is &apos;&amp;&apos;, but that can be any arbitrary string that you specify. If text is not a string, that value is simply returned. If you need to &quot;escape&quot; a symbol, (that is have a literal symbol followed by a letter that is a valid color) just repeat the symbol twice, for instance &apos;&amp;&amp;c&apos; would return a literal &apos;&amp;c&apos; instead of a red modifier.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-567</id>
	<key><![CDATA[This class contains methods for dealing with time and server scheduling.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-568</id>
	<key><![CDATA[[%sbinary%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-569</id>
	<key><![CDATA[Removes a task from the front of the queue. That is, the next task that would have been run is removed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-570</id>
	<key><![CDATA[Returns the id of the scoreboard a player is assigned to. If it is not already cached, it will be added using the player&apos;s name. Using this method, it should be possible to import scoreboards created by other plugins.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-572</id>
	<key><![CDATA[returns whether the entity is touching the ground]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-573</id>
	<key><![CDATA[Returns true if commandhelper is listening to the given plugin channel.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-574</id>
	<key><![CDATA[UUID]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-575</id>
	<key><![CDATA[var, %s[%sx%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-576</id>
	<key><![CDATA[[%sparams...%s]%s, code]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-577</id>
	<key><![CDATA[array%s %s number input...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-578</id>
	<key><![CDATA[Works in reverse of pgive_enderchest_item(), but returns the number of items actually taken, which will be from 0 to qty. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-579</id>
	<key><![CDATA[message, %s[%spermission%s]%s %s message, %s[%srecipients%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-580</id>
	<key><![CDATA[Returns the name of the current user. This is retrieved in a platform specific manner, and should be cross compatible in all scripts. Null is returned if this function call is non-sensical in the current platform]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-581</id>
	<key><![CDATA[This class contains the functions use to communicate with other plugins and the server in general.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-582</id>
	<key><![CDATA[array, %s[%sprettyPrint%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-583</id>
	<key><![CDATA[ResourceManager]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-584</id>
	<key><![CDATA[Gets a location array for the highest block at a specific x and z column. If a location array is specified, the y coordinate is ignored.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-585</id>
	<key><![CDATA[Returns whether or not the given item is a double. Note that numeric strings and integers can usually be used as a double, however this function checks the actual datatype of the item. If you just want to see if an item can be used as a number, use is_numeric() instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-586</id>
	<key><![CDATA[Returns all the values in a particular namespace as an associative array(key: value, key: value). Only full namespace matches are considered, so if the key &apos;users.data.username.hi&apos; existed in the database, and you tried get_values(&apos;users.data.user&apos;), nothing would be returned. The last segment in a key is also considered a namespace, so &apos;users.data.username.hi&apos; would return a single value (in this case).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-587</id>
	<key><![CDATA[Sets the list of trades the specified merchant can use to the provided array of TradeArrays. The specifier can be the UUID of a physical entity or the ID of a user-created virtual merchant. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-588</id>
	<key><![CDATA[os, command, %s[%soptions%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-589</id>
	<key><![CDATA[world_name, paramArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-590</id>
	<key><![CDATA[valueArray, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-591</id>
	<key><![CDATA[If the first argument evaluates to a true value, the second argument is returned, otherwise the third argument is returned. If there is no third argument, it returns %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-592</id>
	<key><![CDATA[Checks if the array contains a value of the same datatype and value as testValue. For associative arrays, only the values are searched, the keys are ignored. If you need to check for the existence of a particular key, use array_index_exists().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-593</id>
	<key><![CDATA[locationArray, %s[%scmd%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-594</id>
	<key><![CDATA[plaintext, hash]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-595</id>
	<key><![CDATA[Hashes the value, and returns an int representing that value.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-596</id>
	<key><![CDATA[Writes the contents of the source_byte_array into this byte array, starting at pos, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-597</id>
	<key><![CDATA[Returns the number of ticks remaining that this player will be on fire for. If the player is not on fire, 0 is returned, which evaluates as false.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-598</id>
	<key><![CDATA[Sets the whitelist flag of the specified player. This will work with offline players, but the name must be exact. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-599</id>
	<key><![CDATA[Returns the compile date of the current script, as a unix time stamp in milliseconds.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-600</id>
	<key><![CDATA[locationArray, %s[%sname%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-601</id>
	<key><![CDATA[Runs a shell command. &lt;code&gt;command&lt;/code&gt; can either be a string or an array of string arguments, which are run as an external process. Requires the allow-shell-commands option to be enabled in preferences, or run from command line, otherwise an InsufficientPermissionException is thrown. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-602</id>
	<key><![CDATA[[%splayer, [slot%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-603</id>
	<key><![CDATA[Works like array_contains, except the comparison ignores case.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-604</id>
	<key><![CDATA[Exits the program. If this is being run from the command line, works by exiting the interpreter, with  the specified exit code (defaulting to 0). If this is being run from in-game, works just like die().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-605</id>
	<key><![CDATA[locationArray, %s[%sindex%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-606</id>
	<key><![CDATA[Returns whether the specified living entity can pick up items.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-607</id>
	<key><![CDATA[toStrip]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-608</id>
	<key><![CDATA[Calls the closure on each element of an array, and returns an array that contains the results.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-609</id>
	<key><![CDATA[This is not guaranteed to work reliably| %sYes]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-611</id>
	<key><![CDATA[Gets the inventory for the specified player&apos;s enderchest, or the current player if none specified. If the index is specified, only the slot given will be returned. The index of the array in the array is 0 - 26, which corresponds to the slot in the enderchest inventory. If there is no item at the slot specified, %s is returned. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-612</id>
	<key><![CDATA[Changes a sign&apos;s text only for the specified player. This change does not persist. This can be used to &quot;fake&quot; sign text for a player. LineArray, if used, must have 4 elements.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-613</id>
	<key><![CDATA[array, %s[%scomment%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-614</id>
	<key><![CDATA[str %s Sizeable]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-616</id>
	<key><![CDATA[InventoryManagement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-617</id>
	<key><![CDATA[pattern, subject, %s[%slimit%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-618</id>
	<key><![CDATA[Weather]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-619</id>
	<key><![CDATA[Returns an array of entries from banned-ips.txt.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-620</id>
	<key><![CDATA[Returns the name of the item. For now, only works with variables. For instance, nameof(@var) returns the string &quot;@var&quot;. This is useful for a%sing hardcoding of strings of items that are refactorable. This allows tools to properly refactor, without needing to manually update strings that contain the names of variables or other refactorable items. This is a meta function, and is fully resolved at compile time.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-621</id>
	<key><![CDATA[DataTransformations]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-622</id>
	<key><![CDATA[closure, %s[%squeue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-623</id>
	<key><![CDATA[Provides the ability for finding out information about installed extensions, including events and functions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-624</id>
	<key><![CDATA[Cmdline]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-625</id>
	<key><![CDATA[ID, title]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-626</id>
	<key><![CDATA[enables or disables the entity AI.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-627</id>
	<key><![CDATA[Returns whether or not the first entity can have the other entity in an unimpeded line of sight, ignoring the direction it&apos;s facing. For instance, for players this mean that it can have the other entity on its screen and that this one is not hidden by opaque blocks. This uses the same algorithm that hostile mobs use to find the closest player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-628</id>
	<key><![CDATA[Consumes an event, so that lower priority handlers don&apos;t even recieve the event. Monitor level handlers will still recieve it, however, and they can check to see if the event was consumed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-629</id>
	<key><![CDATA[Returns whether or not the underlying event is cancelled or not. If the event is not cancellable in the first place, false is returned. If called from outside an event, a BindException is thrown]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-630</id>
	<key><![CDATA[proc_name, array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-631</id>
	<key><![CDATA[This class contains functions that provide a way to manipulate arrays. To create an array, use the %sarray%s function. For more detailed information on array usage, see the page on [[%s|arrays]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-632</id>
	<key><![CDATA[[%sextensionName%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-633</id>
	<key><![CDATA[Returns the unix time stamp, in milliseconds, that this player was last seen on this server, or 0 if they never were. The player argument can be a UUID or a name. But if given a name, it must be exact.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-634</id>
	<key><![CDATA[[%sargs...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-635</id>
	<key><![CDATA[This class contains functions for resource management. This entire class of functions WILL be deprecated at some point in the future, so don't rely too heavily on it.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-636</id>
	<key><![CDATA[ExtensionMeta]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-637</id>
	<key><![CDATA[Returns the contents of the system clipboard. Can only be used in cmdline mode. Flavor defaults to %s, and is currently unused. Only strings are currently supported. If a string version of the clipboard contents cannot be parsed, a FormatException is thrown. If the platform doesn&apos;t support clipboard operations, an UnsupportedOperationException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-638</id>
	<key><![CDATA[path]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-639</id>
	<key><![CDATA[[%sentity[, projectile%s]%s] %s player, projectile, target%s[%s, speed%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-640</id>
	<key><![CDATA[Gets the player list footer for a player. This is the text that appears below the player list that appears when hitting the tab key.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-641</id>
	<key><![CDATA[objectiveName, name, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-642</id>
	<key><![CDATA[Returns a list of absolute paths of files whose name matches the given regex, searching recursively. Only available in cmdline mode. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-643</id>
	<key><![CDATA[Returns an array of scoreboard tags for this entity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-644</id>
	<key><![CDATA[Gets all players currently viewing this inventory. The specifier can be an entity UUID, block location array, or virtual inventory id.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-646</id>
	<key><![CDATA[Gets or sets the direction the player is facing. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-647</id>
	<key><![CDATA[Gets an array of all currently loaded chunks for a world. The current player&apos;s world is used if one is not provided. The chunk objects are associative arrays with the keys: x, z, and world.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-648</id>
	<key><![CDATA[Provides a switch statement. If none of the conditions match, and no default is provided, %s is returned. See the documentation on [[%s|Logic]] for more information. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-649</id>
	<key><![CDATA[array, boolean closure(key, value)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-650</id>
	<key><![CDATA[[%splayer, [slot%s]%s], array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-651</id>
	<key><![CDATA[Returns a list of all defined compiler options, which can be set using the compilerOptions file option]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-652</id>
	<key><![CDATA[Clears out &quot;session&quot; cookies, that is cookies that weren&apos;t set with an expiration (which translates to 0 in an individual cookie).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-653</id>
	<key><![CDATA[from, to]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-654</id>
	<key><![CDATA[Returns whether the given player has ever been on this server. The player argument can be a UUID or a name. But if given a name, it must be exact.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-655</id>
	<key><![CDATA[commandname, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-656</id>
	<key><![CDATA[Allows scripts to store data from execution to execution. See the guide on [[%s|persistence]] for more information. In all the functions, you may send multiple arguments for the key, which will automatically be concatenated with a period (the namespace separator). No magic happens here, you can put periods yourself, or combine manually namespaced values or automatically namespaced values with no side effects. All the functions in the Persistence API are threadsafe (though not necessarily process safe).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-657</id>
	<key><![CDATA[Returns an array with all the keys of the specified array at which the specified value is equal. That is, for the array(1, 2, 2, 3), if value were 2, would return array(1, 2). If the value cannot be found in the array at all, an empty array will be returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-658</id>
	<key><![CDATA[specifier, itemArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-659</id>
	<key><![CDATA[Persistence]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-660</id>
	<key><![CDATA[If an empty array is provided, a IndexOverflowException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-661</id>
	<key><![CDATA[Returns true if all the values are equal to each other, while ignoring case.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-662</id>
	<key><![CDATA[Sets the shooter of the given projectile. This can be an entity UUID, dispenser location array (throws CastException if not a dispenser), or %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-663</id>
	<key><![CDATA[Crypto]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-664</id>
	<key><![CDATA[Displays a message on the specified players screen, similar to msg, but targets a specific user.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-665</id>
	<key><![CDATA[unicode]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-666</id>
	<key><![CDATA[specifier, slot]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-667</id>
	<key><![CDATA[Returns whether or not this event has been consumed. Usually only useful for Monitor level handlers, it could also be used for highly robust code, as an equal priority handler could have consumed the event, but this handler would still recieve it.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-668</id>
	<key><![CDATA[Frees the given resource. This should ALWAYS be called at some point after creating a resource with res_create_resource, once you are done with the resource.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-669</id>
	<key><![CDATA[[%splayer%s]%s, flight]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-670</id>
	<key><![CDATA[Gets the specified art at the given location. If the item at the specified location isn&apos;t a painting, an [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-671</id>
	<key><![CDATA[func1, %s[%sfunc2...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-672</id>
	<key><![CDATA[teamname, player, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-673</id>
	<key><![CDATA[PluginMeta]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-674</id>
	<key><![CDATA[Sets the specified entity&apos;s health as a percentage, where 0 kills it and 100 gives it full health. An exception is thrown if the entity by that UUID doesn&apos;t exist or isn&apos;t a LivingEntity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-675</id>
	<key><![CDATA[Provides common cryptographic functions. Many functions in this class are aware of and compatible with secure_string (where specified in the function documentation). In these cases, if the argument passed in is a secure_string, it is first decrypted and the underlying string is used rather than the default string value "**secure string**".]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-676</id>
	<key><![CDATA[char_from_unicode(0x1234). Despite the name, certain unicode escapes may return multiple characters, so there is no guarantee that length(char_from_unicode(@val)) will equal 1.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-677</id>
	<key><![CDATA[Queues up a non-disruptive sleep at the end of the queue. This task will stall the execution thread for x milliseconds.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-678</id>
	<key><![CDATA[[%splayer%s]%s, %s[%sdashless%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-680</id>
	<key><![CDATA[If true, applies glowing effect to the entity]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-681</id>
	<key><![CDATA[Shuts down the minecraft server instance.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-682</id>
	<key><![CDATA[Returns a new string, given the byte array encoding provided. The encoding defaults to UTF-8, but may be specified. A FormatException is thrown if the encoding type is invalid.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-683</id>
	<key><![CDATA[objectiveName, array, %s[%sscoreboard%s]%s %s objectiveName, displayname, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-684</id>
	<key><![CDATA[taskType, id]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-685</id>
	<key><![CDATA[Sets the ban flag for the specified player. This will work with offline players, but the name must be exact. When banning, a reason message may be provided that the player will see when attempting to login. An optional source may also be provided that indicates who or what banned the player. At this time, this function only works with the vanilla ban system. If you use a third party ban system, you should instead run the command for that plugin instead. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-686</id>
	<key><![CDATA[Returns the bitwise NOT of the given value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-687</id>
	<key><![CDATA[Loads a chunk for a world using the x and z coordinates. The current player&apos;s world is used if one isn&apos;t provided.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-688</id>
	<key><![CDATA[ArrayHandling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-690</id>
	<key><![CDATA[[%splayer%s]%s, locationArray, block]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-692</id>
	<key><![CDATA[Performs a deep clone on an array (as opposed to a shallow clone). This is useful for multidimensional arrays. See the examples for more info.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-693</id>
	<key><![CDATA[[%splayer%s]%s, itemSlot]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-694</id>
	<key><![CDATA[Scheduling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-695</id>
	<key><![CDATA[Statistics]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-696</id>
	<key><![CDATA[Returns whether or not the player is sneaking.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-697</id>
	<key><![CDATA[variableName, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-700</id>
	<key><![CDATA[Resets all scores for a player tracked by the given scoreboard. This means they will not be show up on any displays. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-701</id>
	<key><![CDATA[ivariable]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-702</id>
	<key><![CDATA[Returns whether or not the item is convertable to a string. Everything but arrays can be used as strings.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-703</id>
	<key><![CDATA[Closes the inventory of the current player, or of the specified player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-704</id>
	<key><![CDATA[Sets the player&apos;s cooldown time for the specified item type. The cooldown must be a positive integer representing server ticks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-705</id>
	<key><![CDATA[Cancels the event (if applicable). If the event is not cancellable, or is already set to the specified cancelled state, nothing happens. If called from outside an event handler, a BindException is thrown. By default, state is true, but you can uncancel an event (if possible) by calling cancel(false).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-706</id>
	<key><![CDATA[Executes the given closure, expanding the value array as individual arguments to the closure. If there are no arguments to be sent to the closure, an empty array can be sent. If the closure returns a value with return(), then that value will be returned with execute. Otherwise, %s is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-707</id>
	<key><![CDATA[Sets the player&apos;s score for the given objective. The name can be anything, not just player names. A LengthException is thrown if it&apos;s too long. The max length may differ based on server implementation, but will probably be 128.Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-708</id>
	<key><![CDATA[Teleports the entity to the given location and returns whether the action was successful. Note this can set both location and direction.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-709</id>
	<key><![CDATA[byte_array, %s[%spos%s]%s, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-710</id>
	<key><![CDATA[Returns an array of all the player names of all the online players on the server. If world is given only the name of the players in this world will be returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-711</id>
	<key><![CDATA[Mostly simulates a block break at a location. Does not trigger an event.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-712</id>
	<key><![CDATA[Regex]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-713</id>
	<key><![CDATA[Checks to see if the specified array has an element at index. If more than one index is specified, then it recursively checks down nested arrays.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-714</id>
	<key><![CDATA[URL Encodes the parameter given. This escapes all special characters per the x-www-form-urlencoded format.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-715</id>
	<key><![CDATA[string1, string2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-716</id>
	<key><![CDATA[Reduces an array to a single value. This works in reverse of array_reduce(). This is useful for, for instance, summing the values of an array. The previously calculated value, then the previous value of the array are sent to the closure, which is expected to return a value, based on the two values, which will be sent again to the closure as the new calculated value. If the array is empty, %s is returned, and if the array has exactly one value in it, only that value is returned. Associative arrays are supported, but the order is based on the key order, which may not be as expected. The keys of the array are ignored.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-717</id>
	<key><![CDATA[Returns an array of every player who has played on this server.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-718</id>
	<key><![CDATA[Sets the name of the Command Block at the given location.If no name is given or name is %s, the Command Block&apos;s name is reset to @.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-719</id>
	<key><![CDATA[Returns a stored value stored with store_value. If the key doesn&apos;t exist in storage, %s is returned. On a more detailed note: If the value stored in the persistence database is not actually a construct, then %s is also returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-720</id>
	<key><![CDATA[Returns the boolean value of a logical AND across all arguments. Uses lazy determination, so once an argument returns false, the function returns. Operator syntax is supported: @a &amp;&amp; @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-721</id>
	<key><![CDATA[Locks the specified event parameter(s), or all of them, if specified with no arguments. Locked parameters become read only for lower priority event handlers.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-722</id>
	<key><![CDATA[Sets the entity for the player to spectate. If set to %s, the spectator will stop following an entity. If the player is not in spectator mode an IllegalArgumentException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-723</id>
	<key><![CDATA[Iterates across an array, calling the closure for each value of the array. The closure should accept two arguments, the key and the value. This method can be used in some code to increase readability, to increase re-usability, or keep variables created in a loop in an isolated scope. Note that this runs at approximately the same speed as a for loop, which is probably slower than a foreach loop. Any values returned from the closure are silently ignored. Returns a reference to the original array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-724</id>
	<key><![CDATA[Sets the level of a player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-726</id>
	<key><![CDATA[Returns a new construct that has been cast to an double. This function will throw a CastException if is_numeric would return false for this item, but otherwise, it will be cast properly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-727</id>
	<key><![CDATA[commandname]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-728</id>
	<key><![CDATA[array, index, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-729</id>
	<key><![CDATA[tryBlock, %s[%scatchVariable, catchBlock%s]%s+, %s[%scatchBlock%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-730</id>
	<key><![CDATA[url, callback %s url, settings]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-732</id>
	<key><![CDATA[These functions allow you to echo information to the screen]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-733</id>
	<key><![CDATA[id, %s[%soptionsArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-734</id>
	<key><![CDATA[Writes the first character of the string, interpreted as an 32 bit char, starting from the given position, or wherever the marker is currently at by default. If the string is empty, a \0 is written instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-736</id>
	<key><![CDATA[Returns true if this name is a valid enchantment type.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-737</id>
	<key><![CDATA[This is a compiler construct, and is not normally used directly. It is created via double quoted strings.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-738</id>
	<key><![CDATA[Returns an array of potion effects that are currently active on a given player. The array can contain potion effect objects, with the key defining the type of potion effect. The arrays contain the following fields: &quot;id&quot;, &quot;strength&quot;, &quot;seconds&quot; remaining, whether the effect is &quot;ambient&quot;, whether &quot;particles&quot; are enabled, and whether the &quot;icon&quot; is shown to the player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-739</id>
	<key><![CDATA[Returns true if the function is known to MethodScript. This is a special function; it is resolved at compile time, and allows for conditional uses of functions that may or may not exist, such as functions that might or might not be loaded in an extension, or from different versions. This is useful for shared code in environments where an extension may or may not be available, or an older version of MethodScript. if(function_exists(&apos;my_extension_function&apos;)){ my_extension_function() } can then be used to selectively &quot;bypass&quot; the compiler restrictions that would normally cause a fatal compile error, since that function is missing. Therefore, you can wrap extension related code around extension specific blocks, and make that code portable to other installations that may not have the extension installed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-740</id>
	<key><![CDATA[Returns the ceiling of any given number. For example, ceil(3.2) returns 4, and ceil(-1.1) returns -1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-741</id>
	<key><![CDATA[F %s yaw, pitch %s player, F %s player, yaw, pitch %s player %s &lt;none&gt;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-742</id>
	<key><![CDATA[This class provides various methods to control script data and program flow.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-743</id>
	<key><![CDATA[Gets a player&apos;s fly speed. The speed will be between -1.0 and 1.0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-745</id>
	<key><![CDATA[Returns a string formatted to the given formatString specification, using the parameters passed in. Locale should be a string in format, for instance, en_US, nl_NL, no_NO... Which locales are available depends on your system. Use %s to use the system&apos;s locale. The formatString should be formatted according to [%s this standard], with the caveat that the parameter types are automatically cast to the appropriate type, if possible. Calendar/time specifiers, (t and T) expect an integer which represents unix time, but are otherwise valid. All format specifiers in the documentation are valid.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-746</id>
	<key><![CDATA[Returns if PVP is allowed in the world.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-747</id>
	<key><![CDATA[[%splayer%s]%s, time, %s[%srelative%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-748</id>
	<key><![CDATA[Returns an informational list of all valid enchantment names. Note that this will simply cover all enchantment types, but may not be a comprehensive list of names that can be accepted, there may be more, however, the list returned here is &quot;comprehensive&quot; and &quot;official&quot;. Additionally, this may vary from server type to server type.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-749</id>
	<key><![CDATA[[%splayer%s]%s, locationArray %s %s[%splayer%s]%s, x, y, z]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-750</id>
	<key><![CDATA[address, banned]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-751</id>
	<key><![CDATA[Encodes an array into an INI format output. An associative array is expected, and a format exception is thrown if it is a normal array. The comment is optional, but if provided will be added to the header of the returned string. Inner arrays cannot be stored, and will throw a CastException if attempted. Nulls are encoded as an empty string, so when reading the value back in, the difference between &apos;&apos; and %s is lost. All values are stored as strings, so if 1 is stored, it will be returned as a string &apos;1&apos;. This is a limitation of the ini format, as it is expected that the code that reads the ini knows what the type of the data is anticipated, not the data itself.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-752</id>
	<key><![CDATA[[%splayer%s]%s, specifier]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-753</id>
	<key><![CDATA[Resets all recipes to the default recipes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-754</id>
	<key><![CDATA[specifier, index, itemArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-755</id>
	<key><![CDATA[profile, query, %s[%sparameters...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-756</id>
	<key><![CDATA[x, z, %s[%sworld%s]%s, biome %s locationArray, biome]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-757</id>
	<key><![CDATA[Returns whether another entity, like an arrow, will collide with this mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-759</id>
	<key><![CDATA[Sandbox]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-760</id>
	<key><![CDATA[[%splayerName%s]%s, newDisplayName]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-761</id>
	<key><![CDATA[Returns a location array with the coordinates of the block the player has highlighted in their crosshairs. If player is omitted, the current player is used. If the block is too far, a RangeException is thrown. An array of block types to be considered transparent can be supplied, otherwise only air will be considered transparent. Providing an empty array will cause air to be considered a potential target, allowing a way to get the block containing the player&apos;s head.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-762</id>
	<key><![CDATA[Unloads a world, and saves it if save is true (defaults true), and returns whether or not the operation was successful.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-763</id>
	<key><![CDATA[Returns if the given projectile should bounce when it hits something.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-764</id>
	<key><![CDATA[procName, %s[%sparams...%s]%s, procCode]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-765</id>
	<key><![CDATA[entityUUID, healthPercent]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-766</id>
	<key><![CDATA[Returns an all lower case version of str]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-767</id>
	<key><![CDATA[[%sobject%s]%s, key %s object, key, %s[%splugin%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-768</id>
	<key><![CDATA[Subtracts x from var, and stores the new value. Equivalent to var-- in other languages. Expects ivar to be a variable, then returns a copy of the old ivar, , or, if var is a constant number, simply adds x to it, and returns the new number. Operator syntax is also supported: @var--]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-769</id>
	<key><![CDATA[type, %s[%sdata%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-770</id>
	<key><![CDATA[locationArray, %s[%soptionsArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-771</id>
	<key><![CDATA[array, %s[%ssortType%s]%s, closure(array)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-772</id>
	<key><![CDATA[Returns true if first array is a subset of second array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-773</id>
	<key><![CDATA[Concatenates any number of arguments together, and returns a string]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-774</id>
	<key><![CDATA[Returns a new byte array primitive, which can be operated on with the ba_ series of functions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-775</id>
	<key><![CDATA[Runs a shell command. &lt;code&gt;command&lt;/code&gt; can be either a string, or array of string arguments. This works mostly like %s however, it buffers then returns the output for sysout once the process is completed, and throws a ShellException with the exception message set to the syserr output if the process exits with an exit code that isn&apos;t the expectedExitCode, which defaults to 0. This is useful for simple commands that return output and don&apos;t need very complicated usage, and failures don&apos;t need to check the exact error code. If the underlying command throws an IOException, it is passed through. Requires the allow-shell-commands option to be enabled in preferences, or run from command line, otherwise an InsufficientPermissionException is thrown. Options is an associative array which expects zero or more of the following options: expectedErrorCode - The expected error code indicating successful command completion. Defaults to 0. workingDir - Sets the working directory for the sub process. By default %s, which represents the directory of this script. If the path is relative, it is relative to the directory of this script.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-776</id>
	<key><![CDATA[[%splayer%s]%s, downFall]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-777</id>
	<key><![CDATA[Given a location array, returns an array of 4 strings of the text in the sign at that location. If the location given isn&apos;t a sign, then a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-778</id>
	<key><![CDATA[Does a lookup to return the data value of a name. For instance, returns 1 for &apos;stone&apos;. If the data value cannot be found, %s is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-779</id>
	<key><![CDATA[Returns true if using call_alias with this cmd would trigger an alias.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-780</id>
	<key><![CDATA[specifier, invArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-781</id>
	<key><![CDATA[entityUUID, amount, %s[%ssourceEntityUUID%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-783</id>
	<key><![CDATA[[%slocationArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-784</id>
	<key><![CDATA[Returns the difficulty of the world, It will be one of PEACEFUL, EASY, NORMAL, or HARD.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-785</id>
	<key><![CDATA[Sets various options about the team from an array. The keys &apos;friendlyfire&apos; and &apos;friendlyinvisibles&apos; must be booleans. The keys &apos;collisionrule&apos;,  &apos;nametagvisibility&apos;, and &apos;deathmessagevisibility&apos; must be one of ALWAYS, FOR_OTHER_TEAMS, FOR_OWN_TEAM, or NEVER.Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-786</id>
	<key><![CDATA[FileHandling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-787</id>
	<key><![CDATA[Sets the uncaught exception handler, returning the currently set one, or %s if none has been set yet. If code throws an exception, instead of doing the default (displaying the error to the user/console) it will run your code instead. The exception that was thrown will be passed to the closure, and it is expected that the closure returns either %s, true, or false. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-788</id>
	<key><![CDATA[prompt]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-789</id>
	<key><![CDATA[objectiveName, name, int, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-790</id>
	<key><![CDATA[Returns an array, given an INI format input. INI files are loosely defined as a set of key-&gt;value pairs, which lends itself to an associative array format. Key value pairs are denoted usually by a &lt;code&gt;key=value&lt;/code&gt; format. The specific rules for decoding an INI file can be found [%s here]. An associative array is returned. All values are stored as strings, so if 1 was stored, it will be returned as a string &apos;1&apos;. This is a limitation of the ini format, as it is expected that the code that reads the ini knows what the type of the data is anticipated, not the data itself. You can easily cast data that is expected to be numeric via the %s and %s functions when reading in the data if exact types are truly needed. INI doesn&apos;t easily support non-string values, if that is needed, consider using %s/%s instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-791</id>
	<key><![CDATA[This class provides regular expression functions. For more details, please see the page on [[%s|regular expressions]]. Note that all the functions are just passthroughs to the Java regex mechanism. If you need to set a flag on the regex, where the api calls for a pattern, instead send array('pattern', 'flags') where flags is any of i, m, or s. Alternatively, using the embedded flag system that Java provides is also valid. Named captures are also supported if you are using Java 7, otherwise they are not supported.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-792</id>
	<key><![CDATA[[%svalues...%s]%s, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-793</id>
	<key><![CDATA[profile, query, %s[%sparams...%s]%s, callback]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-794</id>
	<key><![CDATA[Returns a modern material for the a legacy item id, name, notation, or array. If an invalid argument is passed in, %s is returned. Given 1 or &apos;1:0&apos;, returns &apos;STONE&apos;. Given an item array with {name: STONE, data: 1}, returns &apos;GRANITE&apos;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-795</id>
	<key><![CDATA[Right shifts the value bitsToShift times]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-797</id>
	<key><![CDATA[name%s[%s, space, ...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-798</id>
	<key><![CDATA[Returns a new normal array, given an associative array. (If the array passed in is not associative, a copy of the array is returned).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-799</id>
	<key><![CDATA[[%splayer%s]%s, entity]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-800</id>
	<key><![CDATA[Returns the tan of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-801</id>
	<key><![CDATA[commandname, optionsArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-803</id>
	<key><![CDATA[formatString, parameters... %s formatString, array(parameters...)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-804</id>
	<key><![CDATA[text]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-805</id>
	<key><![CDATA[[%splayer%s]%s, footer]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-806</id>
	<key><![CDATA[id]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-807</id>
	<key><![CDATA[array, size, %s[%sfill%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-808</id>
	<key><![CDATA[Returns the unicode code point for a given character. The character is a string, but it should only be 1 code point character (which may be length(@character)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-809</id>
	<key><![CDATA[[%splayerName%s]%s %s %s[%suuid%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-810</id>
	<key><![CDATA[Returns various information about server.If value is set, it should be an integer of one of the following indexes, and only that information for that index will be returned. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-811</id>
	<key><![CDATA[Returns an array of UUIDs for the given entity&apos;s riders.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-812</id>
	<key><![CDATA[Subtracts value from var, and stores the new value. Value defaults to 1. Equivalent to --var (or var -= value) in other languages. Expects ivar to be a variable, then returns the ivar, or if var is a constant number, simply adds x to it, and returns the new number. Operator syntax is also supported: --@var]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-813</id>
	<key><![CDATA[Gets an array of boss bar ids currently in use.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-814</id>
	<key><![CDATA[Accepts an ivariable ivar as a parameter, and puts the specified value mixed in it. Returns the variable that was assigned. Operator syntax is also supported: &lt;code&gt;@a = 5;&lt;/code&gt;. Other forms are supported as well, +=, -=, *=, /=, .=, which do multiple operations at once. Array assigns are also supported: @array[5] = &apos;new value in index 5&apos;;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-815</id>
	<key><![CDATA[x, %s[%squeue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-816</id>
	<key><![CDATA[[%sworld%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-817</id>
	<key><![CDATA[Sets a command to a Command Block at the given location.If no command is given or parameter is %s, it clears the Command Block.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-818</id>
	<key><![CDATA[Reflection]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-819</id>
	<key><![CDATA[Returns the arc sin of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-820</id>
	<key><![CDATA[Returns whether or not a block is being supplied with power.checkMode can be: &quot;BOTH&quot; (Check both direct and indirect power), &quot;DIRECT_ONLY&quot; (Check direct power only) or &quot;INDIRECT_ONLY&quot; (Check indirect power only). CheckMode defaults to &quot;BOTH&quot;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-821</id>
	<key><![CDATA[Unregisters a plugin channel CommandHelper is listening on, if any.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-822</id>
	<key><![CDATA[Acts as a typical for loop. The assignment is first run. Then, a condition is checked. If that condition is checked and returns true, expression2 is run. After that, expression1 is run. In java syntax, this would be: for(assign; condition; expression1){expression2}. assign must be an ivariable, either a pre defined one, or the results of the assign() function. condition must be a boolean.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-823</id>
	<key><![CDATA[Creates a heap dump file, and places it in the working directory, as &quot;dump.hprof&quot;. This might throw a PluginInternalException if the heap dump tools aren&apos;t available in your JVM. Once dumped, the heap dump can be analyzed using tools such as jhat. More information about jhat can be found [%s here].]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-824</id>
	<key><![CDATA[Returns a scope isolated closure on the provided code. An iclosure is a datatype that represents some code as code, not the results of some code after it is run. Code placed in an iclosure can be used as a string, or executed by other functions using the execute() function. If a closure is &quot;to string&apos;d&quot; it will not necessarily look like the original code, but will be functionally equivalent. The current environment is &quot;snapshotted&quot; and stored with the closure, however, this information is only stored in memory, it isn&apos;t retained during a serialization operation. However, the variable table of the parent scope is not retained, thus making this closure &quot;isolated&quot; from the parent code. The special variable @arguments is automatically created for you, and contains an array of all the arguments passed to the closure, much like procedures. See the wiki article on [[%s|closures]] for more details and examples.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-825</id>
	<key><![CDATA[An execution queue is a queue of closures, which are queued up to be run in sequence by the engine. Unlike set_timeout and set_interval, there is no time component, it's simply a queue of operations to execute sequentially. See the [[%s|article on the learning trail]] for more information.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-826</id>
	<key><![CDATA[element, docField]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-827</id>
	<key><![CDATA[Returns the documentation for an element. There are 4 things that an element might have, and one of these should be passed as the docField argument: type, return, args, description. A valid element is either the name of an ivariable, or a function/proc. For instance, reflect_docs(&apos;reflect_docs&apos;, &apos;description&apos;) would return what you are reading right now. User defined variables and procs may not have any documentation, in which case %s is returned. If the specified argument cannot be found, a FormatException is thrown. If no arguments are passed in, it returns the documentation for reflect_docs, that is, what you&apos;re reading right now.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-828</id>
	<key><![CDATA[[%squeue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-829</id>
	<key><![CDATA[value, radix]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-830</id>
	<key><![CDATA[Resets a player&apos;s display name to their real name. If playerName isn&apos;t specified, defaults to the player running the command.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-831</id>
	<key><![CDATA[Returns the absolute value of the argument.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-832</id>
	<key><![CDATA[Launches a firework rocket. The location array specifies where it is launched from, and the options array is an associative array described below. All parameters in the array are optional, and default to the specified values if not set. The default options being set will make it look like a normal firework, with a white explosion. Returns the firework rocket entity&apos;s UUID. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-833</id>
	<key><![CDATA[[%stype%s]%s, ivar, mixed]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-834</id>
	<key><![CDATA[Clears the previously registered cron job from the registered list. This will prevent the task from running again in the future. If run from within a cron task, the id is optional, and the current task will be prevented from running again in the future. If the ID provided is invalid, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-835</id>
	<key><![CDATA[[%svalue%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-836</id>
	<key><![CDATA[Returns the string s with leading and trailing whitespace cut off]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-837</id>
	<key><![CDATA[Outputs debug information about a variable to standard out. Unlike %s, this only accepts an ivar; it is a meta function. The runtime will then take the variable, and output information about it, in a human readable format, including the variable&apos;s defined type, actual type, name and value.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-838</id>
	<key><![CDATA[Marquee]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-839</id>
	<key><![CDATA[Inserts an item at the specified index, and shifts all other items in the array to the right one. If index is greater than the size of the array, an IndexOverflowException is thrown, though the index may be equal to the size, in which case this works just like array_push(). The array must be normal though; associative arrays are not supported.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-840</id>
	<key><![CDATA[Returns true if the numeric value represented by  a given double or numeric string could be cast to an integer without losing data (or if it&apos;s an integer). For instance, is_numeric(4.5) would return true, and integer(4.5) would work, however, equals(4.5, integer(4.5)) returns false, because the value was narrowed to 4.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-841</id>
	<key><![CDATA[array, %s[%ssortType%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-842</id>
	<key><![CDATA[Returns whether or not a call to modify_event() would fail, based on the parameter being locked by a higher priority handler. If this returns false, it is still not a guarantee that the event would be successfully modified, just that it isn&apos;t locked.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-843</id>
	<key><![CDATA[Merges the specified arrays from left to right, and returns a new array. If the array merged is associative, it will overwrite the keys from left to right, but if the arrays are normal, the keys are ignored, and values are simply pushed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-844</id>
	<key><![CDATA[Returns a location array of the coordinates of the player specified, or the player running the command if no player is specified. Note that unlike entity_loc() the y coordinate will be for the block the player is standing on, which is one meter lower. The array returned also includes the player&apos;s world, yaw and pitch.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-845</id>
	<key><![CDATA[pattern, subject]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-846</id>
	<key><![CDATA[[%sprimitive_value%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-847</id>
	<key><![CDATA[entityUUID, tag]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-848</id>
	<key><![CDATA[world]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-849</id>
	<key><![CDATA[file]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-850</id>
	<key><![CDATA[Sets the player&apos;s game mode. Mode must be one of: SURVIVAL, CREATIVE, ADVENTURE, or SPECTATOR]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-851</id>
	<key><![CDATA[Works exactly like array_indexes(array, value)[0], except in the case where the value is not found, returns %s. That is to say, if the value is contained in an array (even multiple times) the index of the first element is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-852</id>
	<key><![CDATA[Launches the desktop&apos;s default browser with the given url. On headless systems, this will throw an exception.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-853</id>
	<key><![CDATA[Sets up a marquee, which will automatically split up a given string for you, and call the callback. The split string will automatically wrap, handle buffering spaces, and scroll through the text. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-854</id>
	<key><![CDATA[array, index...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-855</id>
	<key><![CDATA[[%scronID%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-856</id>
	<key><![CDATA[This class is for functions that are experimental. They don't actually get added to the documentation, and are subject to removal at any point in time, nor are they likely to have good documentation.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-857</id>
	<key><![CDATA[Sets a player&apos;s enderchest&apos;s inventory to the specified inventory object. An inventory object is one that matches what is returned by penderchest(), so set_penderchest(penderchest()), while pointless, would be a correct call. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-858</id>
	<key><![CDATA[Works like queue_delay, but puts the delay at the front of the queue.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-859</id>
	<key><![CDATA[specifier, %s[%sindex%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-860</id>
	<key><![CDATA[Converts an array into a JSON encoded string. Both normal and associative arrays are supported. Within the array, only primitives and arrays can be encoded.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-861</id>
	<key><![CDATA[url]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-862</id>
	<key><![CDATA[Takes an associative array with keys representing equipment slots and values of itemArrays, the same used by set_pinv. This does not work on most &quot;dumb&quot; entities, only mobs (entities with AI). Unless a mod, plugin, or future update changes vanilla functionality, only humanoid mobs will render their equipment slots. The equipment slots are: WEAPON, OFF_HAND, BOOTS, LEGGINGS, CHESTPLATE, or HELMET]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-863</id>
	<key><![CDATA[[%splayer%s]%s, slot, type]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-864</id>
	<key><![CDATA[Removes an index from an array. If the array is a normal array, all values&apos; indices are shifted left one. If the array is associative, the index is simply removed. If the index exists, the value removed is returned. If the index doesn&apos;t exist, the array remains unchanged, however it&apos;ll throw a RangeException for normal arrays (returns %s for associative arrays).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-865</id>
	<key><![CDATA[Set an entity to be breedable.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-866</id>
	<key><![CDATA[Returns a non-linking closure on the provided code. The same rules apply for closures, except the top level internal code does not check for proper linking at compile time, and instead links at runtime. Lexer errors and some other compile time checks ARE done however, but functions are not optimized or linked. This is used for remote code execution, since the remote platform may have some functionality unavailable on this current platform.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-867</id>
	<key><![CDATA[Clipboard]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-868</id>
	<key><![CDATA[[%smarqueeName%s]%s, text, stringWidth, delayTime, callback]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-869</id>
	<key><![CDATA[Returns the player&apos;s game mode. It will be one of SURVIVAL, CREATIVE, ADVENTURE, or SPECTATOR.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-870</id>
	<key><![CDATA[constant]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-871</id>
	<key><![CDATA[Sets the contents of the system clipboard, to the given value. Can only be used in cmdline mode. Flavor defaults to %s, and is currently unused. Only strings are currently supported. If the platform doesn&apos;t support clipboard operations, an UnsupportedOperationException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-872</id>
	<key><![CDATA[Gives the player the specified amount of experience.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-873</id>
	<key><![CDATA[Provides a set of functions that deal with statistical analysis of numbers.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-874</id>
	<key><![CDATA[entityUUID, int]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-875</id>
	<key><![CDATA[Gets an array of current options for the specified boss bar.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-876</id>
	<key><![CDATA[Returns an array of (x, z, world) coordinates of the chunk of either the location specified or the location of the player running the command.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-877</id>
	<key><![CDATA[Sometimes, when you need to calculate an advanced mathematical expression, it is messy to write out everything in terms of functions. This function will allow you to evaluate a mathematical expression as a string, using common mathematical notation. For example, (2 + 3) * 4 would return 20. Variables can also be included, and their values given as an associative array. expr(&apos;(x + y) * z&apos;, array(x: 2, y: 3, z: 4)) would be the same thing as the above example. This function requires WorldEdit in plugins, lib, or the server root in order to run.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-878</id>
	<key><![CDATA[Compiler internal functions should be declared here. If you're reading this from anywhere but the source code, there's a bug, because these functions shouldn't be public or used in a script.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-879</id>
	<key><![CDATA[Returns the UUID of the entity that is holding the given living entity&apos;s leash, or %s if it isn&apos;t being held.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-880</id>
	<key><![CDATA[Equivalent to not(sequals(val1, val2)). Operator syntax is also supported: @a]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-881</id>
	<key><![CDATA[Returns a list of all currently loaded worlds.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-882</id>
	<key><![CDATA[Sets the player&apos;s food level. This is an integer from 0-?]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-883</id>
	<key><![CDATA[locationArray, art]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-884</id>
	<key><![CDATA[Returns the bitwise exclusive OR of the specified values]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-885</id>
	<key><![CDATA[number, %s[%sprecision%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-886</id>
	<key><![CDATA[Returns true if entity is living, otherwise false.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-888</id>
	<key><![CDATA[Returns a one character string, read in as an 32 bit char, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-889</id>
	<key><![CDATA[Adds the specified item to a player&apos;s enderchest. Unlike set_penderchest(), this does not specify a slot. The items are distributed in the player&apos;s inventory, first filling up slots that have the same item type, up to the max stack size, then fills up empty slots, until either the entire inventory is filled or the entire amount has been given. If the player&apos;s enderchest is full, the number of items that were not added is returned, which will be less than or equal to the quantity provided. Otherwise, returns 0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-890</id>
	<key><![CDATA[Executes a query, just like the %s function, however, no validation is done to ensure that SQL injections might occur (essentially allowing for concatenation directly in the query). Otherwise, functions exactly the same as query().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-891</id>
	<key><![CDATA[objectivename, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-892</id>
	<key><![CDATA[Queues a task at the front of the queue.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-893</id>
	<key><![CDATA[Returns the amount of air the specified living entity has remaining.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-894</id>
	<key><![CDATA[[%splayer%s]%s, locationArray, 1, 2, 3, 4 %s %s[%splayer%s]%s, locationArray, lineArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-895</id>
	<key><![CDATA[isStorming, %s[%sworld%s]%s, %s[%sint%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-896</id>
	<key><![CDATA[Sends a chat message to the server, as the given player. Otherwise the same as the chat() function]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-897</id>
	<key><![CDATA[entityUUID, seconds]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-898</id>
	<key><![CDATA[Opens a trading interface for the current player, or the one specified. Only one player can trade with a merchant at a time. If the merchant is already being traded with, the function will do nothing. When true, force will make the merchant trade with the player, closing the trade with the previous player if there was one. Function returns true if trading was successfully opened, and false if not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-899</id>
	<key><![CDATA[Returns whether or not this player is banned. This will work with offline players, but the name must be exact. At this time, this function only works with the vanilla ban system. If you use a third party ban system, you should instead run the command for that plugin instead. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-900</id>
	<key><![CDATA[Sets the art at the specified location. If the art doesn&apos;t fit, nothing happens, and false is returned. Otherwise, true is returned. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-901</id>
	<key><![CDATA[Sets a player&apos;s inventory to the specified inventory array. An inventory array is one that matches what is returned by pinv(), so set_pinv(pinv()), while pointless, would be a correct call. If a slot is specified as the second argument, only that slot is set with the given item array. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-902</id>
	<key><![CDATA[This class provides functions for hooking into CommandHelper's powerful Performance measuring. To use the functions, you must have allow-profiling option set to true in your preferences file.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-903</id>
	<key><![CDATA[destination_byte_array, source_byte_array, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-904</id>
	<key><![CDATA[Creates an array of values.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-905</id>
	<key><![CDATA[This class provides functions that are able to transform data from native objects to their serialized forms, i.e. json, ini, etc.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-907</id>
	<key><![CDATA[Returns whether or not a mob&apos;s custom name is always visible. If this is true it will be as visible as player names, otherwise it will only be visible when near the mob.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-908</id>
	<key><![CDATA[Returns the name of the Command Block at the given location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-909</id>
	<key><![CDATA[Resets the visible time for the player to the time of the world.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-910</id>
	<key><![CDATA[Sets the text of the sign at the given location. If the block at x,y,z isn&apos;t a sign, a RangeException is thrown. If a text line cannot fit on the sign, it&apos;ll be cut off.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-911</id>
	<key><![CDATA[&lt;none&gt; %s parameterArray %s parameter, %s[%sparameter...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-912</id>
	<key><![CDATA[Sets the player&apos;s list name. Colors are supported and setting the name to %s resets it.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-913</id>
	<key><![CDATA[itemArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-914</id>
	<key><![CDATA[[%sstate%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-915</id>
	<key><![CDATA[Sets the block at the location. The physics boolean determines whether or not this causes a block update. Defaults to true.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-916</id>
	<key><![CDATA[MobManagement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-917</id>
	<key><![CDATA[haystack, needle]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-918</id>
	<key><![CDATA[player, isWhitelisted]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-919</id>
	<key><![CDATA[Fakes an incoming plugin message from the player. Channel should be a string (the channel name) and message should be a byte_array primitive. Depending on the plugin, these parameters will vary. If message is %s an empty byte_array is sent.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-920</id>
	<key><![CDATA[mixed]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-921</id>
	<key><![CDATA[[%splayer%s]%s, hunger]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-922</id>
	<key><![CDATA[[%svar1, var2...,%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-923</id>
	<key><![CDATA[Queues a task up at the end of the specified queue.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-924</id>
	<key><![CDATA[Returns an array of all material names.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-925</id>
	<key><![CDATA[Returns the UUID of the given entity&apos;s vehicle, or %s if none exists.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-926</id>
	<key><![CDATA[Returns true if the entity cannot be damaged]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-927</id>
	<key><![CDATA[[%splayer%s]%s, inventorySlot]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-928</id>
	<key><![CDATA[Returns the character length of str, if the value is castable to a string, or the length of the %s object, if an array or other Sizeable object is given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-929</id>
	<key><![CDATA[Rewinds the byte array marker to 0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-930</id>
	<key><![CDATA[Returns whether or not there is data stored at the specified key in the Persistence database.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-931</id>
	<key><![CDATA[timeInMS, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-932</id>
	<key><![CDATA[var1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-933</id>
	<key><![CDATA[ItemMeta]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-934</id>
	<key><![CDATA[Debug]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-935</id>
	<key><![CDATA[This class contains functions that are mostly only useful for command line scripts, but in general may be used by any script. For more information on running MethodScript from the command line, see [[%s|this wiki page]].]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-936</id>
	<key><![CDATA[[%splayerToShow,%s]%s playerInventory]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-937</id>
	<key><![CDATA[Clears the oauth tokens (refresh token and access token) for the given client ID. If the client ID is not specified, all tokens are deleted. This is useful if various oath tokens have been revoked, or you would specifically like to prevent caching of those tokens.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-938</id>
	<key><![CDATA[Returns the string s with leading whitespace cut off]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-939</id>
	<key><![CDATA[XGUI]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-940</id>
	<key><![CDATA[array, testValue]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-941</id>
	<key><![CDATA[Given an array and glue, to-strings all the elements in the array (just the values, not the keys), and joins them with the glue, defaulting to a space. For instance array_implode(array(1, 2, 3), &apos;-&apos;) will return &quot;1-2-3&quot;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-942</id>
	<key><![CDATA[Returns the median across all the numbers in the set. The input may be an array of numbers, or individual numbers as arguments. The median is the number that is in the center of set, once the values in the set are ordered from least to greatest. That is, in the set [1, 2, 3], 2 is the median. If there is an even number of value in the set, the middle two values are averaged, and that value is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-943</id>
	<key><![CDATA[max, then min is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-944</id>
	<key><![CDATA[Sorts an array in place, and also returns a reference to the array. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-945</id>
	<key><![CDATA[Sets the specified item in the specified inventory slot. The specifier can be an entity UUID, block location array or virtual inventory id. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-946</id>
	<key><![CDATA[Unbinds an event, which causes it to not run anymore. If called from within an event handler, eventID is optional, and defaults to the current event id.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-947</id>
	<key><![CDATA[Removes all non-unique values from an array. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-948</id>
	<key><![CDATA[Returns true if every value in the array meets some test, which the closure should return true or false about. Not all values will necessarily be checked, once a value is determined to fail the check, execution is stopped, and false is returned. The closure will be passed each value in the array, one at a time, and must return a boolean.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-949</id>
	<key><![CDATA[Returns a new construct that has been cast to an integer. This function will throw a CastException if is_numeric would return false for this item, but otherwise, it will be cast properly. Data may be lost in this conversion. For instance, 4.5 will be converted to 4, by using integer truncation. You can use is_integral to see if this data loss would occur.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-950</id>
	<key><![CDATA[Returns true if the two values are NOT equal, or false otherwise. Equivalent to not(equals(val1, val2)). Operator syntax is also supported: @a]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-952</id>
	<key><![CDATA[parameter, value, %s[%sthrowOnFailure%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-953</id>
	<key><![CDATA[Returns the highest number in a given list of numbers. If any of the arguments are arrays, they are expanded into individual numbers, and also compared.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-954</id>
	<key><![CDATA[array&lt;string&gt;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-955</id>
	<key><![CDATA[Provides methods for viewing data about both CommandHelper and the other plugins in your server. Though not meant to be called by normal scripts, these methods are available everywhere other methods are available. Note that for some of these functions to even work, play-dirty mode must set to on. These are most useful in conjuction with interpreter mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-956</id>
	<key><![CDATA[id, optionsArray %s id, percent %s id, title]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-957</id>
	<key><![CDATA[character]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-958</id>
	<key><![CDATA[Returns x modulo n. Throws a RangeException when n is 0. Operator syntax is also supported: @x % @n]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-959</id>
	<key><![CDATA[int1]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-960</id>
	<key><![CDATA[array, %s[%skey%s]%s, ivar, code, else]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-961</id>
	<key><![CDATA[Returns the distance between two locations.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-962</id>
	<key><![CDATA[This class of functions allows recipes to be managed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-963</id>
	<key><![CDATA[([[%s|Examples...]])]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-964</id>
	<key><![CDATA[Returns the EntityType of the entity with the specified ID. Returns %s if the entity does not exist.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-965</id>
	<key><![CDATA[Sets whether or not a player has operator status. If no player is specified the player running the script is given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-966</id>
	<key><![CDATA[Returns the owner&apos;s name, or %s if the mob is unowned.An UntameableMobException is thrown if mob isn&apos;t tameable to begin with.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-967</id>
	<key><![CDATA[Returns the md5 hash of the specified string. The md5 hash is no longer considered secure, so you should not use it for storage of sensitive data, however for general hashing, it is a quick and easy solution. md5 is a one way hashing algorithm. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-968</id>
	<key><![CDATA[Returns an associative array that represents the player&apos;s velocity. The array contains the following items: magnitude, x, y, z. These represent a 3 dimensional Vector. The important part is x, y, z, however, the magnitude is provided for you as a convenience. (It should equal sqrt(x ** 2 + y ** 2 + z ** 2))]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-969</id>
	<key><![CDATA[Determines if the provided teststring ends with the provided keyword. Note that this will cast both arguments to strings. This means that the boolean true will match the string &apos;true&apos; or the integer 1 will match the string &apos;1&apos;. If an empty string is provided for the keyword, it will always return true.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-970</id>
	<key><![CDATA[Returns an array of all registered event names.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-971</id>
	<key><![CDATA[Sets the drop chances for each equipment slot on a mob, but does not work on players. Passing %s instead of an array will automatically set all rates to 0, which will cause nothing to drop. A rate of 1 will guarantee a drop.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-972</id>
	<key><![CDATA[Pushes all the values of an array individually. If you try to push an array onto array_push, this will give you a two dimensional array, this method pushes the sub values of the values array into the destination array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-973</id>
	<key><![CDATA[Echoes string to the chat, as if the user simply typed something into the chat bar. This function cannot be run from console, a PlayerOfflineException is thrown if attempted. Use broadcast() instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-974</id>
	<key><![CDATA[str]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-975</id>
	<key><![CDATA[val1, val2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-976</id>
	<key><![CDATA[assign, condition, expression1, expression2, else]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-977</id>
	<key><![CDATA[[%sflavor%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-978</id>
	<key><![CDATA[x, n]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-980</id>
	<key><![CDATA[entityUUID, boolean]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-981</id>
	<key><![CDATA[Calculate pitch from one location to another. This will be from -90.0 to 90.0, which is up and down respectively.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-982</id>
	<key><![CDATA[Gets the command (as a string) that ended up triggering this script, exactly how it was entered by the player. This could be %s, if for instance it is called from within an event.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-983</id>
	<key><![CDATA[locationArray, type]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-984</id>
	<key><![CDATA[Returns an associative array of all information about the world&apos;s border. The keys are width, center, damagebuffer, damageamount, warningtime, warningdistance.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-985</id>
	<key><![CDATA[Checks to see if the value is, extends, or implements the given type. Keyword usage is preferred: &lt;code&gt;@value instanceof int&lt;/code&gt;. The opposite operation is &lt;code&gt;@value notinstanceof int&lt;/code&gt;. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-986</id>
	<key><![CDATA[Returns a closure on the provided code. A closure is a datatype that represents some code as code, not the results of some code after it is run. Code placed in a closure can be used as a string, or executed by other functions using the execute() function. If a closure is &quot;to string&apos;d&quot; it will not necessarily look like the original code, but will be functionally equivalent. The current environment is &quot;snapshotted&quot; and stored with the closure, however, this information is only stored in memory, it isn&apos;t retained during a serialization operation. Also, the special variable @arguments is automatically created for you, and contains an array of all the arguments passed to the closure, much like procedures. See the wiki article on [[%s|closures]] for more details and examples.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-987</id>
	<key><![CDATA[Returns true if this byte array is little endian. By default, byte arrays are big endian, but this may be changed with ba_set_little_endian.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-988</id>
	<key><![CDATA[[%splayerName%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-989</id>
	<key><![CDATA[command, %s[%soptions%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-990</id>
	<key><![CDATA[Unregisters an objective from the scoreboard. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-991</id>
	<key><![CDATA[Groups any number of functions together, and returns %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-993</id>
	<key><![CDATA[These functions provide basic logical operations.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-994</id>
	<key><![CDATA[Exceptions]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-995</id>
	<key><![CDATA[[%svariableName%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-996</id>
	<key><![CDATA[Returns whether or not the array is associative. If the parameter is not an array, throws a CastException.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-997</id>
	<key><![CDATA[Removes a player from the specified boss bar.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-998</id>
	<key><![CDATA[This class of functions allow players to be managed. Functions that accept an online player's name will also accept their UUID.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-999</id>
	<key><![CDATA[Creates an explosion with a given size at a given location. Size defaults to size of a creeper (3), and %s uses the default. If safe is true, (defaults to false) the explosion won&apos;t hurt the surrounding blocks. If size is 0, and safe is true, you will still see the animation and hear the sound, but players won&apos;t be hurt, and neither will the blocks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1000</id>
	<key><![CDATA[Returns if the chunk is a slime spawning chunk. The current player&apos;s world is used if one is not provided.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1001</id>
	<key><![CDATA[x, z, %s[%sworld%s]%s locationArray, %s[%sworld%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1003</id>
	<key><![CDATA[Sets the display name, color, prefix, and/or suffix of the given team. If arg 2 is not an array, it is assumed to be the displayname, otherwise arg 2 should be an array with keys &apos;displayname&apos;, &apos;color&apos;, &apos;prefix&apos;, and/or &apos;suffix&apos;, affecting their respective properties. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1004</id>
	<key><![CDATA[Returns the name of the player that&apos;s display on the player list.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1005</id>
	<key><![CDATA[Returns the selected quickbar slot of the given or executing player. The slot number is in range of [0-8].]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1006</id>
	<key><![CDATA[Decrypts a secure_string into a char array. To keep backwards compatibility with strings in general, this function also accepts normal strings, which are not decrypted, but instead simply returned in the same format as if it were a secure_string. See the examples in %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1007</id>
	<key><![CDATA[ClassType]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1008</id>
	<key><![CDATA[Returns a player&apos;s name. If a string is specified, it will attempt to find a complete match for a partial name. If no string is specified, the current player is returned. UUIDs are also accepted for this and other functions that apply to online players. If the command is being run from the console, then the string &apos;~console&apos; is returned. If the command came from a CommandBlock, the block&apos;s name prefixed with # is returned. If the command is coming from elsewhere, returns a string chosen by the sender of this command (or %s). Note that most functions won&apos;t support console or block names (they&apos;ll throw a PlayerOfflineException), but you can use this to determine where a command is being run from.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1009</id>
	<key><![CDATA[Adds all the arguments together, and returns either a double or an integer. Operator syntax is also supported: @a + @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1010</id>
	<key><![CDATA[Gets a player&apos;s walk speed. The speed will be between -1.0 and 1.0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1011</id>
	<key><![CDATA[code, condition]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1012</id>
	<key><![CDATA[Prompts the user for a single character. They do not need to hit enter first. This only works in cmdline mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1013</id>
	<key><![CDATA[specifier, itemArray %s specifier, itemID, qty]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1014</id>
	<key><![CDATA[[%seventID%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1016</id>
	<key><![CDATA[Constructs a new object of the specified type. The type must be hardcoded.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1017</id>
	<key><![CDATA[Sets the location of the player to the specified coordinates. If the coordinates are not valid, or the player was otherwise prevented from teleporting, false is returned, otherwise true. If player is omitted, the current player is used. Note that 1 is automatically added to the y coordinate.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1018</id>
	<key><![CDATA[shoots an entity from the specified location (can be an entity UUID, player name or location array), or the current player if no arguments are passed. If no entity type is specified, it defaults to a fireball. If provide three arguments, with target (entity UUID, player name or location array), entity will shoot to target location. Last, fourth argument, is double and specifies the speed of projectile. Returns the UUID of the entity. Valid projectile types: LLAMA_SPIT]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1019</id>
	<key><![CDATA[Returns an array of currently running tasks. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1020</id>
	<key><![CDATA[Returns the unicode character for a given unicode value. This is meant for dynamic input that needs converting to a unicode character, if you&apos;re hardcoding it, you should just use &apos;\u1234&apos; syntax instead, however, this is the dynamic equivalent of the \u string escape, so &apos;\u1234&apos;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1021</id>
	<key><![CDATA[Returns a substring of the given string str, starting from index begin, to index end, or the end of the string, if no index is given. If either begin or end are out of bounds of the string, an exception is thrown. substr(&apos;hamburger&apos;, 4, 8) returns &quot;urge&quot;, substr(&apos;smiles&apos;, 1, 5) returns &quot;mile&quot;, and substr(&apos;lightning&apos;, 5) returns &quot;ning&quot;. See also length().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1022</id>
	<key><![CDATA[Returns the bitwise OR of the specified values]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1023</id>
	<key><![CDATA[x, z, %s[%sworld%s]%s %s locationArray, %s[%sworld%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1024</id>
	<key><![CDATA[Returns an array of the registered scoreboard ID&apos;s. The special scoreboard &apos;main&apos; represents the server&apos;s main scoreboard which can be managed by the vanilla /scoreboard command.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1025</id>
	<key><![CDATA[Parses string into an array, where string is a space seperated list of arguments. Handy for turning $ into a usable array of items with which to script against. Extra spaces are ignored, so you would never get an empty string as an input. useAdvanced defaults to false, but if true, uses a basic argument parser that supports quotes for allowing arguments with spaces.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1026</id>
	<key><![CDATA[Returns whether or not the item is actually a ByteArray datatype.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1027</id>
	<key><![CDATA[Returns the equivalent of not(or())]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1028</id>
	<key><![CDATA[Sets the block at the location from a blockdata string. Forward compatibility is not ensured.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1029</id>
	<key><![CDATA[This provides extremely limited gui control functions. This entire class is experimental, and will probably be removed at some point.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1030</id>
	<key><![CDATA[Creates a new construct that is the &quot;toString&quot; of an item. For arrays, an human readable version is returned; this should not be used directly, as the format is not guaranteed to remain consistent. Booleans return &quot;true&quot; or &quot;false&quot; and %s returns &quot;%s&quot;. Strings (and subclasses of strings) are simply returned as is.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1031</id>
	<key><![CDATA[Returns the unix time stamp, in milliseconds, that this player first logged onto this server, or 0 if they never have. The player argument can be a UUID or a name. But if given a name, it must be exact.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1032</id>
	<key><![CDATA[Provides functions for managing the system clipboard]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1033</id>
	<key><![CDATA[type, arg]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1034</id>
	<key><![CDATA[Returns an array of procedures callable in the current scope.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1036</id>
	<key><![CDATA[[%splayer%s]%s, xp]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1037</id>
	<key><![CDATA[Sets the selected quickbar slot of the given or executing player to the given slot. The slot number is in range of [0-8].]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1038</id>
	<key><![CDATA[Returns an entity&apos;s motion vector represented as an associative array with the the keys x, y, and z. As a convenience, the magnitude is also included.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1039</id>
	<key><![CDATA[Returns a double, read in as a 32 bit float, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1040</id>
	<key><![CDATA[entityUUID, effect]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1041</id>
	<key><![CDATA[tryCode, %s[%svarName, catchCode, [exceptionTypes%s]%s] %s tryCode, catchCode]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1042</id>
	<key><![CDATA[Writes the text to the system&apos;s std err. Unlike console(), this does not use anything else to format the output, though in many cases they will behave nearly the same. However, colors and other formatting characters will not &quot;bleed&quot; through, so sys_err(color(RED) . &apos;This is red&apos;) will not cause the next line to also be red, so if you need to print multiple lines out, you should manually add \n to create your linebreaks, and only make one call to sys_err.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1043</id>
	<key><![CDATA[Unregisters a team from the scoreboard. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1044</id>
	<key><![CDATA[format, %s[%stime, [timezone, [locale%s]%s]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1045</id>
	<key><![CDATA[Walks through array, setting ivar equal to each element in the array, then running code. In addition, foreach(1..4, @i, code()) is also valid, setting @i to 1, 2, 3, 4 each time. The same syntax is valid as in an array slice. If key is set (it must be an ivariable) then the index of each iteration will be set to that. See the examples for a demonstration. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1046</id>
	<key><![CDATA[[%splayer,%s]%s channel, message]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1047</id>
	<key><![CDATA[Shows the enderchest of either the current player  or the specified player if given. If a second player is specified, shows the second player the contents of the first player&apos;s enderchest.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1048</id>
	<key><![CDATA[[%sdir%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1049</id>
	<key><![CDATA[Returns the quantity of the specified item that the player is carrying (including armor slots). This counts across all slots in inventory. Recall that 0 is false, and anything else is true, so this can be used to get the total, or just see if they have the item. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1050</id>
	<key><![CDATA[Returns the mob&apos;s age as an integer. Zero represents the point of adulthood. Throws an UnageableMobException if the mob is not a type that ages]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1051</id>
	<key><![CDATA[Creates a mutable primitive object, initially setting the value of the object to %s, or the specified value. The value must be a primitive value, and cannot be an array or object. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1052</id>
	<key><![CDATA[Provides functions to control the weather]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1053</id>
	<key><![CDATA[Returns true if a bind with the specified id exists and is currently bound. False is returned otherwise. This can be used to pre-emptively a%s a BindException if duplicate ids are used.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1054</id>
	<key><![CDATA[teststring, keyword]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1055</id>
	<key><![CDATA[Returns the current unix time stamp, in milliseconds. The resolution of this is not guaranteed to be extremely accurate. If you need extreme accuracy, use nano_time()]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1056</id>
	<key><![CDATA[[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1057</id>
	<key><![CDATA[str, begin, %s[%send%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1058</id>
	<key><![CDATA[[%splayer%s]%s, ticks]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1059</id>
	<key><![CDATA[Sets the player on fire for the specified number of ticks. If a boolean is given for ticks, false is 0, and true is 20.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1061</id>
	<key><![CDATA[Returns the maximum health of this living entity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1062</id>
	<key><![CDATA[Returns an array of files in the current working directory, including &quot;hidden&quot; files, orif directory is specified, the files in that directory. This is only available in cmdline mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1063</id>
	<key><![CDATA[Returns an array of arrays of the enchantments and their levels on the given item. For example: array(&apos;sharpness&apos;: 1, &apos;unbreaking&apos;: 3).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1064</id>
	<key><![CDATA[Returns extension info for the extensions the system has loaded, or the given extension if extensionName is specified. Included data will be events, functions and version, keyed by the name of the extension (or __unidentified__ if it&apos;s an old-style extension).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1065</id>
	<key><![CDATA[locationArray, blockName, %s[%sphysics%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1067</id>
	<key><![CDATA[Encrypts a value using bcrypt, using the specified workload, or 5 if none provided. BCrypt is supposedly more secure than SHA1, and certainly more secure than md5. Note that using bcrypt is slower, which is one of its security advantages, however, setting the workload to higher numbers will take exponentially more time. A workload of 5 is a moderate operation, which should complete in under a second, however, setting it to 10 will take many seconds, and setting it to 15 will take a few minutes. The workload must be between 5 and 31. See the documentation for check_bcrypt for full usage. Bcrypt is recommended for password hashing, whereas sha-* functions are not. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1068</id>
	<key><![CDATA[Sets the velocity of this entity according to the supplied xyz array. All 3 values default to 0, so an empty array will simply stop the entity&apos;s motion. Both normal and associative arrays are accepted.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1069</id>
	<key><![CDATA[Sets the spawn of the world. Note that in some cases a plugin may override the spawn, and this method will do nothing. In that case, you should use the plugin&apos;s commands to set the spawn.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1070</id>
	<key><![CDATA[Returns the hyperbolic sine of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1072</id>
	<key><![CDATA[Writes a double, interpreted as a 64 bit double, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1073</id>
	<key><![CDATA[Sets the entity on fire for the given number of seconds. Throws a RangeException if seconds is less than 0 or greater than 107374182.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1074</id>
	<key><![CDATA[Returns an array of the groups a player is in. If playerName is omitted, the current player is used. This relies on &quot;group.groupname&quot; permission nodes in your permissions plugin. Otherwise an extension is required to get the groups from the plugin.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1075</id>
	<key><![CDATA[Adds a new team to the scoreboard. Throws a ScoreboardException if a team already exists with the given name. Throws a LengthException if the team name is more than 16 characters. Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1076</id>
	<key><![CDATA[Returns the boolean value of a logical OR across all arguments. Uses lazy determination, so once an argument resolves to true, the function returns. Operator syntax is also supported: @a]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1077</id>
	<key><![CDATA[cond, trueRet, %s[%sfalseRet%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1078</id>
	<key><![CDATA[name, %s[%stype, environment, [seed, [generator%s]%s]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1079</id>
	<key><![CDATA[Sets the player list footer for a player. This is the text that appears below the player list that appears when hitting the tab key. Colors and new lines are accepted. Only the given player (or current player if none is given) will see these changes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1080</id>
	<key><![CDATA[Synchronizes access to the code block for all calls (from different threads) with the same syncObject argument. This means that if two threads will call synchronized(&apos;example&apos;, &amp;lt;code&amp;gt;), the second call will hang the thread until the passed code of the first call has finished executing. If you call this function from within this function on the same thread using the same syncObject, the code will simply be executed. For more information about synchronization, see: %s(computer_science)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1081</id>
	<key><![CDATA[Echoes]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1082</id>
	<key><![CDATA[Takes a JSON encoded string, and returns an array, either normal or associative, depending on the contents of the JSON string. If the JSON string is improperly formatted, a FormatException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1083</id>
	<key><![CDATA[param]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1085</id>
	<key><![CDATA[world, %s[%ssave%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1086</id>
	<key><![CDATA[Allows a CommandHelper alias to be called from within another alias. Typically this is not possible, as a script that runs &quot;/jail = /jail&quot; for instance, would simply be calling whatever plugin that actually provides the jail functionality&apos;s /jail command. However, using this function makes the command loop back to CommandHelper only. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1087</id>
	<key><![CDATA[Adds enchantments to an item in the player&apos;s inventory. A single enchantment type and level can be specified or an enchantment array may be given. If slot is %s, the currently selected slot is used. If an enchantment cannot be applied to the specified item, an EnchantmentException is thrown. The enchantment array must have the enchantment as keys and levels as the values. (eg. array(&apos;unbreaking&apos;: 1)) The minecraft names for enchantments may be used: [%s], and the level parameter may be a roman numeral as well.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1088</id>
	<key><![CDATA[Replaces all instances of &apos;search&apos; with &apos;replacement&apos; in &apos;subject&apos;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1091</id>
	<key><![CDATA[Sets whether a living entity will despawn. True means it will not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1092</id>
	<key><![CDATA[Converts old pre-1.13 item arrays to new item arrays. Almost all item arrays will be converted successfully when passing them to a function that accepts item arrays. However, if the array is missing the &apos;type&apos; key, several item types might not convert accurately due to name conflicts. This function offers convenience and ensures better conversion accuracy. Use this if you have item arrays stored in a database and want to convert them all at once. Passing new item arrays to this function is not supported. Conversions may not be supported in far future versions of Minecraft.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1093</id>
	<key><![CDATA[Plays a note for the given player, at the given note block location. Player defaults to the current player, and location defaults to the player&apos;s location. Instrument may be one of: PIANO, BASS_DRUM, SNARE_DRUM, STICKS, BASS_GUITAR, FLUTE, BELL, GUITAR, CHIME, XYLOPHONE, IRON_XYLOPHONE, COW_BELL, DIDGERIDOO, BIT, BANJO, or PLING, and note is an associative array with 2 values, array(octave: 0, tone: &apos;F#&apos;) where octave is either 0, 1, or 2, and tone is one of the notes G, A, B, C, D, E, or F, optionally suffixed with a pound symbol, which denotes a sharp. (Not all notes can be sharped.)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1095</id>
	<key><![CDATA[Returns various information about the player specified, or the current player if no argument was given. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1096</id>
	<key><![CDATA[locationArray, distance, %s[%stype%s]%s %s locationArray, distance, %s[%sarrayTypes%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1097</id>
	<key><![CDATA[OAuth]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1098</id>
	<key><![CDATA[string command]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1099</id>
	<key><![CDATA[world, %s[%sgameRule%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1100</id>
	<key><![CDATA[Creates a new thread, named id, and runs the closure on that thread. Note that many operations are not advisable to be run on other threads, and unless otherwise stated, functions are generally not thread safe. You can use x_run_on_main_thread_later() and x_run_on_main_thread_now() to ensure operations will be run correctly, however.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1101</id>
	<key><![CDATA[Updates the world&apos;s border with the given values. In addition to the keys returned by get_world_border(), you can also specify the &quot;seconds&quot;. This is time in which the border will move from the previous width to the new &quot;width&quot;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1102</id>
	<key><![CDATA[Opens an inventory for a player. The specifier must be an entity UUID, location array of a container block, or a virtual inventory id.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1103</id>
	<key><![CDATA[key, %s[%sdefault%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1104</id>
	<key><![CDATA[Sets the distance the entity has fallen.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1106</id>
	<key><![CDATA[Returns the cos of the number]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1107</id>
	<key><![CDATA[Returns an associative array containing all the data of the given entity that are too specific to have its own function. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1108</id>
	<key><![CDATA[Returns the result of a greater than or equal to operation. Operator sytnax is also supported: @a &amp;gt;= @b]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1109</id>
	<key><![CDATA[Sets a player&apos;s hunger level, where 0 is empty and 20 is full.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1110</id>
	<key><![CDATA[Returns true if the argument is a closure (could be executed) or false otherwise]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1111</id>
	<key><![CDATA[array, index]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1112</id>
	<key><![CDATA[Resizes the given array so that it is at least of size size, filling the blank spaces with fill, or %s by default. If the size of the array is already at least size, nothing happens; in other words this function can only be used to increase the size of the array. A reference to the array is returned, for easy chaining.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1113</id>
	<key><![CDATA[Returns a random selection of keys or values from an array. The array may be either normal or associative. Number defaults to 1, and getKey defaults to true. If number is greater than the size of the array, a RangeException is thrown. No value will be returned twice from the array however, one it is &quot;drawn&quot; from the array, it is not placed back in. The order of the elements in the array will also be random, if order is important, use array_sort().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1114</id>
	<key><![CDATA[Returns a random number from 0 to max, or min to max, depending on usage. Max is exclusive. Min must be less than max, and both numbers must be &gt;= 0. This will return an integer. Alternatively, you can pass no arguments, and a random double, from 0 to 1 will be returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1115</id>
	<key><![CDATA[none]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1116</id>
	<key><![CDATA[Logs a message to the console. If prefix is true, prepends &quot;CommandHelper:&quot; to the message. Default is true. If you wish to set the default value of prefix to false, use set_runtime_setting(&apos;function.console.prefix_default&apos;, false).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1117</id>
	<key><![CDATA[Returns a new byte_array primitive, starting from pos (or wherever the marker is by default) to length.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1118</id>
	<key><![CDATA[Returns an array of all the players within the given radius.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1119</id>
	<key><![CDATA[This function imports a value from the global value register. It looks for a value stored with the specified key (using the export function), and returns that value. If specified key doesn&apos;t exist, it will return either %s or the default value if specified. An array may be used as a key. It is converted into a string with the array values separated by dots. import() is threadsafe.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1120</id>
	<key><![CDATA[Return the log of a number to the specified base, or the mathematical constant e if no base is provided (or ln). If val is less than or equal to zero, a RangeException is thrown. Mathematically speaking, if val is 0, then the result would be negative infinity, and if it is less than 0 it is undefined (NaN), but since MethodScript has no way of representing either of these, a RangeException is thrown instead.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1121</id>
	<key><![CDATA[seconds]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1122</id>
	<key><![CDATA[Returns a vector from the yaw and pitch in a location array. All other values in the location array are ignored. The second parameter, that defines the magnitude of the vector, defaults to 1.0.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1123</id>
	<key><![CDATA[ClassType%s type, params...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1124</id>
	<key><![CDATA[Returns the UUID of the given entity&apos;s rider, or %s if it doesn&apos;t have one. If there are multiple riders, only the first is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1125</id>
	<key><![CDATA[entityType, %s[%sqty%s]%s, %s[%slocation%s]%s, %s[%sclosure%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1126</id>
	<key><![CDATA[Sets the maximum amount of air the specified living entity can have.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1127</id>
	<key><![CDATA[[%splayer%s]%s, header]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1129</id>
	<key><![CDATA[array, array]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1131</id>
	<key><![CDATA[Sets the data in the specArray to the given entity. The specArray must follow the same format as entity_spec(). See the documentation for that function for info on available options. All indices in the specArray are optional.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1133</id>
	<key><![CDATA[Sends a plugin message to the player. Channel name should be a string that is all lower-case, no longer than 32 characters, and contain a colon, or it will throw an IllegalArgumentException. The message should be a byte_array primitive. Depending on the plugin, these parameters will vary. If message is %s an empty byte_array is sent.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1134</id>
	<key><![CDATA[val]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1135</id>
	<key><![CDATA[Returns a new read only copy of the underlying byte array. This array is much more efficient than if the array were made manually, however, it is read only. If you need to manipulate the array&apos;s contents, then you can clone the array, however, the returned array (and any clones) cannot be automatically interfaced with the byte array primitives. This operation is discouraged, because normal arrays are very inefficient for dealing with low level bit data.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1136</id>
	<key><![CDATA[entityUUID, int%s[%s, lockAge%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1137</id>
	<key><![CDATA[assign, condition, expression1, expression2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1138</id>
	<key><![CDATA[Determines if the character provided is uppercase or not. The string must be exactly 1 character long and a letter, otherwise a FormatException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1139</id>
	<key><![CDATA[Gets the type the block at the location.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1141</id>
	<key><![CDATA[Gets the entity type that will spawn from the specified mob spawner.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1142</id>
	<key><![CDATA[[%sobject%s]%s, key, value %s object, key, value, %s[%splugin%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1143</id>
	<key><![CDATA[[%splayer%s]%s, health]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1144</id>
	<key><![CDATA[Writes the text to the system&apos;s std out, but does not automatically add a newline at the end. Unlike console(), this does not use anything else to format the output, though in many cases they will behave the same. Unlike other print methdods, colors and other formatting characters WILL &quot;bleed&quot; through, so print_out(color(RED) . &apos;This is red&apos;) will also cause the next line to also be red, so if you need to print multiple lines out, you should manually reset the color with print_out(color(RESET)), or use sys_out..]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1145</id>
	<key><![CDATA[This class of functions allow entities to be managed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1146</id>
	<key><![CDATA[Threading]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1147</id>
	<key><![CDATA[[%splayer%s]%s, level]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1148</id>
	<key><![CDATA[Gets the inventory information for the specified player, or the current  player if none specified. If the index is specified, only the slot given will be returned. The index of the array in the array is 0 - 35, 100 - 103, -106, which corresponds to the slot in the player&apos;s inventory. To access armor slots, you may also specify the index. (100 - 103). The quick bar is 0 - 8. If index is %s, the item in the player&apos;s hand is returned, regardless of what slot is selected. If index is -106, the player&apos;s off-hand item is returned. If there is no item at the slot specified, %s is returned. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1149</id>
	<key><![CDATA[Returns the keys in this array as a normal array. If the array passed in is already a normal array, the keys will be 0 -&gt; (array_size(array) - 1)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1151</id>
	<key><![CDATA[Returns the inventory type at the location specified, or of the entity specified. If the entity or location specified is not capable of having an inventory, a FormatException is thrown. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1152</id>
	<key><![CDATA[Recipes]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1153</id>
	<key><![CDATA[Returns whether the specified living entity will despawn. True means it will not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1154</id>
	<key><![CDATA[Returns the bitwise AND of the values]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1155</id>
	<key><![CDATA[Sets the code that will be run when a user attempts to execute a command. The closure can return true false (treated as true by default). Returning false will display The usage message if it is set. The closure is passed the following information in this order: alias used, name of the sender, array of arguments used, array of command info.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1156</id>
	<key><![CDATA[Uses a strict equals check, which determines if two values are not only equal, but also the same type. So, while equals(&apos;1&apos;, 1) returns true, sequals(&apos;1&apos;, 1) returns false, because the first one is a string, and the second one is an int. More often than not, you want to use plain equals(). In addition, type juggling is explicitely not performed on strings. Thus &apos;2&apos;]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1157</id>
	<key><![CDATA[Defines a new object. Not meant for normal use.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1158</id>
	<key><![CDATA[base64data]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1159</id>
	<key><![CDATA[specifier]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1162</id>
	<key><![CDATA[locationArray, %s[%streeType%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1163</id>
	<key><![CDATA[Works like a normal for loop, but if upon checking the condition the first time, it is determined that it is false (that is, NO code loops are going to be run) the else code is run instead. If the loop runs, even once, it will NOT run the else branch. In general, brace syntax and use of for(){ } else { } syntax is preferred, instead of using forelse directly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1165</id>
	<key><![CDATA[Returns meta information about the activity in regards to this event. This is meant as a debug tool.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1166</id>
	<key><![CDATA[Provides functions for manipulating a world]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1167</id>
	<key><![CDATA[Sets a living entity&apos;s ability to pick up items.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1168</id>
	<key><![CDATA[locale, formatString, parameters... %s locale, formatString, array(parameters...)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1170</id>
	<key><![CDATA[expression, %s[%svalueArray%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1171</id>
	<key><![CDATA[Returns the player&apos;s hunger level.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1172</id>
	<key><![CDATA[Clears the screen. This only works from cmdline mode, nothing happens otherwise.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1173</id>
	<key><![CDATA[Filters an array by callback. The items in the array are iterated over, each one sent to the closure one at a time, as key, value. The closure should return true if the item should be included in the array, or false if not. The filtered array is then returned by the function. If the array is associative, the keys will continue to map to the same values, however a normal array, the values are simply pushed onto the new array, and won&apos;t correspond to the same values per se.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1174</id>
	<key><![CDATA[Returns the square root of a number. Note that this is mathematically equivalent to pow(number, .5). Imaginary numbers are not supported, so number must be positive.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1175</id>
	<key><![CDATA[Converts the number to degrees (which is assumed to have been in radians)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1176</id>
	<key><![CDATA[number percentile, array%s %s number percentile, number input...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1177</id>
	<key><![CDATA[Reads and compiles specified *.ms files. This can be used for files already compiled with include(). Scripts that then include() these files will use the updated code. The path can be a directory or file. It is executed recursively through all subdirectories. If there&apos;s a compile error in any of the files, the function will throw an exception and other scripts will continue to use the previous version of the code when included. Returns number of files recompiled.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1178</id>
	<key><![CDATA[param, %s[%sargs, ...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1180</id>
	<key><![CDATA[ObjectManagement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1181</id>
	<key><![CDATA[Returns true if the values are the same type, as well as equal, according to equals_ic. Generally, equals_ic will suffice, because usually you will be comparing two strings, however, this function may be useful in various other cases, perhaps where the datatypes are unknown, but could be strings.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1182</id>
	<key><![CDATA[Executes the given closure. You can also send arguments to the closure, which it may or may not use, depending on the particular closure&apos;s definition. If the closure returns a value with return(), then that value will be returned with execute. Otherwise, %s is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1183</id>
	<key><![CDATA[Sets the mob spawner&apos;s entity type at the location specified. If the location is not a mob spawner, or if the type is invalid, a FormatException is thrown. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1184</id>
	<key><![CDATA[[%splayer%s]%s, isVanished, otherPlayer]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1185</id>
	<key><![CDATA[Creates a merchant that can be traded with by players but is not attached to a physical entity. The ID given should not be a UUID. The title is the text that will display at the top of the window while a player is trading with it. Created merchants will persist across recompiles, but not across server restarts. An exception will be thrown if a merchant already exists using the given ID.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1186</id>
	<key><![CDATA[Returns this string as a byte_array, encoded using the specified encoding, or UTF-8 if no encoding is specified. Valid encodings are the encoding types that java supports. If the encoding is invalid, a FormatException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1187</id>
	<key><![CDATA[Returns the thread id (thread name) of the currently running thread.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1188</id>
	<key><![CDATA[Executes the command if and only if on the given operating system (one of WINDOWS, MAC, LINUX, SOLARIS, or UNKNOWN). If not on the specified OS, this command does nothing. The os argument may be a pipe seperated list of OSes, for instance &apos;MAC|LINUX&apos;, which is useful given that both are unix based, and often times the same command will work for both. Otherwise completely equivalent to %s. This is useful, because usually a command is tailored to a specific OS, and simply won&apos;t run on other OSes. This allows you to create similar commands across various OSes, and ensure that they only run for the correct OS.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1189</id>
	<key><![CDATA[name, %s[%sscoreboard%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1190</id>
	<key><![CDATA[Sets the biome of the specified block column. The location array&apos;s y value is ignored. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1191</id>
	<key><![CDATA[Concatenates any number of arguments together, but puts a space between elements]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1192</id>
	<key><![CDATA[Takes a YML encoded string, and returns an associative array, depending on the contents of the YML string. If the YML string is improperly formatted, a FormatException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1193</id>
	<key><![CDATA[Returns an array of numbers from start to (finish - 1) skipping increment integers per count. start defaults to 0, and increment defaults to 1. All inputs must be integers. If the input doesn&apos;t make sense, it will reasonably degrade, and return an empty array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1195</id>
	<key><![CDATA[Returns whether or not the player has the ability to fly.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1196</id>
	<key><![CDATA[specifier, %s[%splayer%s]%s, %s[%sforce%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1197</id>
	<key><![CDATA[float]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1198</id>
	<key><![CDATA[World]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1199</id>
	<key><![CDATA[Works like runas, except any messages sent to the command sender during command execution are attempted to be intercepted, and are then returned as a string, instead of being sent to the command sender. Note that this is VERY easy for plugins to get around in such a way that this function will not work, this is NOT a bug in CommandHelper, nor is it necessarily a problem in the other plugin either, but the other plugin will have to make changes for it to work properly. A PluginInternalException is thrown if something goes wrong. Any number of things may go wrong that aren&apos;t necessarily this function&apos;s fault, and in those cases, this exception is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1200</id>
	<key><![CDATA[Returns a team array for this player, or %s if not in a team. Contains the keys name, displayname, color, prefix, suffix, size, options, and players.Scoreboard defaults to &apos;main&apos; if not given.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1201</id>
	<key><![CDATA[Returns the lowest number in a given list of numbers. If any of the arguments are arrays, they are expanded into individual numbers, and also compared.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1202</id>
	<key><![CDATA[Executes the command if and only if on the given operating system (one of WINDOWS, MAC, LINUX, SOLARIS, or UNKNOWN). If not on the specified OS, this command returns %s. The os argument may be a pipe seperated list of OSes, for instance &apos;MAC|LINUX&apos;, which is useful given that both are unix based, and often times the same command will work for both. Otherwise completely equivalent to %s. This is useful, because usually a command is tailored to a specific OS, and simply won&apos;t run on other OSes. This allows you to create similar commands across various OSes, and ensure that they only run for the correct OS.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1203</id>
	<key><![CDATA[resource, toAppend...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1204</id>
	<key><![CDATA[Sets the value of an environment variable. This only changes the environment value in this process, not system-wide. This uses some hackery to work, and may not be 100% reliable in all cases, and shouldn&apos;t be relied on heavily. It will always work with get_env, however, so you can rely on that mechanism. The value will always be interpreted as a string, so if you are expecting a particular data type on a call to get_env, you will need to manually cast the variable. Arrays will be toString&apos;d as well, but will be accepted.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1205</id>
	<key><![CDATA[Echoes a message to the player running the command]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1206</id>
	<key><![CDATA[Returns the element specified at the index of the array. If the element doesn&apos;t exist, an exception is thrown. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1207</id>
	<key><![CDATA[The first is the entity that is targeting, the second is the target. It can also be set to %s to clear the current target. Not all mobs can have their target set.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1208</id>
	<key><![CDATA[Sets the age of the entity to the specified int, represented by server ticks.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1210</id>
	<key><![CDATA[Returns a new construct that has been cast to a boolean. The item is cast according to the boolean conversion rules. Since all data types can be cast to a a boolean, this function will never throw an exception.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1211</id>
	<key><![CDATA[entityUUID, entityUUID]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1212</id>
	<key><![CDATA[Makes lightning strike at the x y z coordinates specified in the array or arguments. Safe defaults to false, but if true, lightning striking a player will not hurt them. Returns the UUID of the lightning bolt entity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1213</id>
	<key><![CDATA[Returns the shooter of the given projectile, can be %s. If the shooter is an entity, that entity&apos;s ID will be return, but if it is a block, that block&apos;s location will be returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1214</id>
	<key><![CDATA[[%splayer%s]%s, vector %s %s[%splayer%s]%s, x, y, z]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1215</id>
	<key><![CDATA[Asynchronously makes a query to an SQL server. The profile, query, and params arguments work the same as %s, so see the documentation of that function for details about those parameters. The callback should have the following signature: closure(@contents, @exception){ &amp;lt;code&amp;gt; }. @contents will contain the return value that query would normally return. If @exception is not %s, then an exception occurred during the query, and that exception will be passed in. If @exception is %s, then no error occured, though @contents may still be %s if query() would otherwise have returned %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1216</id>
	<key><![CDATA[Returns true if gravity applies to the entity.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1218</id>
	<key><![CDATA[Gets the world of the player specified, or the current player if playerName isn&apos;t specified.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1219</id>
	<key><![CDATA[exceptionType, msg, %s[%scausedBy%s]%s %s exception]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1220</id>
	<key><![CDATA[Sets a task to run in the specified number of ms in the future. The task will only run once. Note that the resolution of the time is in ms, however, the server will only have a resolution of up to 50 ms, meaning that a time of 1-50ms is essentially the same as 50ms.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1221</id>
	<key><![CDATA[entityUUID, specArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1222</id>
	<key><![CDATA[Sets whether or not entity produces sounds]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1223</id>
	<key><![CDATA[[%svar1, [var2...%s]%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1224</id>
	<key><![CDATA[Returns the UUID of the vehicle which the player is riding, or %s if player is not riding a vehicle.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1225</id>
	<key><![CDATA[Writes a double, interpreted as a 32 bit float, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1226</id>
	<key><![CDATA[resource]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1227</id>
	<key><![CDATA[Sets the way two entities are stacked. Horse and rider are entity ids. If rider is %s, horse will eject its current rider, if it has one. If horse is %s, rider will leave whatever it is riding. If horse and rider are both valid entities, rider will ride horse. The function returns the success of whatever operation is done. If horse and rider are both %s, or otherwise the same, a FormatException is thrown. If a horse already has a rider, this will add the new rider without ejecting the existing one.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1228</id>
	<key><![CDATA[Sets the color of the leather armor at the given slot. colorArray should be an array that matches one of the formats: array(r: 0, g: 0, b: 0) array(red: 0, green: 0, blue: 0) array(0, 0, 0)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1229</id>
	<key><![CDATA[If this command was being run from a command block block or minecart, this will return the location of the block or minecart. The yaw and pitch will only be included in the locationArray for minecart command blocks. If a player or console ran this command (or any other command sender), this will return %s.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1230</id>
	<key><![CDATA[Stops the interval or timeout that is specified. The id can be gotten by storing the integer returned from either set_timeout or set_interval. An invalid id is simply ignored. The clear_task function is more useful for set_timeout, where you may queue up some task to happen in the far future, yet have some trigger to prevent it from happening. ID is optional, but only if called from within a set_interval or set_timeout closure, in which case it defaults to the id of that particular task.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1231</id>
	<key><![CDATA[Returns whether or not this player is whitelisted. This will work with offline players, but the name must be exact. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1233</id>
	<key><![CDATA[Gets all recipes that have a result of the given item. NOTE: Gets all recipes for result item regardless of meta and enchants, although the array has correct data.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1234</id>
	<key><![CDATA[A series of functions for creating and managing custom commands.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1235</id>
	<key><![CDATA[Returns the size of this array as an integer.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1236</id>
	<key><![CDATA[Determines if the provided teststring starts with the provided keyword. This could be used to find the prefix of a line, for instance. Note that this will cast both arguments to strings. This means that the boolean true will match the string &apos;true&apos; or the integer 1 will match the string &apos;1&apos;. If an empty string is provided for the keyword, it will always return true.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1237</id>
	<key><![CDATA[Sets the player list header for a player. This is the text that appears above the player list that appears when hitting the tab key. Colors and new lines are accepted. Only the given player (or current player if none is given) will see these changes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1238</id>
	<key><![CDATA[PlayerManagement]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1239</id>
	<key><![CDATA[array, %s[%skey%s]%s, ivar, code]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1240</id>
	<key><![CDATA[[%splayer%s]%s, material, cooldown]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1241</id>
	<key><![CDATA[Environment]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1242</id>
	<key><![CDATA[Removes the specified entity from the world, without any drops or animations. Note: you can&apos;t remove players. As a safety measure for working with NPC plugins, it will not work on anything human, even if it is not a player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1243</id>
	<key><![CDATA[booleanValue]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1244</id>
	<key><![CDATA[closure(@ex)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1245</id>
	<key><![CDATA[Deletes a virtual merchant if one by the given ID exists. Returns true if one was removed, or false if there was no match for the ID.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1246</id>
	<key><![CDATA[This is a test function, which demonstrates to extension authors how to make a composite function. It returns true if a and b added together are greater than 0, false otherwise.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1247</id>
	<key><![CDATA[A class of functions for manipulating the server scoreboard.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1248</id>
	<key><![CDATA[If set to true the entity cannot be damaged, except by players in creative mode]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1249</id>
	<key><![CDATA[DataHandling]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1252</id>
	<key><![CDATA[EventBinding]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1253</id>
	<key><![CDATA[Returns a list of all defined compiler warnings, which can be suppressed using the suppressWarnings file option]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1254</id>
	<key><![CDATA[Searches for the given pattern, and returns an array with the results. Captures are supported. If the pattern is not found anywhere in the subject, an empty array is returned. The indexes of the array follow typical regex fashion; the 0th element is the whole match, and 1-n are the captures specified in the regex.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1255</id>
	<key><![CDATA[Throws a compile error unconditionally at link time, if the function has not been fully compiled out with preprocessor directives. This is useful for causing a custom compile error if certain compilation environment settings are not correct.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1256</id>
	<key><![CDATA[byte_array, string, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1257</id>
	<key><![CDATA[Removes an enchantment from an item. The type may be a valid enchantment, or an array of enchantment names. It can also be %s, and all enchantments will be removed. If an enchantment is specified, and the item is not enchanted with that, it is simply ignored.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1258</id>
	<key><![CDATA[parameter]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1260</id>
	<key><![CDATA[Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta). This method computes the phase theta by computing an arc tangent of y/x in the range of -pi to pi.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1261</id>
	<key><![CDATA[Gets the time left on the player&apos;s cooldown for the specified item type. This returns an integer representing the time in server ticks until any items of this material can be used again by this player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1262</id>
	<key><![CDATA[value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1263</id>
	<key><![CDATA[byte_array, double, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1264</id>
	<key><![CDATA[Returns the redstone power level that is supplied to this block [0-15]. If is_block_powered(locationArray, &apos;DIRECT_ONLY&apos;) returns true, a redstone dust placed at the given location would be powered the return value - 1.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1265</id>
	<key><![CDATA[Returns the size of a file on the file system.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1266</id>
	<key><![CDATA[Changes the current working directory to the path specified, or the user&apos;s home directory if omitted. This only works from cmdline mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1267</id>
	<key><![CDATA[Returns true if the specified queue still has tasks running on it.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1268</id>
	<key><![CDATA[byte_array, int, %s[%spos%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1269</id>
	<key><![CDATA[If an empty array is provided, a IndexOverflowException is thrown. If the percentile is not within the range of 0 or 1, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1270</id>
	<key><![CDATA[Sets a player&apos;s walk speed. The speed must be between -1.0 and 1.0. The default player walk speed is 0.2.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1272</id>
	<key><![CDATA[Reads the input from a process that is piped to this script. It is assumed that the data piped to the script will come all at once, and it will be returned as a string (or byte_array if binary is true). This can only be used in cmdline mode, and binary defaults to false. If the script isn&apos;t started in TTY mode, an IOException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1273</id>
	<key><![CDATA[Searches subject for all matches to the regular expression given in pattern, unlike reg_match, which just returns the first match.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1274</id>
	<key><![CDATA[array1, array2, %s[%sarrayN...%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1275</id>
	<key><![CDATA[Returns the current width of the terminal, measured in characters. This is useful for determining proper layout for dynamic output. This only works in cmdline mode.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1276</id>
	<key><![CDATA[int]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1278</id>
	<key><![CDATA[entityUUID, double]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1279</id>
	<key><![CDATA[Reads a field from some xml using an XPath address. The XPath address is assumed to be absolute, even if it doesn&apos;t start with a &apos;/&apos;.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1280</id>
	<key><![CDATA[locationArray, lineArray %s locationArray, line1, %s[%sline2, [line3, [line4%s]%s]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1281</id>
	<key><![CDATA[Returns true if the item at the given slot is a piece of leather armor, that is, if dying it is allowed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1282</id>
	<key><![CDATA[Sets a player&apos;s fly speed. The speed must be between -1.0 and 1.0. The default player fly speed is 0.1.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1283</id>
	<key><![CDATA[Finds the index in the array where value occurs last. If the value is not found, returns %s. That is to say, if the value is contained in an array (even multiple times) the index of the last element is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1284</id>
	<key><![CDATA[Provides access to the server's underlying permissions system. Permissions functionality is only as good as the management system in place, however, and so not all functions may be supported on a given system.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1285</id>
	<key><![CDATA[Checks to see if testValue is in array. For associative arrays, only the values are searched, the keys are ignored. If you need to check for the existence of a particular key, use array_index_exists().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1286</id>
	<key><![CDATA[value1, value2]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1287</id>
	<key><![CDATA[Converts a string representation of an integer to a real integer, given the value&apos;s radix (base). See %s for a more detailed explanation of number theory. Radix must be between 2 and 36, inclusive.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1288</id>
	<key><![CDATA[Returns a list of locales on this system.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-1289</id>
	<key><![CDATA[Sets the value of the array at the specified index. The value that was set is returned, to allow for chaining.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-4006</id>
	<key><![CDATA[type]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5033</id>
	<key><![CDATA[[%splayer,%s]%s slot]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5034</id>
	<key><![CDATA[[%splayer,%s]%s slot, ItemMetaArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5035</id>
	<key><![CDATA[Applies the data from the given array to the item at the specified slot. Unused fields will be ignored. If %s or an empty array is supplied, or if none of the given fields are applicable, the item will become default, as this function overwrites any existing data. See %s for available fields.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5036</id>
	<key><![CDATA[Returns an associative array of known item meta for the slot given, or %s if there isn&apos;t any. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5099</id>
	<key><![CDATA[Returns the location of the currently running engine binary.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5102</id>
	<key><![CDATA[Manually triggers bound events. The event object passed to this function is sent directly as-is to the bound events. Check the documentation for each event to see what is required. No checks will be done on the data here, but it is not recommended to fail to send all parameters required. If serverWide is true, the event is triggered directly in the server, unless it is a CommandHelper specific event, in which case, serverWide is irrelevant. Defaults to false, which means that only CommandHelper code will receive the event. Throws a CastException when eventObject is not an array and not %s. Throws a BindException when trigger() is not yet supported by the given event.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5113</id>
	<key><![CDATA[[%splayer%s]%s, statistic, %s[%stype%s]%s, amount]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5114</id>
	<key><![CDATA[[%splayer%s]%s, statistic, %s[%stype%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5115</id>
	<key><![CDATA[Returns the specified statistic for the player. Some statistics require a block, item or entity type. An IllegalArgumentException will be thrown if the statistic is invalid, or if the type is invalid for that statistic. The player argument is required before the type argument is. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5116</id>
	<key><![CDATA[Forces a player to leave their vehicle. This returns false if the player is not riding a vehicle.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5117</id>
	<key><![CDATA[Sets the specified statistic for the player. Some statistics require a block, item or entity type. An IllegalArgumentException will be thrown if the statistic is invalid, or if the type is invalid for that statistic. The player argument is required before the type argument is. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5133</id>
	<key><![CDATA[A thin wrapper around the tellraw command from console context, this simply passes the input to the command. The raw is passed in as a normal (possibly associative) array, and json encoded. No validation is done on the input, so the command may fail. If not provided, the selector defaults to @a. Do not use double quotes (smart string) when providing the selector. See %s if you need player context. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5134</id>
	<key><![CDATA[[%sstring selector%s]%s, array raw]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5135</id>
	<key><![CDATA[A thin wrapper around the tellraw command from player context, this simply passes the input to the command. The raw is passed in as a normal (possibly associative) array, and json encoded. No validation is done on the input, so the command may fail. If not provided, the selector defaults to @s. Do not use double quotes (smart string) when providing the selector. See %s if you don&apos;t need player context. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5141</id>
	<key><![CDATA[[%splayer%s]%s, command]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5142</id>
	<key><![CDATA[Runs a single command for the current or provided player, as op. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5147</id>
	<key><![CDATA[Provides a case insensitive switch statement, for switching over strings. This works by compiler transformations, transforming this into a normal switch statement, with each case lowercased, and the input to the switch wrapped in to_lower. The case statements must be strings, however, which is the main difference between this method and the normal switch statement. The lowercasing is done with the system&apos;s default locale.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5152</id>
	<key><![CDATA[About]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5153</id>
	<key><![CDATA[Home]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5154</id>
	<key><![CDATA[Privacy Policy]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5155</id>
	<key><![CDATA[Sponsors]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5156</id>
	<key><![CDATA[Help]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5157</id>
	<key><![CDATA[Team. All rights reserved.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5158</id>
	<key><![CDATA[Docs]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5169</id>
	<key><![CDATA[Returns the average (also known as the arithmetic mean) across all the numbers in the set. The input may be an array of numbers, or individual numbers as arguments. The average of a set of numbers is the result of adding all the numbers in the set, and dividing it by the number of values in the set.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5170</id>
	<key><![CDATA[Returns a random value from an array. If the array is empty a LengthException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5197</id>
	<key><![CDATA[Reads in a gzipped file, and returns a byte_array for it. The file is returned exactly as is on disk, no conversions are done other than unzipping it. base-dir restrictions are enforced for the path, the same as read(). If file is relative, it is assumed to be relative to this file.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5198</id>
	<key><![CDATA[Returns a ClassType value of the typeof a value. For instance &apos;array&apos; is returned for typeof(array()). This is a generic replacement for the is_* series of functions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5214</id>
	<key><![CDATA[Runs a plugin command&apos;s tab completer and returns an array of possible completions for the final argument. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5215</id>
	<key><![CDATA[[%splayer%s]%s, command, args]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5222</id>
	<key><![CDATA[[%splayer%s]%s, slot, type, level %s player, slot, enchantsArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5224</id>
	<key><![CDATA[Sets the base value for the entity attribute. Accepts a double as the value. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5225</id>
	<key><![CDATA[Gets the default value for the attribute of this entity&apos;s type. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5226</id>
	<key><![CDATA[entityUUID, attribute]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5227</id>
	<key><![CDATA[entityUUID, modifier]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5228</id>
	<key><![CDATA[entityUUID, modifier %s entityUUID, attribute, id]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5229</id>
	<key><![CDATA[Removes an attribute modifier from an entity. A modifier array can be provided, or both an attribute name and either the UUID or name (if it&apos;s unique) for the modifier can be provided as the identifier.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5231</id>
	<key><![CDATA[Gets the base value for the given attribute of this entity. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5232</id>
	<key><![CDATA[Resets the base attribute value to the default for this entity. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5233</id>
	<key><![CDATA[Gets an array of modifier arrays for this entity&apos;s attribute. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5234</id>
	<key><![CDATA[entityUUID, attribute, value]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5235</id>
	<key><![CDATA[Gets the effective value for the attribute of this entity after all modifiers have been applied to the base value. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5250</id>
	<key><![CDATA[Adds an attribute modifier to an entity. Throws BadEntityTypeException if the attribute type does not apply to this entity type. See %s for how to define an attribute modifier array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5280</id>
	<key><![CDATA[Contains various methods for interacting with the Operating System. Some of the functions deal with OS specific mechanisms.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5281</id>
	<key><![CDATA[OS]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5282</id>
	<key><![CDATA[Returns the process id (pid) of the current process. In some implementations of Java, this cannot be relied on, and in those cases, an UnsupportedOperationException is thrown. In Java 9 and above, this can generally be relied upon to work correctly, however.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5283</id>
	<key><![CDATA[ArrayHandling%sBasicLogic%sBossBar%sBukkitMetadata%sByteArrays%sClipboard%sCmdline%sCommands%sCompiler%sControlFlow%sCrypto%sDataHandling%sDataTransformations%sDebug%sEchoes%sEnchantments%sEntityManagement%sEnvironment%sEventBinding%sExceptions%sExecutionQueue%sExtensionMeta%sFileHandling%sInventoryManagement%sItemMeta%sMarquee%sMath%sMeta%sMinecraft%sMobManagement%sOAuth%sOS%sObjectManagement%sPerformance%sPermissions%sPersistence%sPlayerManagement%sPluginMeta%sRecipes%sReflection%sRegex%sResourceManager%sSQL%sSandbox%sScheduling%sScoreboards%sStatistics%sStringHandling%sTaskHandling%sThreading%sTrades%sWeather%sWeb%sWorld%sXGUI]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5314</id>
	<key><![CDATA[Returns the name of the inventory holder specified. If the block or entity can&apos;t have an inventory or a name, an IllegalArgumentException is thrown. If the inventory was not given a title, an empty string is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5339</id>
	<key><![CDATA[Returns the block light level at a location. This counts block sources like torches and lava, disregarding light from the sky.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5340</id>
	<key><![CDATA[Returns the sky light level for a location. Disregards all block sources of light, where 15 is directly beneath the sky during the day.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5343</id>
	<key><![CDATA[Returns whether or not the block is locked if its lockable. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5344</id>
	<key><![CDATA[Sets the string lock for this block if its lockable. Set an empty string or %s to remove lock. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5345</id>
	<key><![CDATA[Returns the string lock for this block if its lockable. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5346</id>
	<key><![CDATA[Returns whether or not the block is lockable. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5347</id>
	<key><![CDATA[locationArray, string]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5355</id>
	<key><![CDATA[Returns the sha1 hash of the specified string. Note that sha1 is considered no more secure than md5, and should not be used in a security context. sha-256 should be used instead for storing sensitive data. It is a one way hashing algorithm. This function is aware of and compatible with secure_string.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5362</id>
	<key><![CDATA[player, potionEffect, %s[%sstrength%s]%s, %s[%sseconds%s]%s, %s[%sambient%s]%s, %s[%sparticles%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5363</id>
	<key><![CDATA[Adds one, or modifies an existing, potion effect on a mob. The potionEffect can be SLOWNESS, INVISIBILITY, SLOW_FALLING, BAD_OMEN, WEAKNESS, DOLPHINS_GRACE, INSTANT_DAMAGE, MINING_FATIGUE, SPEED, WITHER, LUCK, FIRE_RESISTANCE, WATER_BREATHING, GLOWING, ABSORPTION, HUNGER, BAD_LUCK, HERO_OF_THE_VILLAGE, REGENERATION, STRENGTH, BLINDNESS, LEVITATION, CONDUIT_POWER, JUMP_BOOST, POISON, NAUSEA, RESISTANCE, HEALTH_BOOST, NIGHT_VISION, INSTANT_HEALTH, HASTE, or SATURATION. It also accepts an integer corresponding to the effect id listed on the Minecraft wiki. Strength is an integer representing the power level of the effect, starting at 0. Seconds defaults to 30.0. To remove an effect, set the seconds to 0. If seconds is less than 0 or greater than 107374182 a RangeException is thrown. Ambient takes a boolean of whether the particles should be more transparent. Particles takes a boolean of whether the particles should be visible at all. The function returns whether or not the effect was modified.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5364</id>
	<key><![CDATA[entityUUID, potionEffect, %s[%sstrength%s]%s, %s[%sseconds%s]%s, %s[%sambient%s]%s, %s[%sparticles%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5371</id>
	<key><![CDATA[Sets the owner of the skull at the given location by name or uuid. Supplying %s will clear the skull owner, but due to limitations in Bukkit, clients will only see this change after reloading the block. If no world is provided and the function is executed by a player, the player&apos;s world is used. If the block at the given location isn&apos;t a skull, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5372</id>
	<key><![CDATA[locationArray, owner]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5373</id>
	<key><![CDATA[Returns the owner name and uuid of the skull at the given location as an array in format: {name: NAME, uuid: UUID}, or %s if the skull does not have an owner. The value at the &apos;name&apos; key will be an empty string if the server does not know the player&apos;s name. If no world is provided and the function is executed by a player, the player&apos;s world is used. If the block at the given location isn&apos;t a skull, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5380</id>
	<key><![CDATA[Returns true if all the arguments are equal. Operator syntax is also supported: @a]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5383</id>
	<key><![CDATA[Counts the number of occurrences in the subject.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5384</id>
	<key><![CDATA[Writes a file to the file system. This method only works from the cmdline, if not in cmdline, a SecurityException is thrown. Because of this, there is no check against the base-dir path. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5385</id>
	<key><![CDATA[Spawns the specified number of entities of the given type at the given location. Returns an array of entity UUIDs of what is spawned. Qty defaults to 1 and location defaults to the location of the commandsender, if it is a block or player. If the commandsender is console, location must be supplied. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5386</id>
	<key><![CDATA[Returns information about the runtime in a usable format. Depending on the information returned, it may be usable directly, or it may be more of a referential format. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5387</id>
	<key><![CDATA[Enables performance logging. The allow-profiling option must be set to true in your preferences file, and play-dirty mode must be active. If allow-profiling is set to false, a SecurityException is thrown. The debug filters are used by the performance logger, if you choose to filter through the events. See the documentation for more details on performance logging.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5388</id>
	<key><![CDATA[Sets a task to run every so often. This works similarly to set_timeout, except the task will automatically re-register itself to run again. Note that the resolution of the time is in ms, however, the server will only have a resolution of up to 50 ms, meaning that a time of 1-50ms is essentially the same as 50ms. The initial delay defaults to the same thing as timeInMS, that is, there will be a pause between registration and initial firing. However, this can be set to 0 (or some other number) to adjust how long of a delay there is before it begins.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5389</id>
	<key><![CDATA[Finds the numeric position of the first occurrence of needle in haystack. haystack is the string to search in, and needle is the string to search with. Returns the position of the needle (starting with 0) or -1 if the string is not found at all.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5390</id>
	<key><![CDATA[Attempts to clear all registered commands on the server. Vanilla and default Spigot functions are not affected, but all plugins commands are.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5391</id>
	<key><![CDATA[Replaces any occurrences of pattern with the replacement in subject. Back references are allowed.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5392</id>
	<key><![CDATA[&quot;Super Cancels&quot; an event. This only will work if play-dirty is set to true. If an event is super cancelled, not only is the cancelled flag set to true, the event stops propagating down, so no other plugins (as in other server plugins, not just CH scripts) will receive the event at all  (other than monitor level plugins). This is useful for overriding event handlers for plugins that don&apos;t respect the cancelled flag. This function hooks into the play-dirty framework that injects custom event handlers into bukkit.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5393</id>
	<key><![CDATA[Returns true if the string needle is found anywhere within the string haystack (while ignoring case). This is functionally equivalent to string_position(to_lower(@haystack), to_lower(@needle)) | %sNo]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5394</id>
	<key><![CDATA[Returns true if the string needle is found anywhere within the string haystack. This is functionally equivalent to string_position(@haystack, @needle)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5445</id>
	<key><![CDATA[- class="hiddenFunction"]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5446</id>
	<key><![CDATA[Returns the UUID of the current player or the specified player. This will attempt to find an offline player, but if that also fails, a PlayerOfflineException will be thrown. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5449</id>
	<key><![CDATA[Returns the specified value from this procedure or closure. It cannot be called outside a procedure or closure. The function itself does not return a value as such, as it is a terminal function, and prevents further execution within the calling code. Instead it causes the host procedure or closure to return the specified value, and ends termination. (There are exceptions to this rule, see the docs on try/catch, particularly the finally clause for example).]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5457</id>
	<key><![CDATA[The core exception types are:  %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, and]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5459</id>
	<key><![CDATA[Sets the number of immunity ticks a living entity has remaining.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5460</id>
	<key><![CDATA[Gets the number of immunity ticks a living entity has remaining. After being damaged, an entity is given 10 ticks of immunity from equal or lesser damage.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5461</id>
	<key><![CDATA[Sets the block at the location from a blockdata object. Blockdata can be an associative array or string format. If an array, a &apos;block&apos; key must exist with the block material. All the other keys must be a blockstate and its value.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5465</id>
	<key><![CDATA[Gets if a player is sprinting or not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5466</id>
	<key><![CDATA[Gets if a player is blocking or not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5467</id>
	<key><![CDATA[Gets the flying state for the player.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5468</id>
	<key><![CDATA[Gets if a living entity is sleeping or not. Only some entity types can sleep.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5470</id>
	<key><![CDATA[recipe_key]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5471</id>
	<key><![CDATA[Remove a certain recipe by its registered key. Returns whether the recipe was removed successfully or not. (Minecraft 1.15.2 or higher)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5487</id>
	<key><![CDATA[Works like include, but takes a directory, and includes all files within the directory. Recursive defaults to false, but if true, recurses down into all subdirectories as well. As an implementation note, this function is fully resolved at compile time, thus the inputs must be hardcoded. The directories are scanned at compile time, and replaced with individual includes for each .ms file found.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5488</id>
	<key><![CDATA[directory, %s[%srecursive%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5501</id>
	<key><![CDATA[Returns a ClassType object for the given fully qualified class name. If the given class doesn&apos;t exist, a NotFoundException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5502</id>
	<key><![CDATA[Returns information about the given ClassType. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5503</id>
	<key><![CDATA[string name]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5588</id>
	<key><![CDATA[sender, %s[%slabel%s]%s, script]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5589</id>
	<key><![CDATA[Executes the given closure in the context of a given player or ~console. A closure that runs player(), for instance, would return the specified player&apos;s name. If %s is given, it will execute with the current sender context instead of the closure&apos;s. The label argument sets the permission label that this closure will use. If %s is given, the closure&apos;s label will be used, like with execute().]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5590</id>
	<key><![CDATA[sender, label, %s[%svalues...%s]%s, closure]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5592</id>
	<key><![CDATA[Binds some functionality to an event, so that when said event occurs, the event handler will fire. Returns the id of this event, so it can be unregistered later, if need be. See more on the page detailing [[Events]]. The options array can contain &quot;id&quot; and &quot;priority&quot;, where priority is one of: LOWEST, LOW, NORMAL, HIGH, HIGHEST, or MONITOR. The prefilters vary from event to event.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5604</id>
	<key><![CDATA[Returns an array of command arrays in the format register_command expects or %s if no commands could be found. The command arrays will not include executors or tabcompleters. This does not include MethodScript aliases, as they are not registered commands.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5606</id>
	<key><![CDATA[Unregisters a command from the server&apos;s command list. Commands from other plugins can be unregistered using this function.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5625</id>
	<key><![CDATA[Plays the specified effect at the given location for all players within the radius (or 64 by default). The effect can be one of the following: DRAGON_BREATH, END_GATEWAY_SPAWN, ENDER_SIGNAL, INSTANT_POTION_BREAK, MOBSPAWNER_FLAMES, POTION_BREAK, SMOKE, VILLAGER_PLANT_GROW, ANVIL_BREAK, ANVIL_LAND, ANVIL_USE, BAT_TAKEOFF, BLAZE_SHOOT, BOW_FIRE, BREWING_STAND_BREW, CHORUS_FLOWER_DEATH, CHORUS_FLOWER_GROW, CLICK1, CLICK2, DOOR_CLOSE, DOOR_TOGGLE, ENDERDRAGON_GROWL, ENDERDRAGON_SHOOT, ENDEREYE_LAUNCH, EXTINGUISH, FENCE_GATE_CLOSE, FENCE_GATE_TOGGLE, FIREWORK_SHOOT, GHAST_SHOOT, GHAST_SHRIEK, IRON_DOOR_CLOSE, IRON_DOOR_TOGGLE, IRON_TRAPDOOR_CLOSE, IRON_TRAPDOOR_TOGGLE, PORTAL_TRAVEL, RECORD_PLAY, STEP_SOUND, TRAPDOOR_CLOSE, TRAPDOOR_TOGGLE, ZOMBIE_CHEW_WOODEN_DOOR, ZOMBIE_CHEW_IRON_DOOR, ZOMBIE_DESTROY_DOOR, WITHER_BREAK_BLOCK, WITHER_SHOOT, ZOMBIE_CONVERTED_VILLAGER, or ZOMBIE_INFECT. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5630</id>
	<key><![CDATA[Returns an associative array of all the info needed to duplicate the world. The keys are name, seed, environment, generator, worldtype, sealevel and maxheight. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5632</id>
	<key><![CDATA[Creates a virtual inventory and holds it under the specified id. The string id should not be a UUID. If the id is already in use, an IllegalArgumentException will be thrown. You can use this id in other inventory functions to modify the contents, among other things. If a size is specified instead of a type, it is rounded up to the nearest multiple of 9. Size cannot be higher than 54. A title for the top of the inventory may be given, but it will use the default for that that inventory type if %s is specified. An optional inventory array may be specified, otherwise the inventory will start empty. Available inventory types: BREWING, CHEST, DISPENSER, DROPPER, ENDER_CHEST, FURNACE, HOPPER, PLAYER, WORKBENCH, ANVIL, SMITHING, SHULKER_BOX, BARREL, BLAST_FURNACE or SMOKER]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5633</id>
	<key><![CDATA[Plays the given visual effect on the entity. Non-applicable effects simply won&apos;t happen. Note: the death effect makes the mob invisible to players and immune to melee attacks. When used on players, they are shown the respawn menu, but because they are not actually dead, they can only log out. Possible effects are: ARROW_PARTICLES, RABBIT_JUMP, DEATH, HURT, SHEEP_EAT, WOLF_HEARTS, WOLF_SHAKE, WOLF_SMOKE, IRON_GOLEM_ROSE, VILLAGER_HEART, VILLAGER_ANGRY, VILLAGER_HAPPY, WITCH_MAGIC, ZOMBIE_TRANSFORM, FIREWORK_EXPLODE, LOVE_HEARTS, SQUID_ROTATE, ENTITY_POOF, GUARDIAN_TARGET, SHIELD_BLOCK, SHIELD_BREAK, ARMOR_STAND_HIT, THORNS_HURT, IRON_GOLEM_SHEATH, TOTEM_RESURRECT, HURT_DROWN, HURT_EXPLOSION, DOLPHIN_FED, RAVAGER_STUNNED, CAT_TAME_FAIL, CAT_TAME_SUCCESS, VILLAGER_SPLASH, PLAYER_BAD_OMEN_RAID, HURT_BERRY_BUSH, FOX_CHEW, TELEPORT_ENDER, BREAK_EQUIPMENT_MAIN_HAND, BREAK_EQUIPMENT_OFF_HAND, BREAK_EQUIPMENT_HELMET, BREAK_EQUIPMENT_CHESTPLATE, BREAK_EQUIPMENT_LEGGINGS, or BREAK_EQUIPMENT_BOOTS]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5672</id>
	<key><![CDATA[[%sstring id%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5673</id>
	<key><![CDATA[string id]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5674</id>
	<key><![CDATA[Tests whether the thread with the given id (or the current thread if none is provided) is interrupted via x_interrupt. If the thread doesn&apos;t exist, or is not alive, false is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5675</id>
	<key><![CDATA[Clears the interrupt status of the current thread. If this call actually cleared the interrupt status, true is returned, if the thread was already not interrupted, false is returned.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5676</id>
	<key><![CDATA[Waits for the thread with the given id to exit. By default, we wait potentially forever, but if maxWait is specified, we will only wait that many milliseconds. (Sending 0 for this value causes an infinite wait.) If the timeout occurs or thread interrupted, an InterruptedException is thrown. If the id is unknown, this function will directly return]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5677</id>
	<key><![CDATA[Interrupts the thread with the given id, or the current thread if no id is given. When a thread is interrupted, its interrupt status is set to true. This status can be checked using the x_is_interrupted and x_clear_interrupt function. Note that some blocking functions will throw an InterruptedException when the thread on which they are executed is interrupted.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5678</id>
	<key><![CDATA[Sleeps the script for the specified number of seconds, up to the maximum time limit defined in the preferences file. Seconds may be a double value, so 0.5 would be half a second. If the &quot;interrupt status&quot; is true then throw InterruptedException PLEASE NOTE: Sleep times are NOT very accurate, and should not be relied on for preciseness.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5679</id>
	<key><![CDATA[string id, %s[%sint maxWait%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5680</id>
	<key><![CDATA[Tests if this thread with the given id is alive. A thread is alive if it has been started and has not yet died.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5717</id>
	<key><![CDATA[Changes a block temporarily for the specified player. This can be used to &quot;fake&quot; blocks for a player. These illusory blocks will disappear when the client updates them, most often by clicking on them or reloading the chunks. Sending %s will reset the block to its existing state in the world. A block type or blockdata format is supported. (see set_blockdata_string())]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5725</id>
	<key><![CDATA[Multiplies a string the given number of times. For instance, string_multiply(&apos;a&apos;, 3) returns &apos;aaa&apos;. If the string is empty, an empty string is returned. If the string is %s, %s is returned. If times is 0, an empty string is returned. All other string values are multiplied accordingly. Providing a value less than 0 for times results in a RangeException. When the maximum string size of 2147483647 characters would be exceeded, a RangeException is thrown.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5735</id>
	<key><![CDATA[Set the current day number of a given world]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5736</id>
	<key><![CDATA[Returns the current day number of the specified world]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5737</id>
	<key><![CDATA[[%sworld%s]%s, day]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5749</id>
	<key><![CDATA[Creates a new resource, which is stored in memory. Various functions require resources of certain types, which are created with this function. Barring resources that you intend on keeping around indefinitely, each call to res_create_resource should be paired with a res_free_resource, being careful to catch any exceptions and still calling res_free_resource anyways. Each resource has its own data to create the resource. Type may be one of: XML_DOCUMENT, STRING_BUILDER, or RANDOM It&apos;s worth noting that this function (and any function that relies on it) is a stopgap measure, and will eventually be deprecated and removed. For certain types of operations, it&apos;s completely unweildy to implement them in a procedural manner, so this is a temporary alternative to proper object support.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5753</id>
	<key><![CDATA[Gets the charge value of the player&apos;s attack cooldown. This is a  double with range 0.0-1.0 inclusive. 1.0 is fully charged, while 0.0 is no charge. (Spigot versions prior to 1.15.2 will always return 1.0)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5760</id>
	<key><![CDATA[Returns an int, read in as an 8 bit signed byte, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5761</id>
	<key><![CDATA[Returns an int, read in as a 64 bit signed long, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5762</id>
	<key><![CDATA[Writes an int, interpreted as an 16 bit signed short, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5763</id>
	<key><![CDATA[Writes an int, interpreted as an 8 bit signed byte, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5764</id>
	<key><![CDATA[Returns an int, read in as a 32 bit signed int, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5765</id>
	<key><![CDATA[Writes an int, interpreted as a 64 bit signed long, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5766</id>
	<key><![CDATA[Writes an int, interpreted as a 32 bit signed int, starting from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5767</id>
	<key><![CDATA[Returns an int, read in as a 16 bit signed short, from the given position, or wherever the marker is currently at by default.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5772</id>
	<key><![CDATA[Parses tabular data into an array [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5773</id>
	<key><![CDATA[string table, %s[%sarray options%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5789</id>
	<key><![CDATA[path, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5790</id>
	<key><![CDATA[Reads in a file from the file system at location var1 and returns it as a string. The path is relative to the file that is being run, not CommandHelper. If the file is not found, or otherwise can&apos;t be read in, an IOException is thrown. If the file specified is not within base-dir (as specified in the preferences file), a SecurityException is thrown. The line endings for the string returned will always be \n, even if they originally were \r\n. Encoding defaults to UTF-8 if not specified.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5791</id>
	<key><![CDATA[Returns the value of a file at compile time only. Unlike read, this runs and is fully resolved at compile time. This is useful for optimization reasons, if you have a file that is unchanging, this can be used instead of read(), to prevent a runtime hit each time the code is executed. Otherwise, this method is equivalent to read(). The path must be fully resolved at compile time. Encoding is optional, and defaults to UTF-8.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5792</id>
	<key><![CDATA[file, %s[%sencoding%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5793</id>
	<key><![CDATA[file, %s[%sencoding%s]%s, callback]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5796</id>
	<key><![CDATA[entityUUID, itemArray]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5797</id>
	<key><![CDATA[Returns the displayed item for some projectiles. This can be used on throwable projectiles (snowballs, eggs, exp bottles, enderpearls) as well as large and small fireballs.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5798</id>
	<key><![CDATA[Sets the displayed item for some projectiles. This can be used on throwable projectiles (snowballs, eggs, exp bottles, enderpearls) as well as large and small fireballs.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5799</id>
	<key><![CDATA[Returns the source file that this key will store a value to in the Persistence Network. For instance, in your persistence.ini file, if you have the entry &quot;storage.test.**=json:///path/to/file.json&quot;, then reflect_value_source(&apos;storage.test.testing&apos;) would return &apos;json:///path/to/file.json&apos;. This is useful for debugging, as it will definitively trace back the source/destination of a value. Note that unlike get and store_value, the &quot;storage&quot; prefix is required, if you&apos;re searching for values that are stored using these functions.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5801</id>
	<key><![CDATA[array1, array2, %s[%scomparisonMode%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5802</id>
	<key><![CDATA[prototypes...]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5804</id>
	<key><![CDATA[Returns a closure which can be provided to tabcompleters or run manually, which provides an easy to use syntax for simple to moderately complex tab completion scenarios. Note that this cannot be used in all cases, particularly where there are variable length arguments. In these cases, it&apos;s best to write the closure yourself. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5818</id>
	<key><![CDATA[Registers a command to the server&apos;s command list, or updates an existing one. Options is an associative array that can have the following keys: description, usage, permission, noPermMsg, aliases, tabcompleter, and/or executor. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5825</id>
	<key><![CDATA[Returns a new array, which contains all the values in the left array, which are not present in the right array.  comparisonMode defaults to HASH, but may also be EQUALS or STRICT_EQUALS. A closure may be sent instead, which should return true if the two values are considered equals or not. [[%s|See more...]]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5830</id>
	<key><![CDATA[Runs a command as a particular online player. The special name &apos;~console&apos; can be used to run it as console. If you want to run the command as if the player was op, use %s instead. If the first argument is an array of usernames, the command will be run in the context of each user in the array.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5969</id>
	<key><![CDATA[Returns the color modifier given a color name. If the given color name isn&apos;t valid, white is used instead. The list of valid colors is: BLACK, DARK_BLUE, DARK_GREEN, DARK_AQUA, DARK_RED, DARK_PURPLE, GOLD, GRAY, DARK_GRAY, BLUE, GREEN, AQUA, RED, LIGHT_PURPLE, YELLOW, WHITE, RANDOM, BOLD, STRIKETHROUGH, UNDERLINE, ITALIC, or PLAIN_WHITE, in addition the integers 0-15 will work, or the hex numbers from 0-F, and k, l, m, n, o, and r, which represent styles. Additionally, any RGB colour can be used in the hex format &apos;#rrggbb&apos;. Unlike manually putting in the color symbol, using this function will return the platform&apos;s color code, so if you are wanting to keep your scripts platform independent, it is a much better idea to use this function as opposed to hard coding your own color codes.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5979</id>
	<key><![CDATA[Once the bar is created, it can be shown to specified players with %s and the display can be modified with]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5980</id>
	<key><![CDATA[Creates a world with the specified options. If a world by that name already exists, it will instead be loaded from disk, and the last three arguments may be ignored. The name is the name of the world, type is one of NORMAL, FLAT, VERSION_1_1, LARGE_BIOMES, AMPLIFIED, CUSTOMIZED, BUFFET and environment is one of NORMAL, NETHER, THE_END, CUSTOM. The seed can be an integer, a string (will be the hashcode), or %s (will be random int). Generator is the name of a world generator loaded on the server.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6102</id>
	<key><![CDATA[Returns an associative array containing the values of all existing gamerules for the given world. If the gameRule parameter is specified, the function only returns that one value instead of an array. The gameRule can be ANNOUNCEADVANCEMENTS, COMMANDBLOCKOUTPUT, DISABLEELYTRAMOVEMENTCHECK, DISABLERAIDS, DODAYLIGHTCYCLE, DOENTITYDROPS, DOFIRETICK, DOIMMEDIATERESPAWN, DOINSOMNIA, DOLIMITEDCRAFTING, DOMOBLOOT, DOMOBSPAWNING, DOPATROLSPAWNING, DOTILEDROPS, DOTRADERSPAWNING, DOWEATHERCYCLE, DROWNINGDAMAGE, FALLDAMAGE, FIREDAMAGE, FORGIVEDEADPLAYERS, FREEZEDAMAGE, KEEPINVENTORY, LOGADMINCOMMANDS, MAXCOMMANDCHAINLENGTH, MAXENTITYCRAMMING, MOBGRIEFING, NATURALREGENERATION, PLAYERSSLEEPINGPERCENTAGE, RANDOMTICKSPEED, REDUCEDDEBUGINFO, SENDCOMMANDFEEDBACK, SHOWDEATHMESSAGES, SPAWNRADIUS, SPECTATORSGENERATECHUNKS, or UNIVERSALANGER.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6103</id>
	<key><![CDATA[Returns an array of all entities within the given distance from the location. Set type argument to filter entities to a specific entity type. You can pass an array of types. Valid types (case doesn&apos;t matter): DROPPED_ITEM, MAGMA_CUBE, SILVERFISH, MULE, HOGLIN, HUSK, VINDICATOR, PILLAGER, SHULKER_BULLET, VILLAGER, AREA_EFFECT_CLOUD, PAINTING, TURTLE, TRADER_LLAMA, SMALL_FIREBALL, CAVE_SPIDER, SLIME, DROWNED, FIREBALL, EVOKER, MARKER, MINECART_HOPPER, ENDERMITE, AXOLOTL, PLAYER, SALMON, ZOMBIE, GOAT, STRIDER, PANDA, MINECART_COMMAND, OCELOT, ENDERMAN, ZOMBIE_VILLAGER, LLAMA, ENDER_DRAGON, WITCH, EXPERIENCE_ORB, ITEM_FRAME, WITHER, ARROW, CREEPER, ILLUSIONER, COD, ENDER_EYE, ZOMBIE_HORSE, MINECART_TNT, FIREWORK, PRIMED_TNT, RAVAGER, BOAT, SHULKER, FISHING_HOOK, BEE, PHANTOM, BLAZE, SKELETON_HORSE, COW, WANDERING_TRADER, PIG, ZOGLIN, MINECART_MOB_SPAWNER, WOLF, IRON_GOLEM, SHEEP, VEX, ENDER_PEARL, TRIDENT, PIGLIN_BRUTE, POLAR_BEAR, MINECART, SNOWMAN, MINECART_CHEST, LEASH_HITCH, SQUID, DRAGON_FIREBALL, ELDER_GUARDIAN, HORSE, ARMOR_STAND, LIGHTNING, PARROT, EVOKER_FANGS, FOX, GIANT, STRAY, SPECTRAL_ARROW, CAT, RABBIT, DONKEY, GLOW_ITEM_FRAME, ENDER_CRYSTAL, TROPICAL_FISH, SPIDER, SKELETON, WITHER_SKELETON, MUSHROOM_COW, CHICKEN, ZOMBIFIED_PIGLIN, SNOWBALL, THROWN_EXP_BOTTLE, GLOW_SQUID, WITHER_SKULL, PUFFERFISH, GUARDIAN, EGG, LLAMA_SPIT, FALLING_BLOCK, SPLASH_POTION, PIGLIN, GHAST, BAT, DOLPHIN, MINECART_FURNACE, or UNKNOWN]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6104</id>
	<key><![CDATA[Sets the value of the gamerule for the specified world. If world is not given the value is set for all worlds. Returns true if successful. gameRule can be ANNOUNCEADVANCEMENTS, COMMANDBLOCKOUTPUT, DISABLEELYTRAMOVEMENTCHECK, DISABLERAIDS, DODAYLIGHTCYCLE, DOENTITYDROPS, DOFIRETICK, DOIMMEDIATERESPAWN, DOINSOMNIA, DOLIMITEDCRAFTING, DOMOBLOOT, DOMOBSPAWNING, DOPATROLSPAWNING, DOTILEDROPS, DOTRADERSPAWNING, DOWEATHERCYCLE, DROWNINGDAMAGE, FALLDAMAGE, FIREDAMAGE, FORGIVEDEADPLAYERS, FREEZEDAMAGE, KEEPINVENTORY, LOGADMINCOMMANDS, MAXCOMMANDCHAINLENGTH, MAXENTITYCRAMMING, MOBGRIEFING, NATURALREGENERATION, PLAYERSSLEEPINGPERCENTAGE, RANDOMTICKSPEED, REDUCEDDEBUGINFO, SENDCOMMANDFEEDBACK, SHOWDEATHMESSAGES, SPAWNRADIUS, SPECTATORSGENERATECHUNKS, or UNIVERSALANGER.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6105</id>
	<key><![CDATA[Sets the text on a sign to be glowing or not.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6106</id>
	<key><![CDATA[locationArray, isGlowing]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6107</id>
	<key><![CDATA[Generates a tree at the given location and returns if the generation succeeded or not. The treeType can be TREE, BIG_TREE, REDWOOD, TALL_REDWOOD, BIRCH, JUNGLE, SMALL_JUNGLE, JUNGLE_BUSH, RED_MUSHROOM, BROWN_MUSHROOM, SWAMP, ACACIA, DARK_OAK, COCOA_TREE, MEGA_REDWOOD, TALL_BIRCH, CHORUS_PLANT, CRIMSON_FUNGUS, WARPED_FUNGUS, or AZALEA, defaulting to TREE.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6108</id>
	<key><![CDATA[Returns true if the sign at this location has glowing text.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6157</id>
	<key><![CDATA[Returns if the given object has metadata registered with this key. object can be a location array (it will designate a block), an entityID (it will designate an entity) or a string (it will designate a world). If only the key is given, the object is the current player. If the plugin is given, the function returns if the plugin have registered a metadata in the object with the given key. See get_metadata() for more information about Bukkit metadata.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6158</id>
	<key><![CDATA[Returns the metadata values attached to the given object. object can be a location array (it will designate a block), an entityID (it will designate an entity) or a string (it will designate a world). If only the key is given, the object is the current player. The function returns an associative array where the values are keyed by plugin which have registered the metadata with the given key, and the array values the registered metadata values. If the plugin argument is given (a string that represent the plugin name), the function simply returns the value of the metadata registered by the plugin with this key, or %s if no metadata is found. --- The Bukkit metadata allow to attach information to entities, blocks and worlds, and allow plugins to exchange these information between them without requiring one to be dependant on each other. The metadata are persistent across server reloads, but not across server restarts. The metadata attached to a player are also persistent between logins.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6159</id>
	<key><![CDATA[Registers a metadata value in the given object with the given key. object can be a location array (it will designate a block), an entityID (it will designate an entity) or a string (it will designate a world). If only the key and the value are given, the object is the current player. You can specify the plugin that will own the metadata, &apos;MethodScript&apos; by default. See get_metadata() for more information about Bukkit metadata.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6160</id>
	<key><![CDATA[Remove the metadata in the given object at the given key. object can be a location array (it will designate a block), an entityID (it will designate an entity) or a string (it will designate a world). If only the key is given, the object is the current player. If no plugin is given, the function removes all metadata at the given key, otherwise only the value set by the given plugin. See get_metadata() for more information about Bukkit metadata.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6161</id>
	<key><![CDATA[This class allows manipulation of bukkit metadata.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
</translations>
