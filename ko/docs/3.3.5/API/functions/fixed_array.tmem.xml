<translations>
<comment></comment>
<translationBlock>
	<id>ko-311</id>
	<key><![CDATA[No]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-2878</id>
	<key><![CDATA[Examples]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3788</id>
	<key><![CDATA[Vital Info]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3789</id>
	<key><![CDATA[Find a bug in this page? %sEdit this page yourself, then submit a pull request.%s (Note this page is automatically generated from the documentation in the source code.)]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3791</id>
	<key><![CDATA[Usages]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3792</id>
	<key><![CDATA[Sorry, there are no examples for this function! :(]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3805</id>
	<key><![CDATA[See Also]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-3813</id>
	<key><![CDATA[None]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5152</id>
	<key><![CDATA[About]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5153</id>
	<key><![CDATA[Home]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5154</id>
	<key><![CDATA[Privacy Policy]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5155</id>
	<key><![CDATA[Sponsors]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5156</id>
	<key><![CDATA[Help]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5157</id>
	<key><![CDATA[Team. All rights reserved.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-5158</id>
	<key><![CDATA[Docs]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6341</id>
	<key><![CDATA[ClassType type, int size, %s[%sboolean %sOut%s]]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
<translationBlock>
	<id>ko-6344</id>
	<key><![CDATA[Creates an array that can hold values of the given type, and is of the given size. The array cannot be resized or retyped later. The array cannot be associative. In general, this isn't meant for normal use, and unless you have specific need for a fixed_size array, array() should be used instead. This is instead meant for writing low level system code. On the other hand, for performance sensitive needs, this may be used instead, though note that most of the API does not accept fixed_arrays (though it does implement ArrayAccess, and so can be used in most read only array based functions), nor will it in the future. This does however map to the underlying system array closely, and so can in particular be used to integrate more directly with the system. fixed_array isn't a particularly flexible type, but it isn't meant to be, it's meant to more directly map to the lower level part of the system. %sOut defaults to true, and in the interpreter is irrelevant, but for native code, if set to true, this loops through the array and sets each value to %s (or equivalent for primitive types). This takes additional work, but sets the value to a known state. This can be bypassed if the array is about to be filled from 0 to length, but should otherwise always be set to true. A RangeException is thrown if size is negative, or larger than a 32 bits signed integer. A CastException is thrown when size cannot be cast to an int.]]></key>
	<comment></comment>
	<translation></translation>
	<auto></auto>
</translationBlock>
</translations>
